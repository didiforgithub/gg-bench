# Number Collapse

## Objective

The objective of **Number Collapse** is to strategically remove numbers from a shared grid to accumulate points. Players aim to reach or exceed a target score before their opponent by selecting numbers that maximize their own score while limiting their opponent's options. The first player to achieve the target score wins the game.

## Setup

1. **Grid Preparation**:
   - Arrange numbers **1** to **9** randomly in a **3x3 grid**. Each number is used exactly once.
   - The grid positions are labeled for reference:

     ```
     [1][2][3]
     [4][5][6]
     [7][8][9]
     ```

2. **Player Positions**:
   - Two players are designated as **Player 1** and **Player 2**. Player 1 will make the first move.

3. **Starting Conditions**:
   - Both players begin with a score of **0**.
   - The target score to win the game is **15** points.

## Game Components

- **Grid**:
  - A virtual **3x3 grid** displayed in the command-line interface.
  - Each cell contains a unique number from **1** to **9**.

- **Numbers**:
  - **Digits 1-9** placed in the grid cells.
  - Each number can be selected only once during the game.

- **Player Scores**:
  - A running tally of each player's accumulated points.

- **Grid Labels**:
  - Numerical identifiers or coordinates to facilitate selecting numbers (e.g., positions 1-9).

## Turns

1. **Turn Order**:
   - Players alternate turns, starting with **Player 1**.

2. **Player Actions During a Turn**:
   - **Select a Number**:
     - Choose an available number from the grid by specifying its position.
   - **Score Update**:
     - Add the value of the selected number to the player's score.
   - **Number Removal**:
     - Remove the selected number from the grid.
     - **Cascade Removal**:
       - Remove any adjacent numbers (up, down, left, right) that are **less than** the selected number.
       - Diagonal numbers are **not** affected.
       - Cascaded numbers do **not** contribute to the player's score.

3. **Turn Progression**:
   - After the cascade removal, the turn ends.
   - Control passes to the other player.

## Rules and Mechanics

1. **Number Selection Rules**:
   - Players can select any available number on their turn.
   - Once a number is removed, it cannot be selected again.

2. **Adjacency**:
   - Adjacent numbers are those immediately **up**, **down**, **left**, or **right** of the selected number.
   - Diagonal adjacency does **not** apply.

3. **Cascade Removal Mechanics**:
   - When a number is selected:
     - Check all adjacent positions.
     - If an adjacent number is **less than** the selected number, it is also removed from the grid.
     - Cascaded numbers are removed without affecting any further numbers.

4. **Scoring Mechanics**:
   - Players earn points equal only to the value of the number they select.
   - Cascaded numbers do **not** add to the player's score.

5. **Winning the Game**:
   - The first player to reach a cumulative score of **15** or more wins.
   - If both players reach or exceed **15** points in the same round, the player with the higher score wins.
   - If scores are equal after the grid is emptied, the player who reached the score first wins.

6. **Game End Conditions**:
   - A player reaches **15** or more points.
   - All numbers have been removed from the grid.

7. **Strategic Considerations**:
   - Selecting higher numbers increases your score but may open opportunities for the opponent.
   - Removing numbers can limit the opponent's options in subsequent turns.

## Scoring

- **Player's Score Update**:
  - Add the value of the selected number to the player's total score.
- **Target Score**:
  - The game is won by the first player to achieve a score of **15** or higher.

## Examples

### Example Grid Layout

Initial grid setup:

```
[1][5][9]
[6][2][8]
[7][3][4]
```

### Sample Turn Breakdown

**Turn 1: Player 1**

- **Action**: Selects number **9** at position `[1][3]`.
- **Score Update**: Player 1's score becomes **9**.
- **Cascade Removal**:
  - Adjacent numbers:
    - Left `[1][2]`: **5** (less than 9) - **removed**.
    - Down `[2][3]`: **8** (less than 9) - **removed**.
  - Grid after removal:

    ```
    [1][ ][ ]
    [6][2][ ]
    [7][3][4]
    ```

**Turn 2: Player 2**

- **Action**: Selects number **7** at position `[3][1]`.
- **Score Update**: Player 2's score becomes **7**.
- **Cascade Removal**:
  - Adjacent numbers:
    - Right `[3][2]`: **3** (less than 7) - **removed**.
    - Up `[2][1]`: **6** (less than 7) - **removed**.
  - Grid after removal:

    ```
    [1][ ][ ]
    [ ][2][ ]
    [ ][ ][4]
    ```

**Turn 3: Player 1**

- **Action**: Selects number **4** at position `[3][3]`.
- **Score Update**: Player 1's score becomes **13** (9+4).
- **Cascade Removal**:
  - Adjacent numbers:
    - Left `[3][2]`: Already removed.
    - Up `[2][3]`: Already removed.
  - Grid after removal:

    ```
    [1][ ][ ]
    [ ][2][ ]
    [ ][ ][ ]
    ```

**Turn 4: Player 2**

- **Action**: Selects number **2** at position `[2][2]`.
- **Score Update**: Player 2's score becomes **9** (7+2).
- **Cascade Removal**:
  - Adjacent numbers:
    - Up `[1][2]`: Already removed.
    - Down `[3][2]`: Already removed.
    - Left `[2][1]`: Already removed.
    - Right `[2][3]`: Already removed.
  - Grid after removal remains the same.

**Turn 5: Player 1**

- **Action**: Selects number **1** at position `[1][1]`.
- **Score Update**: Player 1's score becomes **14** (13+1).
- **Cascade Removal**:
  - Adjacent numbers:
    - Right `[1][2]`: Already removed.
    - Down `[2][1]`: Already removed.
  - Grid after removal remains the same.

**Turn 6: Player 2**

- **No available moves**: All remaining numbers are removed or have been selected.

**Game End**:

- **Winner**: Player 1 with **14** points.
- **Reason**: Player 1 has a higher score after all possible moves are exhausted.

**Note**: In this example, although the target score of **15** was not reached, the game ends because there are no more available moves. Player 1 wins by having the higher score.

## Command-Line Interaction Example

**Initial Grid Display**:

```
Current Grid:
[1][5][9]
[6][2][8]
[7][3][4]

Player 1 Score: 0
Player 2 Score: 0
```

**Player 1's Turn**:

```
Player 1, select a number by entering its position (e.g., 1 for [1][1]): 3

You selected number 9 at position [1][3].
Adjacent numbers less than 9 (removed): 5 at [1][2], 8 at [2][3].
Updated Grid:
[1][ ][ ]
[6][2][ ]
[7][3][4]
Player 1 Score: 9
```

**Player 2's Turn**:

```
Player 2, select a number by entering its position: 7

You selected number 7 at position [3][1].
Adjacent numbers less than 7 (removed): 6 at [2][1], 3 at [3][2].
Updated Grid:
[1][ ][ ]
[ ][2][ ]
[ ][ ][4]
Player 2 Score: 7
```

**Subsequent turns continue in this manner until the game concludes.**

---

**Strategies to Consider**:

- **Maximizing Score**:
  - Select high-value numbers to quickly increase your score.
- **Limiting Opponent's Options**:
  - Remove numbers that could benefit your opponent in future turns.
- **Cascade Planning**:
  - Anticipate which numbers will be removed through cascades to control the grid.

---

Enjoy playing **Number Collapse**, and may the most strategic player win!