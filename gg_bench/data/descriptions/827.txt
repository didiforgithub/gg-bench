# Equation Duel

## Objective

The primary goal of **Equation Duel** is to be the first player to construct a valid mathematical equation using the numbers you've collected during the game. Players take turns selecting numbers from a shared pool, aiming to create an equation that balances correctly using basic arithmetic operators. The first player to successfully create and declare a valid equation wins the game.

## Setup

1. **Number Pool:**
   - Create a shared number pool consisting of the digits **1** through **9**.
   - All numbers start as available for selection.

2. **Operators:**
   - Recognize the basic arithmetic operators that can be used to form equations:
     - Addition (**+**)
     - Subtraction (**-**)
     - Multiplication (**×**)
     - Division (**÷**)
   - Parentheses **( )** can be used to define the order of operations.

3. **Starting Player:**
   - Decide which player will take the first turn. This can be done randomly or by mutual agreement.

## Game Components

- **Numbers (1-9):**
  - Digits available for selection. Each number can be selected only once during the game.
  - Once a number is selected, it is removed from the shared number pool.

- **Operators (+, -, ×, ÷):**
  - Symbols used to form equations.
  - Unlimited in use; players can use any operator any number of times.

- **Player Workspace:**
  - Each player maintains their own list of collected numbers.
  - Players attempt to form equations using only their collected numbers.

## Turns

- **Turn Structure:**
  - Players alternate turns throughout the game.
  - **Turn Actions:**
    1. **Number Selection:**
       - On your turn, select one available number from the shared number pool.
    2. **Equation Attempt (Optional):**
       - After selecting a number, you may attempt to create a valid equation using the numbers you've collected so far.
       - If you can form a valid equation, declare it.
       - If the equation is valid, you win.
       - If the equation is invalid, the game continues. You may only attempt to declare an equation once per turn.

- **Turn Progression:**
  - The game continues with players alternating turns until a player wins or all numbers have been selected.

## Rules and Mechanics

### 1. Number Selection

- On each turn, a player **must** select one number from the available numbers in the shared pool.
- Once a number is selected by a player, it is no longer available and cannot be selected again by either player.

### 2. Equation Formation

- **Objective:** Form a valid mathematical equation using the numbers you've collected.
- **Equation Requirements:**
  - Equations must balance correctly (the left side equals the right side).
  - Equations can use any combination of the basic arithmetic operators.
  - Parentheses can be used to specify the order of operations.
  - **All numbers used in the equation must be numbers that the player has collected.**
  - Each collected number can be used only as many times as it has been collected (typically once per number, unless variations allow otherwise).

### 3. Winning the Game

- The first player to declare and demonstrate a valid equation using their collected numbers wins the game.
- The game ends immediately upon a valid equation declaration.

### 4. Invalid Equations

- If a player declares an equation that is mathematically incorrect or violates the rules, the equation is considered invalid, and the game continues.
- **No penalty** is applied for declaring an invalid equation, but the player loses the opportunity to declare an equation until their next turn.

### 5. End of Game Conditions

- **Victory:** A player wins by declaring a valid equation.
- **Sudden Death:** If all numbers are exhausted from the number pool and no player has declared a valid equation:
  - The game continues in **sudden death** mode.
  - Players take turns attempting to form a valid equation using only their collected numbers.
  - No new numbers can be selected.
  - The first player to form a valid equation wins.
- **Final Tie-Breaker:** If neither player can form a valid equation after two full rounds of sudden death:
  - **Highest Sum Wins:** The player with the highest total sum of their collected numbers wins.
  - This ensures the game does not end in a draw.

## Scoring

- **Victory:** The player who first declares a valid equation wins the game.
- **Tie-Breaker:** If no valid equations are formed, the player with the highest sum of collected numbers wins after sudden death.

## Examples

### Example 1

**Turn 1:**

- **Player 1:** Selects number **5**.
  - **Numbers Collected:** Player 1: [5], Player 2: []

**Turn 2:**

- **Player 2:** Selects number **3**.
  - **Numbers Collected:** Player 1: [5], Player 2: [3]

**Turn 3:**

- **Player 1:** Selects number **2**.
  - **Numbers Collected:** Player 1: [5, 2]
- **Equation Attempt:**
  - **Equation:** 5 - 2 = 3
  - **Validity:** Invalid (Player 1 does not have number 3).

**Turn 4:**

- **Player 2:** Selects number **7**.
  - **Numbers Collected:** Player 1: [5, 2], Player 2: [3, 7]
- **Equation Attempt:**
  - **Equation:** 7 - 3 = 4
  - **Validity:** Invalid (Player 2 does not have number 4).

**Turn 5:**

- **Player 1:** Selects number **3**.
  - **Numbers Collected:** Player 1: [5, 2, 3]
- **Equation Attempt:**
  - **Equation:** 5 - 2 = 3
  - **Validity:** Valid
- **Result:** **Player 1 wins.**

### Example 2

**Turn 1:**

- **Player 1:** Picks **4**.
  - **Numbers Collected:** Player 1: [4], Player 2: []

**Turn 2:**

- **Player 2:** Picks **5**.
  - **Numbers Collected:** Player 1: [4], Player 2: [5]

**Turn 3:**

- **Player 1:** Picks **6**.
  - **Numbers Collected:** Player 1: [4, 6], Player 2: [5]

**Turn 4:**

- **Player 2:** Picks **3**.
  - **Numbers Collected:** Player 1: [4, 6], Player 2: [5, 3]

**Turn 5:**

- **Player 1:** Picks **2**.
  - **Numbers Collected:** Player 1: [4, 6, 2], Player 2: [5, 3]
- **Equation Attempt:**
  - **Equation:** 6 ÷ 2 = 3
  - **Validity:** Invalid (Player 1 does not have number 3).

**Turn 6:**

- **Player 2:** Picks **1**.
  - **Numbers Collected:** Player 1: [4, 6, 2], Player 2: [5, 3, 1]
- **Equation Attempt:**
  - **Equation:** (5 + 1) × 3 = 18
  - **Validity:** Invalid (Player 2 does not have number 18).

**Turn 7:**

- **Player 1:** Picks **3**.
  - **Numbers Collected:** Player 1: [4, 6, 2, 3], Player 2: [5, 3, 1]
- **Equation Attempt:**
  - **Equation:** 6 ÷ 2 = 3
  - **Validity:** Valid
- **Result:** **Player 1 wins.**

## Command-Line Interaction Sample

Below is an example of how the game might progress in a command-line interface.

**Starting Game**

```
Available Numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9]
Player 1's Numbers: []
Player 2's Numbers: []
```

**Player 1's Turn**

```
Player 1, select a number from the available numbers.
Available Numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9]
Your Numbers: []

Enter number: 4
Number 4 selected.

Do you want to attempt an equation? (yes/no): no
```

**Player 2's Turn**

```
Player 2, select a number from the available numbers.
Available Numbers: [1, 2, 3, 5, 6, 7, 8, 9]
Your Numbers: []

Enter number: 5
Number 5 selected.

Do you want to attempt an equation? (yes/no): no
```

**Player 1's Turn**

```
Player 1, select a number from the available numbers.
Available Numbers: [1, 2, 3, 6, 7, 8, 9]
Your Numbers: [4]

Enter number: 6
Number 6 selected.

Do you want to attempt an equation? (yes/no): yes
Enter your equation using your numbers: 6 - 4 = 2

Equation is invalid (you do not have number 2). Turn ends.
```

**Player 2's Turn**

```
Player 2, select a number from the available numbers.
Available Numbers: [1, 2, 3, 7, 8, 9]
Your Numbers: [5]

Enter number: 3
Number 3 selected.

Do you want to attempt an equation? (yes/no): yes
Enter your equation using your numbers: 5 + 3 = 8

Equation is invalid (you do not have number 8). Turn ends.
```

**Player 1's Turn**

```
Player 1, select a number from the available numbers.
Available Numbers: [1, 2, 7, 8, 9]
Your Numbers: [4, 6]

Enter number: 2
Number 2 selected.

Do you want to attempt an equation? (yes/no): yes
Enter your equation using your numbers: 6 - 4 = 2

Equation is valid! Player 1 wins the game!
```

## Strategic Depth

### Number Selection Strategy

- **Blocking:** Observe the numbers your opponent is collecting and select numbers they might need to form a valid equation.
- **Prioritize Key Numbers:** Numbers like 1, 2, and 3 can be useful in multiple equations. Consider selecting them early.
- **Flexibility:** Choose numbers that can be combined in various ways to increase your chances of forming an equation.

### Equation Planning

- **Plan Ahead:** Think about possible equations before selecting numbers.
- **Balance Risk and Reward:** Attempting an equation too early might give away your strategy.
- **Adaptation:** Be ready to adjust your plan based on the numbers your opponent selects.

### Bluffing and Distraction

- **False Leads:** Attempt an equation you know is invalid to mislead your opponent.
- **Pacing:** Occasionally decline to attempt an equation even if you can, to catch your opponent off-guard on your next turn.

## Game Variations

### Extended Number Pool

- **Numbers:** Use numbers from 1 to 15.
- **Effect:** Increases game length and allows for more complex equations.

### Double Digits Allowed

- **Rule:** Allow players to combine collected numbers to form multi-digit numbers (e.g., if a player has 1 and 2, they can use 12 or 21).
- **Effect:** Adds complexity and new equation possibilities.

### Operator Limitations

- **Rule:** Restrict the operators to addition and subtraction only.
- **Effect:** Increases difficulty by limiting equation options.

## Conclusion

**Equation Duel** is a simple yet strategic game that combines numerical selection with mathematical equation formation. It encourages players to think ahead, anticipate their opponent's moves, and utilize basic arithmetic skills. Designed for a command-line interface, it's easy to code and play, ensuring quick gameplay where a skilled player can consistently outperform an unskilled one through strategic planning and execution.

Enjoy the challenge and may the best mathematician win!