# Countdown Duel - Rule Book

## Objective

**Countdown Duel** is a strategic two-player, turn-based game designed for the command-line interface. The primary goal is to be the first player to reach or exceed the target number of **30** by strategically combining available numbers using basic arithmetic operations. Victory is achieved through careful planning and anticipation of the opponent's moves, allowing skilled players to consistently outperform unskilled players.

---

## Setup

1. **Initial Total**: The game starts with a running total of **0**.
2. **Target Number**: The target number to reach or exceed is **30**.
3. **Player Numbers**: Each player has a personal set of numbers from **1** to **9**.
4. **Number Availability**: All numbers are initially **available** to each player and can be used once per game.

---

## Game Components

- **Players**: Two players participate in the game.
- **Numbers**: Each player has numbers **1** through **9**.
- **Running Total**: A shared total that players modify on their turns.
- **Operations**: Basic arithmetic operations:
  - Addition (**+**)
  - Subtraction (**-**)
  - Multiplication (**\***)
  - Division (**/**)

---

## Turns

1. **Turn Order**: Players decide who goes first (e.g., by flipping a coin).
2. **Turn Actions**:
   - **Select a Number**: Choose one available number from your set.
   - **Choose an Operation**: Select one arithmetic operation to apply.
   - **Apply to Running Total**: Use the operation and number on the current running total.
3. **Update**:
   - The running total is updated based on the operation.
   - The chosen number is now **unavailable** for the rest of the game.
4. **Turn Progression**: Turns alternate between players until the game ends.

---

## Rules and Mechanics

1. **Valid Operations**:
   - **Addition (+)**: `Running Total + Chosen Number`
   - **Subtraction (-)**: `Running Total - Chosen Number`
   - **Multiplication (*)**: `Running Total * Chosen Number`
   - **Division (/)**:
     - **Restriction**: Division by zero is not allowed.
     - **Integer Division**: Use integer division; fractions are discarded (e.g., `7 / 2 = 3`).
2. **Number Usage**:
   - Each number from **1** to **9** can be used **only once per player**.
   - Once a number is used, it is **unavailable** for that player.
3. **Running Total**:
   - The updated running total becomes the starting point for the next player's turn.
   - The running total is shared between players.
4. **Winning the Game**:
   - The first player to **reach or exceed** the target number of **30** on their turn wins.
5. **Invalid Moves**:
   - If a player attempts an invalid operation (e.g., division by zero), they **lose their turn**, and the opponent may play next.
6. **Stalemate Condition**:
   - If neither player can make a valid move with their remaining numbers, the player with the **highest running total** at the end of the game wins.
   - If the running total is tied, the player who took the **last valid turn** wins.

---

## Scoring

- **Winning**: Victory is achieved by being the first to reach or exceed the target running total of **30**.
- **Strategy**: Players must balance the use of high and low numbers and choose operations that advance their position while preventing the opponent from winning.

---

## Examples

### Example Game Play

#### Starting the Game

- **Running Total**: 0
- **Target**: 30
- **Player A's Available Numbers**: 1-9
- **Player B's Available Numbers**: 1-9

#### Turn 1: Player A

1. **Selects Number**: 5
2. **Chooses Operation**: Addition (+)
3. **Calculates**: `0 + 5 = 5`
4. **Updates**:
   - **Running Total**: 5
   - **Player A's Available Numbers**: 1-4, 6-9

#### Turn 2: Player B

1. **Selects Number**: 3
2. **Chooses Operation**: Multiplication (*)
3. **Calculates**: `5 * 3 = 15`
4. **Updates**:
   - **Running Total**: 15
   - **Player B's Available Numbers**: 1-2, 4-9

#### Turn 3: Player A

1. **Selects Number**: 4
2. **Chooses Operation**: Addition (+)
3. **Calculates**: `15 + 4 = 19`
4. **Updates**:
   - **Running Total**: 19
   - **Player A's Available Numbers**: 1-3, 6-9

#### Turn 4: Player B

1. **Selects Number**: 2
2. **Chooses Operation**: Multiplication (*)
3. **Calculates**: `19 * 2 = 38`
4. **Updates**:
   - **Running Total**: 38
   - **Player B's Available Numbers**: 1, 4-9
5. **Result**:
   - **Player B wins**, as the running total (38) exceeds the target (30).

### Additional Example

#### Turn 1: Player A

1. **Selects Number**: 7
2. **Chooses Operation**: Addition (+)
3. **Calculates**: `0 + 7 = 7`

#### Turn 2: Player B

1. **Selects Number**: 9
2. **Chooses Operation**: Multiplication (*)
3. **Calculates**: `7 * 9 = 63`
4. **Result**:
   - **Player B wins**, as the running total (63) exceeds the target (30).

### Strategy Notes

- **High Numbers Early**: Using high numbers with multiplication can quickly reach the target.
- **Blocking**: Players may use operations to keep the running total low, preventing the opponent from winning on the next turn.
- **Number Conservation**: Saving certain numbers for critical moments can be advantageous.

---

## Command-Line Interaction Examples

### Sample Turn Input and Output

#### Player A's Turn

- **Prompt**: "Player A, enter your number and operation (e.g., '+5'): "
- **Input**: "+5"
- **Output**:
  - "Player A adds 5. Running total is now 5."
  - "Player A's available numbers: 1-4, 6-9."

#### Player B's Turn

- **Prompt**: "Player B, enter your number and operation (e.g., '*3'): "
- **Input**: "*3"
- **Output**:
  - "Player B multiplies by 3. Running total is now 15."
  - "Player B's available numbers: 1-2, 4-9."

### Handling Invalid Moves

#### Invalid Operation

- **Prompt**: "Player A, enter your number and operation: "
- **Input**: "/0"
- **Output**:
  - "Invalid move: Division by zero is not allowed."
  - "Player A loses their turn."

### Checking for Game End

- **After Move**:
  - "Running total is now 38."
- **Check**:
  - "Running total has reached or exceeded 30."
  - "Player B wins the game!"

---

## Summary

**Countdown Duel** is a simple yet strategically rich game that challenges players to think ahead and adapt to their opponent's moves. By combining basic arithmetic operations with limited numerical resources, players engage in a mental duel where every decision counts. The game's design ensures quick gameplay and a clear victor, with no possibility of a draw.

Players are encouraged to develop strategies around number usage and operation choice, making each game a unique and engaging experience.

Good luck, and may the best strategist win!

---