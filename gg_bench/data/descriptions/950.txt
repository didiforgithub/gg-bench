# Grid Hunt: Rule Book

---

## Objective

Grid Hunt is a two-player, turn-based strategy game played on a 5x5 grid in a command-line interface. Each player hides a treasure on the grid and takes turns guessing the location of the opponent's treasure. The first player to successfully locate and dig up the opponent's treasure wins the game. There are no draws in Grid Hunt; the game continues until one player wins.

---

## Setup

1. **Grid Initialization**:
   - The game is played on a 5x5 grid, with coordinates ranging from (1,1) to (5,5).
   - Both players share the same grid for gameplay purposes.

2. **Treasure Placement**:
   - Each player secretly selects a unique grid coordinate to hide their treasure.
   - The treasure positions are hidden from the opponent throughout the game.

3. **Starting Conditions**:
   - Both players have three `Scan` actions and unlimited `Dig` actions.
   - Players start with no knowledge of the opponent's treasure location.

---

## Game Components

1. **Grid**:
   - A 5x5 coordinate grid where the game takes place.
   - Coordinates are denoted as `(row, column)`.

2. **Treasures**:
   - Each player has one treasure hidden on the grid.
   - Treasures remain stationary throughout the game.

3. **Actions**:
   - **Scan**:
     - Reveals the Manhattan distance to the opponent's treasure from a specified coordinate.
     - Limited to three uses per player per game.
   - **Dig**:
     - Attempts to uncover the opponent's treasure at a specified coordinate.
     - Unlimited uses.

4. **Manhattan Distance**:
   - The distance calculated as `|x1 - x2| + |y1 - y2|`, where `(x1, y1)` is the player's chosen coordinate and `(x2, y2)` is the opponent's treasure coordinate.

---

## Turns

1. **Turn Order**:
   - Players decide who goes first, either randomly or by mutual agreement.
   - Players alternate turns thereafter.

2. **Turn Structure**:
   - **Action Selection**:
     - On their turn, a player chooses to perform either a `Scan` or a `Dig`.
   - **Action Execution**:
     - The player inputs the coordinates for the chosen action.
     - The game processes the action and provides feedback.

3. **Action Limitations**:
   - **Scan**:
     - Limited to three uses per player for the entire game.
     - Cannot exceed the usage limit.
   - **Dig**:
     - Unlimited uses.
     - Only one action per turn.

---

## Rules and Mechanics

1. **Valid Coordinates**:
   - All coordinates must be within the grid bounds (1 ≤ row ≤ 5, 1 ≤ column ≤ 5).
   - Players cannot choose coordinates outside of the grid.

2. **Scan Action**:
   - The player specifies a coordinate to scan.
   - The game returns the Manhattan distance from the scanned coordinate to the opponent's treasure.
   - Example: "Scan result: Distance is 4."

3. **Dig Action**:
   - The player specifies a coordinate to dig.
   - If the coordinate matches the opponent's treasure location:
     - The player wins the game.
     - Example: "You found the opponent's treasure and won the game!"
   - If the coordinate does not match:
     - The game informs the player that the treasure was not found.
     - Example: "Dig result: No treasure at this location."

4. **Reporting**:
   - All feedback is provided immediately after the action.
   - No extra information is given beyond the specified action results.

5. **Winning the Game**:
   - The first player to successfully dig at the coordinate of the opponent's hidden treasure wins.
   - There are no ties or draws.

---

## Scoring

- **Victory Condition**:
  - Locate and dig up the opponent's hidden treasure.
- **No Point System**:
  - Grid Hunt does not use a point-based scoring system.
  - The game is won outright by fulfilling the victory condition.

---

## Examples

### Example Scenario

**Game Start**

- Player 1 hides their treasure at coordinate (2,3).
- Player 2 hides their treasure at coordinate (5,5).

---

**Turn 1**

- **Player 1's Turn**
  - Chooses to `Scan`.
  - Inputs coordinate (3,3).
  - **Result**: "Scan result: Distance is 4."
    - Calculation: |5 - 3| + |5 - 3| = 2 + 2 = 4.
  - Remaining Scans: 2.

---

**Turn 2**

- **Player 2's Turn**
  - Chooses to `Scan`.
  - Inputs coordinate (1,1).
  - **Result**: "Scan result: Distance is 3."
    - Calculation: |2 - 1| + |3 - 1| = 1 + 2 = 3.
  - Remaining Scans: 2.

---

**Turn 3**

- **Player 1's Turn**
  - Chooses to `Scan`.
  - Inputs coordinate (4,4).
  - **Result**: "Scan result: Distance is 2."
    - Calculation: |5 - 4| + |5 - 4| = 1 + 1 = 2.
  - Remaining Scans: 1.

---

**Turn 4**

- **Player 2's Turn**
  - Chooses to `Dig`.
  - Inputs coordinate (2,2).
  - **Result**: "Dig result: No treasure at this location."
  
---

**Turn 5**

- **Player 1's Turn**
  - Chooses to `Dig`.
  - Inputs coordinate (5,5).
  - **Result**: "You found the opponent's treasure and won the game!"
  - **Player 1 Wins**

---

## Command-Line Interaction Example

Below is a sample of how the game might be played in a command-line interface.

---

**Game Start**

```
Welcome to Grid Hunt!

Player 1, hide your treasure.
Enter row (1-5): [Hidden]
Enter column (1-5): [Hidden]

Player 2, hide your treasure.
Enter row (1-5): [Hidden]
Enter column (1-5): [Hidden]

Let the game begin!
```

---

**Turn 1**

```
Player 1's turn.
Choose an action:
1. Scan (2 Scans remaining)
2. Dig
Enter your choice (1 or 2): 1
Enter scan coordinates.
Row (1-5): 3
Column (1-5): 3
Scan result: Distance is 4.
```

---

**Turn 2**

```
Player 2's turn.
Choose an action:
1. Scan (2 Scans remaining)
2. Dig
Enter your choice (1 or 2): 1
Enter scan coordinates.
Row (1-5): 1
Column (1-5): 1
Scan result: Distance is 3.
```

---

**Turn 3**

```
Player 1's turn.
Choose an action:
1. Scan (1 Scans remaining)
2. Dig
Enter your choice (1 or 2): 1
Enter scan coordinates.
Row (1-5): 4
Column (1-5): 4
Scan result: Distance is 2.
```

---

**Turn 4**

```
Player 2's turn.
Choose an action:
1. Scan (1 Scans remaining)
2. Dig
Enter your choice (1 or 2): 2
Enter dig coordinates.
Row (1-5): 2
Column (1-5): 2
Dig result: No treasure at this location.
```

---

**Turn 5**

```
Player 1's turn.
Choose an action:
1. Scan (0 Scans remaining)
2. Dig
Enter your choice (1 or 2): 2
Enter dig coordinates.
Row (1-5): 5
Column (1-5): 5
You found the opponent's treasure and won the game!
```

---

## Strategic Depth

- **Efficient Use of Scans**:
  - With only three scans available, players must choose scan locations wisely to maximize information.

- **Deduction Skills**:
  - Use the results of scans to narrow down possible treasure locations.
  - Calculate potential coordinates based on distance information.

- **Balancing Actions**:
  - Decide between gathering more information (scanning) or taking a risk to dig based on deductions.

- **Mind Games**:
  - Anticipate the opponent's hiding strategy.
  - Consider common hiding spots and patterns.

---

## Conclusion

Grid Hunt combines strategy, deduction, and a bit of luck in a simple yet engaging command-line game. By carefully interpreting scan results and making calculated digs, a skilled player can consistently outmaneuver an unskilled opponent. The game's mechanics promote quick gameplay while offering depth for strategic thinking.

Have fun playing Grid Hunt, and may the best treasure hunter win!