# GridLock: A Two-Player Command-Line Strategy Game

## Objective

Be the last player able to make a valid move on the grid. Players take turns placing their markers on a shared grid, adhering to placement rules. The player who makes the last valid move wins the game.

## Setup

1. **Grid Initialization**: The game is played on a 4x4 grid, with cells labeled from `(1,1)` to `(4,4)`.
2. **Starting Conditions**:
   - All cells are empty at the beginning of the game.
   - Players decide who will take the first turn (Player 1 and Player 2).

## Game Components

- **Grid**: A 4x4 grid consisting of 16 cells.
- **Markers**:
  - **Player 1's Marker**: `X`
  - **Player 2's Marker**: `O`
- **Command-Line Interface**: Players input their moves by specifying the row and column of their desired cell.

## Turns

- **Turn Structure**:
  1. **Input**: The current player selects an empty cell by entering its coordinates `(row, column)`.
  2. **Validation**: The game checks if the move is valid according to the rules.
  3. **Placement**: If valid, the player's marker is placed in the chosen cell.
  4. **Update**: The game updates the last played cell to the current one.
  5. **Switch**: The turn switches to the other player.

- **First Turn Special Rule**:
  - On the first turn, there is no restriction on the placement; Player 1 can place their marker in any empty cell.

## Rules and Mechanics

1. **Marker Placement Rules**:
   - **First Move**: Player 1 can place their `X` on any empty cell.
   - **Subsequent Moves**:
     - Players must place their marker on an empty cell that is **adjacent** to the **last cell played** (by the opponent).
     - Adjacent cells are those that are directly **up**, **down**, **left**, or **right** of the last played cell. Diagonal placements are **not allowed**.
     - If there are multiple adjacent empty cells, the player can choose any of them.

2. **Invalid Moves**:
   - If a player attempts to place a marker on a non-adjacent or occupied cell, the move is invalid, and they must choose a valid cell.
   - If a player has no valid moves (no adjacent empty cells to the last played cell), they lose the game.

3. **Winning the Game**:
   - The game ends when a player cannot make a valid move on their turn.
   - The **other player** (the last one to have successfully placed a marker) is declared the **winner**.

## Scoring

- **Victory Condition**: There is no point system. The goal is to be the last player to make a valid move.
- **Winner**: The player who forces their opponent into a position where they have no valid moves wins the game.

## Examples

### Example Game Play

#### Initial Grid State

All cells are empty.

```
[ ][ ][ ][ ]
[ ][ ][ ][ ]
[ ][ ][ ][ ]
[ ][ ][ ][ ]
```

#### Turn 1: Player 1 (`X`)

- **Input**: `(2,2)`
- **Action**: Places `X` at cell `(2,2)`.

**Grid**:

```
[ ][ ][ ][ ]
[ ][X][ ][ ]
[ ][ ][ ][ ]
[ ][ ][ ][ ]
```

#### Turn 2: Player 2 (`O`)

- **Valid Moves**: Must place `O` adjacent to `(2,2)`.
- **Options**: `(1,2)`, `(3,2)`, `(2,1)`, `(2,3)`
- **Input**: `(2,3)`
- **Action**: Places `O` at cell `(2,3)`.

**Grid**:

```
[ ][ ][ ][ ]
[ ][X][O][ ]
[ ][ ][ ][ ]
[ ][ ][ ][ ]
```

#### Turn 3: Player 1 (`X`)

- **Valid Moves**: Must place `X` adjacent to `(2,3)`.
- **Options**: `(1,3)`, `(3,3)`, `(2,2)` (occupied), `(2,4)`
- **Input**: `(3,3)`
- **Action**: Places `X` at cell `(3,3)`.

**Grid**:

```
[ ][ ][ ][ ]
[ ][X][O][ ]
[ ][ ][X][ ]
[ ][ ][ ][ ]
```

#### Turn 4: Player 2 (`O`)

- **Valid Moves**: Must place `O` adjacent to `(3,3)`.
- **Options**: `(2,3)`, `(4,3)`, `(3,2)`, `(3,4)`
- **Note**: `(2,3)` is occupied.
- **Input**: `(3,2)`
- **Action**: Places `O` at cell `(3,2)`.

**Grid**:

```
[ ][ ][ ][ ]
[ ][X][O][ ]
[ ][O][X][ ]
[ ][ ][ ][ ]
```

#### Subsequent Turns

Players continue to take turns, following the placement rules.

#### End Game Scenario

Suppose it's Player 2's turn, and there are no empty cells adjacent to the last played cell by Player 1.

- **Player 2** cannot make a valid move.
- **Player 1** is declared the **winner**.

## Command-Line Interaction Example

- **Prompt**: Indicates which player's turn it is and requests input.

```
Player 1 (X), enter your move (row,column): 2,2
[Game updates the grid and displays it]

Player 2 (O), enter your move adjacent to (2,2): 2,3
[Game updates the grid and displays it]

Player 1 (X), enter your move adjacent to (2,3): 3,3
[Game updates the grid and displays it]
```

- **Invalid Move Example**:

```
Player 2 (O), enter your move adjacent to (3,3): 1,1

Invalid move. Please select an empty cell adjacent to (3,3): 3,2
[Game updates the grid and displays it]
```

- **Winning Scenario**:

```
Player 2 (O), no valid moves remaining. Player 1 (X) wins the game!
```

## Strategy Tips

- **Control the Center**: Placing markers in central locations can give you more adjacent options.
- **Limit Opponent's Moves**: Aim to force your opponent into areas with fewer empty adjacent cells.
- **Plan Ahead**: Anticipate possible moves and counter-moves to trap your opponent.

---

**Enjoy playing GridLock! Sharpen your strategic thinking and outmaneuver your opponent in this exciting battle of wits.**