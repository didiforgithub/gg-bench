{
  "goal": "I want to cluster these game descriptions by their central themes, reflecting the primary subject or strategy of the game.",
  "texts": [
    "# Palindrome Duel: A Two-Player Command-Line Game\n\n## Objective\n\n**Palindrome Duel** is a strategic two-player turn-based game where players take turns adding their symbol to a shared sequence. The primary goal is to avoid creating a palindrome of three or more consecutive symbols. The player who forces the creation of such a palindrome on their turn loses the game. Victory is achieved by strategically placing symbols to corner your opponent into making a palindrome.\n\n## Setup\n\n- The game starts with an empty sequence that can hold up to **11** symbols.\n- Each player chooses a unique symbol:\n  - **Player 1**: `X`\n  - **Player 2**: `O`\n- Determine who will take the first turn (e.g., by a coin toss or mutual agreement).\n\n## Game Components\n\n- **Sequence**: A linear array (list) that represents the shared sequence of symbols. It has a maximum capacity of **11** positions.\n- **Symbols**:\n  - `X`: Represents the symbols placed by Player 1.\n  - `O`: Represents the symbols placed by Player 2.\n- **Positions**: The sequence positions are indexed from **1** (leftmost) to **N** (rightmost), where **N** is the current length of the sequence.\n\n## Turns\n\n- Players alternate turns throughout the game.\n- **On each turn**, a player must:\n  1. **Choose a Side**: Decide to add their symbol to the **left** or **right** end of the sequence.\n  2. **Place Symbol**: Add their symbol (`X` or `O`) to the chosen end.\n- The sequence grows by one symbol each turn until it reaches the maximum length or the game ends.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Adding Symbols**:\n   - Players can only add their own symbol (`X` or `O`).\n   - Symbols are only added to either end of the sequence (leftmost or rightmost position).\n\n2. **Creating Palindromes**:\n   - After a player adds their symbol, the sequence is checked for **palindromes of length 3 or more**.\n   - **Palindrome Definition**: A sequence that reads the same forward and backward (e.g., `XOX`, `OOO`, `XOOX`).\n   - **Overlap Allowed**: Palindromes can overlap with previously placed symbols.\n\n3. **Losing the Game**:\n   - If the placement of a symbol results in the formation of any palindrome of length **3 or more**, the player who placed the symbol **loses the game**.\n\n4. **Winning the Game**:\n   - A player wins if their opponent is forced to create a palindrome on their turn.\n   - If the sequence reaches its maximum length (**11 symbols**) without any palindromes of length 3 or more being formed, **the last player to have placed a symbol wins**.\n\n### Special Conditions\n\n- **Forced Move**: Players must place a symbol on their turn; skipping a turn is not allowed.\n- **Game End**: The game ends immediately when a palindrome of required length is formed.\n\n## Scoring\n\n- **Win**: The winning player receives 1 point.\n- **Loss**: The losing player receives 0 points.\n- **Match Play**: Players can play multiple rounds, keeping track of their total score over several games.\n\n## Examples\n\n### Example Scenario 1\n\n**Sequence State**: (Empty)\n\n- **Turn 1**:\n  - **Player**: 1 (`X`)\n  - **Action**: Adds `X` to the left.\n  - **Sequence**: `X`\n\n- **Turn 2**:\n  - **Player**: 2 (`O`)\n  - **Action**: Adds `O` to the right.\n  - **Sequence**: `X O`\n\n- **Turn 3**:\n  - **Player**: 1 (`X`)\n  - **Action**: Adds `X` to the right.\n  - **Sequence**: `X O X`\n  - **Check for Palindromes**:\n    - Subsequence `X O X` is a palindrome of length 3.\n  - **Result**: **Player 1 loses** (created a palindrome of length 3).\n\n### Example Scenario 2\n\n**Sequence State**: (Empty)\n\n- **Turn 1**:\n  - **Player**: 1 (`X`)\n  - **Action**: Adds `X` to the right.\n  - **Sequence**: `X`\n\n- **Turn 2**:\n  - **Player**: 2 (`O`)\n  - **Action**: Adds `O` to the left.\n  - **Sequence**: `O X`\n\n- **Turn 3**:\n  - **Player**: 1 (`X`)\n  - **Action**: Adds `X` to the left.\n  - **Sequence**: `X O X`\n  - **Check for Palindromes**:\n    - Subsequence `X O X` is a palindrome of length 3.\n  - **Result**: **Player 1 loses**.\n\n### Example Scenario 3\n\n**Sequence State**: (Empty)\n\n- **Turn 1 to 5**:\n  - Players continue adding symbols without creating a palindrome.\n  - **Sequence**: `X O X O X`\n\n- **Turn 6**:\n  - **Player**: 2 (`O`)\n  - **Action**: Adds `O` to the right.\n  - **Sequence**: `X O X O X O`\n  - **Check for Palindromes**:\n    - Subsequence `X O X O X O` is not a palindrome.\n    - Subsequence `O X O` (positions 2-4) is a palindrome of length 3.\n  - **Result**: **Player 2 loses** (created a palindrome of length 3).\n\n### Command-Line Interaction Sample\n\n```\nSequence: \n\nPlayer 1's Turn (Symbol: X)\nChoose side to place your symbol (left/right): left\nSequence: X\n\nPlayer 2's Turn (Symbol: O)\nChoose side to place your symbol (left/right): right\nSequence: X O\n\nPlayer 1's Turn (Symbol: X)\nChoose side to place your symbol (left/right): right\nSequence: X O X\nPalindrome formed: X O X\nPlayer 1 loses the game!\n```\n\n## Strategic Tips\n\n- **Avoid Symmetry**: Placing symbols to prevent symmetrical patterns can help avoid accidental palindromes.\n- **Force Moves**: Try to manipulate the sequence to limit your opponent's safe moves.\n- **Anticipate**: Think ahead about how the sequence can evolve with each placement.\n\n## Summary\n\n**Palindrome Duel** is a simple yet strategically rich game that tests players' foresight and planning. By carefully choosing where to place their symbols, players can control the flow of the game and outmaneuver their opponent. The game is quick to play, easy to implement in a command-line interface, and offers depth for those looking to refine their tactical skills.\n\nEnjoy the duel, and may the most strategic player win!",
    "# Divide and Conquer\n\n## Objective\n\nBe the first player to reduce the **shared number** to exactly **1** by strategically dividing it by its prime factors. The game is a test of strategy and understanding of prime numbers.\n\n## Setup\n\n- **Starting Number**: Choose a positive integer greater than 1 with at least two prime factors (e.g., 48). This will be the **shared number**.\n- **Players**: Two players, referred to as **Player 1** and **Player 2**.\n- **Turn Order**: Decide who takes the first turn (e.g., flip a coin).\n\n## Game Components\n\n- **Shared Number**: An integer that both players will manipulate during the game.\n- **Prime Factors**: Prime numbers that are factors of the current shared number.\n- **Command-Line Interface**: The game is played using text input and output in a command-line environment.\n\n## Turns\n\n### Turn Structure\n\n1. **Display Current Shared Number**: At the start of each turn, the current shared number is displayed.\n2. **Determine Prime Factors**: List the prime factors of the shared number.\n3. **Player's Action**: The current player chooses one of the prime factors to divide the shared number by.\n4. **Update Shared Number**: The shared number is updated to the quotient of the division.\n5. **Display Result**: Show the result of the division and the new shared number.\n\n### Player Actions\n\n- **Valid Actions**: On their turn, a player must:\n  - Choose a prime factor of the shared number that is greater than 1.\n  - Divide the shared number by this prime factor.\n- **Invalid Actions**:\n  - Choosing a number that is not a prime factor of the shared number.\n  - Passing their turn or refusing to make a move.\n  - Dividing by 1 or any number less than 1.\n\n### Progression of Turns\n\n- Players alternate turns until one player wins the game.\n- The game continues even if the shared number becomes a prime number.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Dividing the Shared Number**:\n   - Players must divide the shared number by one of its prime factors greater than 1.\n   - The division must result in an integer quotient (no remainders).\n2. **Winning the Game**:\n   - The player who reduces the shared number to exactly **1** on their turn **wins the game**.\n3. **Forced Moves**:\n   - If only one valid prime factor exists, the player must divide by that prime factor.\n4. **Invalid Inputs**:\n   - Players must input valid prime factors. Invalid inputs require the player to try again.\n5. **No Skipping Turns**:\n   - Players cannot skip their turn or pass; they must make a valid move if possible.\n\n### Special Cases\n\n- **Shared Number is Prime**:\n  - If the shared number is prime, the only valid move is to divide it by itself, resulting in **1**, and the player wins.\n- **No Valid Moves**:\n  - If a player cannot make a valid move (which should not happen if rules are followed), they lose the game by default.\n\n## Scoring\n\n- **Winning**: The first player to reduce the shared number to exactly **1** wins the game.\n- **No Points System**: There is no points system; the game is won by achieving the objective.\n\n## Examples\n\n### Example Game 1: Starting Number 48\n\n#### Turn 1: Player 1\n\n- **Shared Number**: 48\n- **Prime Factors**: 2, 3\n- **Player 1 Chooses**: Divide by 2\n- **Calculation**: 48 ÷ 2 = 24\n- **New Shared Number**: 24\n\n#### Turn 2: Player 2\n\n- **Shared Number**: 24\n- **Prime Factors**: 2, 3\n- **Player 2 Chooses**: Divide by 3\n- **Calculation**: 24 ÷ 3 = 8\n- **New Shared Number**: 8\n\n#### Turn 3: Player 1\n\n- **Shared Number**: 8\n- **Prime Factors**: 2\n- **Player 1 Chooses**: Divide by 2\n- **Calculation**: 8 ÷ 2 = 4\n- **New Shared Number**: 4\n\n#### Turn 4: Player 2\n\n- **Shared Number**: 4\n- **Prime Factors**: 2\n- **Player 2 Chooses**: Divide by 2\n- **Calculation**: 4 ÷ 2 = 2\n- **New Shared Number**: 2\n\n#### Turn 5: Player 1\n\n- **Shared Number**: 2\n- **Prime Factors**: 2\n- **Player 1 Chooses**: Divide by 2\n- **Calculation**: 2 ÷ 2 = 1\n- **New Shared Number**: 1\n\n**Player 1 Wins!**\n\n### Example Game 2: Starting Number 30\n\n#### Turn 1: Player 1\n\n- **Shared Number**: 30\n- **Prime Factors**: 2, 3, 5\n- **Player 1 Chooses**: Divide by 5\n- **Calculation**: 30 ÷ 5 = 6\n- **New Shared Number**: 6\n\n#### Turn 2: Player 2\n\n- **Shared Number**: 6\n- **Prime Factors**: 2, 3\n- **Player 2 Chooses**: Divide by 3\n- **Calculation**: 6 ÷ 3 = 2\n- **New Shared Number**: 2\n\n#### Turn 3: Player 1\n\n- **Shared Number**: 2\n- **Prime Factors**: 2\n- **Player 1 Chooses**: Divide by 2\n- **Calculation**: 2 ÷ 2 = 1\n- **New Shared Number**: 1\n\n**Player 1 Wins!**\n\n## Command-Line Interaction Examples\n\n### Starting the Game\n\n```\nWelcome to Divide and Conquer!\nStarting number is 48.\nPlayer 1 will go first.\n```\n\n### Sample Turn\n\n```\n--------------------------------\nPlayer 1's Turn\nCurrent shared number: 48\nPrime factors: 2, 3\nEnter a prime factor to divide by: 2\n48 divided by 2 is 24.\nNew shared number is 24.\n```\n\n### Invalid Input Handling\n\n```\n--------------------------------\nPlayer 2's Turn\nCurrent shared number: 24\nPrime factors: 2, 3\nEnter a prime factor to divide by: 4\nInvalid input. 4 is not a prime factor of 24.\nPlease enter a valid prime factor: 3\n24 divided by 3 is 8.\nNew shared number is 8.\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's moves and plan your strategy several turns in advance.\n- **Control the Game**: Try to leave the shared number in a state where your opponent has fewer prime factors to choose from.\n- **Prime Awareness**: Familiarity with prime numbers and factorization enhances decision-making.\n- **Force the Win**: When possible, reduce the shared number to a prime number on your turn, forcing your opponent into a position where you can win on your next turn.\n\n## Additional Rules\n\n- **Fair Play**: Players should not use calculators or external tools that give them an unfair advantage.\n- **Time Limit** (Optional): To keep the game moving quickly, impose a time limit per turn (e.g., 30 seconds).\n- **Rematches**: Players can agree to play multiple rounds, possibly with varying starting numbers, to determine an overall winner.\n\n## Summary\n\n\"Divide and Conquer\" is a quick, engaging game that combines arithmetic practice with strategic planning. The simplicity of its rules makes it easy to learn and play in a command-line interface, while the depth of strategy ensures that skilled players can consistently triumph over less experienced opponents. Enjoy testing your wits in this battle of numbers!",
    "# Power Match\n\n## Objective\n\n**Power Match** is a strategic two-player turn-based game where players compete to create the highest numerical value using exponents. Each player constructs an expression in the form of `base^exponent` by selecting numbers from a shared pool. The goal is to outmaneuver your opponent by wisely choosing numbers to maximize your own result while potentially limiting theirs. The player with the higher calculated value wins the game.\n\n## Setup\n\n1. **Number Pool**: Create a shared pool of numbers ranging from **1** to **9**.\n2. **Player Roles**: Decide which player goes first (Player 1) and second (Player 2). This can be determined randomly or by mutual agreement.\n3. **Expressions**: Each player has an empty expression template: `base^exponent`, where they will assign numbers during the game.\n\n## Game Components\n\n- **Number Pool**: A list of available numbers `[1, 2, 3, 4, 5, 6, 7, 8, 9]`.\n- **Expressions**:\n  - **Player 1's Expression**: `__ ^ __`\n  - **Player 2's Expression**: `__ ^ __`\n- **Command-Line Interface**: The game is played in a command-line environment where players input their choices during their turns.\n\n## Turns\n\n- **Turn Order**: Players take turns alternately, starting with Player 1.\n- **Turn Actions**:\n  - On each turn, a player selects a number from the **Number Pool**.\n  - The player assigns the selected number to either the **base** or the **exponent** of their expression.\n- **Turn Progression**:\n  - Once a number is selected, it is removed from the **Number Pool**.\n  - Each player continues to take turns until both the **base** and **exponent** positions in their expression are filled.\n  - If a player's expression is complete, they skip their turn, and the other player continues until their expression is also complete.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - Players may choose any remaining number from the **Number Pool** on their turn.\n   - Each number can only be used once and is removed from the pool after selection.\n\n2. **Assignment**:\n   - Players must assign the chosen number to either the **base** or the **exponent** in their expression.\n   - Once assigned, a number cannot be moved or changed to a different position.\n\n3. **Expression Completion**:\n   - After both players have filled their **base** and **exponent**, their expressions are complete.\n\n4. **Calculation**:\n   - Each player's expression is calculated using standard mathematical exponentiation.\n   - For example, if a player's expression is `2^3`, the result is `8`.\n\n5. **Victory Condition**:\n   - The player with the higher numerical result from their expression wins the game.\n   - In the event both players have the same result, the player who completed their expression **second** wins (since the first player had the advantage of choice).\n\n## Scoring\n\n- **Result Comparison**:\n  - Calculate each player's expression to obtain their final score.\n  - Example: Player 1 has `2^5 = 32`, Player 2 has `7^2 = 49`.\n\n- **Determining the Winner**:\n  - The player with the higher score (`49` in the example) wins.\n  - There are no draws; if scores are equal, the second player's strategic positioning grants them the win.\n\n## Examples\n\n### Example Game\n\n**Initial Number Pool**: `[1, 2, 3, 4, 5, 6, 7, 8, 9]`\n\n---\n\n**Turn 1**:\n\n- **Player 1**:\n  - Chooses **7** from the pool.\n  - Assigns **7** as their **base**.\n  - **Player 1's Expression**: `7 ^ __`\n  - **Updated Number Pool**: `[1, 2, 3, 4, 5, 6, 8, 9]`\n\n---\n\n**Turn 2**:\n\n- **Player 2**:\n  - Chooses **9** from the pool.\n  - Assigns **9** as their **base**.\n  - **Player 2's Expression**: `9 ^ __`\n  - **Updated Number Pool**: `[1, 2, 3, 4, 5, 6, 8]`\n\n---\n\n**Turn 3**:\n\n- **Player 1**:\n  - Chooses **2** from the pool.\n  - Assigns **2** as their **exponent**.\n  - **Player 1's Expression**: `7 ^ 2`\n  - **Expression Complete**.\n  - **Updated Number Pool**: `[1, 3, 4, 5, 6, 8]`\n\n---\n\n**Turn 4**:\n\n- **Player 2**:\n  - Chooses **8** from the pool.\n  - Assigns **8** as their **exponent**.\n  - **Player 2's Expression**: `9 ^ 8`\n  - **Expression Complete**.\n  - **Updated Number Pool**: `[1, 3, 4, 5, 6]`\n\n---\n\n**Calculations**:\n\n- **Player 1's Result**: `7 ^ 2 = 49`\n- **Player 2's Result**: `9 ^ 8 = 43,046,721`\n\n---\n\n**Winner**: Player 2 wins with a higher result.\n\n### Command-Line Interaction Sample\n\n```\nNumber Pool: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nPlayer 1's Expression: __ ^ __\nPlayer 2's Expression: __ ^ __\n\nPlayer 1's Turn:\nChoose a number from the pool: 7\nAssign 7 to (base/exponent): base\n\nNumber Pool: [1, 2, 3, 4, 5, 6, 8, 9]\nPlayer 1's Expression: 7 ^ __\n\nPlayer 2's Turn:\nChoose a number from the pool: 9\nAssign 9 to (base/exponent): base\n\nNumber Pool: [1, 2, 3, 4, 5, 6, 8]\nPlayer 2's Expression: 9 ^ __\n\nPlayer 1's Turn:\nChoose a number from the pool: 2\nAssign 2 to (base/exponent): exponent\n\nPlayer 1's Expression is complete: 7 ^ 2\n\nNumber Pool: [1, 3, 4, 5, 6, 8]\n\nPlayer 2's Turn:\nChoose a number from the pool: 8\nAssign 8 to (base/exponent): exponent\n\nPlayer 2's Expression is complete: 9 ^ 8\n\nCalculating results...\n\nPlayer 1's Result: 49\nPlayer 2's Result: 43046721\n\nPlayer 2 wins!\n```\n\n---\n\n### Strategic Considerations\n\n- **Early High Bases**: Choosing a high base early can be advantageous, but be mindful of the available exponents left for your opponent.\n- **Exponents vs. Bases**: A lower base with a high exponent can outperform a high base with a low exponent.\n- **Blocking**: Consider selecting numbers that might benefit your opponent to limit their options.\n- **Turn Order Advantage**: The first player has the advantage of choice, but the second player can adapt their strategy accordingly.\n\n## Conclusion\n\n**Power Match** is a game of mathematical strategy and foresight. Players must analyze the potential outcomes of their choices not only for themselves but also for their opponent. By carefully selecting and assigning numbers, skilled players can consistently outperform less experienced opponents.\n\nEnjoy the challenge and may the best strategist win!",
    "# Line Duel\n\n## Objective\n\nIn **Line Duel**, your goal is to strategically push a shared marker along a number line toward your opponent's end. You win the game by moving the marker to your opponent's endpoint through clever use of your move cards while anticipating your opponent's moves.\n\n---\n\n## Setup\n\n1. **Number Line Initialization**:\n   - Draw or represent a number line ranging from **-5** to **+5**, with **0** as the center point.\n   - The number line should include all integers within this range:\n\n     ```\n     -5 -4 -3 -2 -1  0  1  2  3  4  5\n     ```\n\n2. **Marker Placement**:\n   - Place a shared marker (could be any token or symbol) at position **0** on the number line.\n\n3. **Move Cards Distribution**:\n   - Each player receives a set of **five move cards**, numbered **1** through **5**.\n   - The move cards represent the power of your moves.\n   - Cards are held privately in each player's hand.\n\n4. **Player Roles**:\n   - **Player 1** aims to push the marker towards the positive end (**+5**).\n   - **Player 2** aims to push the marker towards the negative end (**-5**).\n\n---\n\n## Game Components\n\n1. **Number Line**:\n   - A linear representation with positions from **-5** to **+5**.\n   - Serves as the battlefield where the marker moves back and forth.\n\n2. **Marker**:\n   - A shared token that moves along the number line based on the players' moves.\n   - Indicates the current state of the game.\n\n3. **Move Cards**:\n   - Each player has an identical set of move cards:\n\n     - **Cards**: Numbers **1**, **2**, **3**, **4**, **5**.\n     - **Function**: Determines the strength of a player's push in a round.\n     - **Usage**: Once a move card is played, it is discarded and cannot be used again.\n\n---\n\n## Turns\n\n1. **Round Structure**:\n   - The game proceeds in a series of rounds.\n   - Each round consists of both players performing actions simultaneously.\n\n2. **Player Actions per Round**:\n   - **Select a Move Card**:\n     - Secretly choose one unused move card from your hand.\n     - This selection should be concealed from your opponent until both players are ready to reveal.\n\n   - **Reveal Move Cards**:\n     - Both players simultaneously reveal their chosen move cards.\n     - This ensures that selections are made without knowledge of the opponent's current move.\n\n   - **Calculate Movement**:\n     - Determine the **Net Movement** by comparing the move cards (details in Rules and Mechanics).\n     - Move the marker accordingly on the number line.\n\n   - **Discard Used Cards**:\n     - Place the used move card face-up in a discard pile.\n     - It cannot be used again for the remainder of the game.\n\n3. **Progression**:\n   - Repeat the round structure until a win condition is met.\n\n---\n\n## Rules and Mechanics\n\n### Movement Calculation\n\n1. **Net Movement Determination**:\n   - **Compare Move Cards**:\n     - Identify the higher and lower move cards played.\n   - **Calculate Net Movement**:\n     - **Net Movement** = Higher Move Card - Lower Move Card.\n   - **Direction of Movement**:\n     - If **Player 1** played the higher card, the marker moves towards the positive end (**+5**).\n     - If **Player 2** played the higher card, the marker moves towards the negative end (**-5**).\n     - If both players played the same card, the Net Movement is **0**, and the marker does not move.\n\n2. **Marker Movement**:\n   - Move the marker along the number line according to the Net Movement and direction.\n   - The marker cannot move beyond the endpoints. If movement would take it past **+5** or **-5**, it stops at the endpoint.\n\n### Winning Conditions\n\n1. **Immediate Win**:\n   - **Endpoint Reach**:\n     - If the marker reaches your opponent's endpoint (**Player 1** reaching **+5**, **Player 2** reaching **-5**), you win the game immediately.\n\n2. **All Move Cards Used**:\n   - If all move cards have been played and no player has reached the opponent's endpoint, determine the winner as follows:\n\n     - **Marker Position**:\n       - If the marker is on the positive side (**positions +1 to +5**), **Player 1** wins.\n       - If the marker is on the negative side (**positions -1 to -5**), **Player 2** wins.\n       - If the marker is at position **0**, proceed to the tiebreaker.\n\n   - **Tiebreaker for Position 0**:\n     - The player who last moved the marker **toward their opponent's end** wins.\n     - If the marker has not moved from position 0 throughout the game, **Player 2** wins (since **Player 1** moves first, this balances first-mover advantage).\n\n### Additional Rules\n\n1. **Simultaneous Action**:\n   - All move selections are made without knowledge of the opponent's current choice.\n   - Encourages strategic thinking and prediction.\n\n2. **No Reuse of Move Cards**:\n   - Once a move card is used, it is out of play.\n   - Players must plan their use of high and low cards carefully.\n\n3. **Command-Line Interface Adaptation**:\n   - Inputs can be made via text commands representing the chosen move card.\n   - The game state (number line and marker position) is displayed after each round.\n\n---\n\n## Scoring\n\n- **Victory**:\n  - Winning the game is the ultimate goal; there is no point system.\n  - The game does not track scores across multiple rounds or matches (unless players choose to).\n\n- **No Draws**:\n  - The game is designed to prevent draws.\n  - Clear win conditions ensure a decisive outcome in every match.\n\n---\n\n## Examples\n\n### Sample Game Play\n\n**Initial Setup**:\n\n- Marker at position **0**.\n- **Player 1's move cards**: [1, 2, 3, 4, 5]\n- **Player 2's move cards**: [1, 2, 3, 4, 5]\n\n---\n\n**Round 1**:\n\n- **Selections**:\n  - Player 1 chooses **Move Card 3**.\n  - Player 2 chooses **Move Card 4**.\n\n- **Reveal and Calculate**:\n  - Net Movement = 4 (Player 2) - 3 (Player 1) = **1**\n  - Direction: Towards **Player 2's** end (**negative** direction).\n\n- **Marker Movement**:\n  - Marker moves from position **0** to **-1**.\n\n- **Discard Used Cards**:\n  - Player 1 discards **Move Card 3**.\n  - Player 2 discards **Move Card 4**.\n\n---\n\n**Round 2**:\n\n- **Selections**:\n  - Player 1 chooses **Move Card 5**.\n  - Player 2 chooses **Move Card 2**.\n\n- **Reveal and Calculate**:\n  - Net Movement = 5 (Player 1) - 2 (Player 2) = **3**\n  - Direction: Towards **Player 1's** end (**positive** direction).\n\n- **Marker Movement**:\n  - Marker moves from **-1** to **+2** (movement of 3 units towards positive).\n\n- **Discard Used Cards**:\n  - Player 1 discards **Move Card 5**.\n  - Player 2 discards **Move Card 2**.\n\n---\n\n**Round 3**:\n\n- **Selections**:\n  - Player 1 chooses **Move Card 4**.\n  - Player 2 chooses **Move Card 5**.\n\n- **Reveal and Calculate**:\n  - Net Movement = 5 (Player 2) - 4 (Player 1) = **1**\n  - Direction: Towards **Player 2's** end (**negative** direction).\n\n- **Marker Movement**:\n  - Marker moves from **+2** to **+1**.\n\n- **Discard Used Cards**:\n  - Player 1 discards **Move Card 4**.\n  - Player 2 discards **Move Card 5**.\n\n---\n\n**Round 4**:\n\n- **Selections**:\n  - Player 1 chooses **Move Card 2**.\n  - Player 2 chooses **Move Card 3**.\n\n- **Reveal and Calculate**:\n  - Net Movement = 3 (Player 2) - 2 (Player 1) = **1**\n  - Direction: Towards **Player 2's** end (**negative** direction).\n\n- **Marker Movement**:\n  - Marker moves from **+1** to **0**.\n\n- **Discard Used Cards**:\n  - Player 1 discards **Move Card 2**.\n  - Player 2 discards **Move Card 3**.\n\n---\n\n**Round 5**:\n\n- **Selections**:\n  - Player 1 chooses **Move Card 1**.\n  - Player 2 chooses **Move Card 1**.\n\n- **Reveal and Calculate**:\n  - Net Movement = 1 - 1 = **0**\n  - Marker remains at position **0**.\n\n- **Discard Used Cards**:\n  - Both players discard **Move Card 1**.\n\n---\n\n**All Move Cards Used**:\n\n- Both players have no move cards remaining.\n\n**Determining the Winner**:\n\n- **Marker Position**: **0**\n\n- **Last Movement Direction**:\n  - In **Round 4**, the marker moved towards **Player 2's** end.\n\n- **Result**:\n  - Player 2 last moved the marker towards their own end.\n  - **Player 2 loses**; **Player 1 wins**.\n\n---\n\n## Command-Line Interaction Example\n\nBelow is an example of how a turn might proceed in a command-line interface.\n\n**Game State Before Round 2**:\n\n```\nCurrent Marker Position: -1\n\nPlayer 1's Remaining Move Cards: [1, 2, 4, 5]\nPlayer 2's Remaining Move Cards: [1, 2, 3, 5]\n```\n\n**Player Inputs**:\n\n- **Player 1**:\n  ```\n  Enter your move card (1, 2, 4, 5): 5\n  ```\n\n- **Player 2**:\n  ```\n  Enter your move card (1, 2, 3, 5): 2\n  ```\n\n**System Output**:\n\n```\nPlayer 1 played Move Card: 5\nPlayer 2 played Move Card: 2\n\nNet Movement: 3 (towards positive end)\n\nMarker moved from -1 to +2\n\nPlayer 1's Discarded Cards: [3, 5]\nPlayer 2's Discarded Cards: [4, 2]\n```\n\n---\n\n## Strategic Considerations\n\n- **Anticipate Opponent's Moves**:\n  - Try to predict which move card your opponent might play.\n  - Use higher cards when you expect your opponent to play a high card if you need to prevent them from gaining an advantage.\n\n- **Manage Your Move Cards**:\n  - Balance the use of high and low cards.\n  - Saving high cards for crucial moments can be a winning strategy.\n\n- **Consider the Marker Position**:\n  - Be aware of the marker's current location.\n  - If the marker is close to your end, prioritize moves to push it back.\n\n- **Plan for the Endgame**:\n  - Remember that if all cards are used, the marker's position determines the winner.\n  - Aim to have the marker on your opponent's side as move cards run out.\n\n---\n\n## Conclusion\n\n**Line Duel** is a game of strategic planning, anticipation, and careful resource management. By cleverly choosing when to play your high and low move cards, and by accurately predicting your opponent's choices, you can outmaneuver your opponent and push the marker to victory.\n\nEnjoy the challenge of this tactical duel, and may the best strategist win!",
    "**Clash of Powers**\n\n---\n\n### **Objective**\n\n**Primary Goal:**\nBe the first player to win **three duels** by strategically playing your powers against your opponent. A duel is won by outmaneuvering your opponent using the unique strengths of your powers and leveraging the special \"Exact Double Rule\" to your advantage.\n\n**Victory Condition:**\n- Win three duels before your opponent.\n- If all powers are used without either player winning three duels, the player with the most duel victories wins.\n- In case of a tie after all powers are used, a final tiebreaker duel is played.\n\n---\n\n### **Setup**\n\n1. **Players:**\n   - Two players participate in the game.\n\n2. **Powers Allocation:**\n   - Each player receives a set of **five powers**:\n     - Power of **1** *(2⁰)*\n     - Power of **2** *(2¹)*\n     - Power of **4** *(2²)*\n     - Power of **8** *(2³)*\n     - Power of **16** *(2⁴)*\n   - Powers are kept secret from the opponent.\n\n3. **Initial Conditions:**\n   - Both players start with zero duel victories.\n   - All powers are unused at the beginning.\n\n---\n\n### **Game Components**\n\n1. **Powers:**\n   - **Description:** Numerical representations of strength—1, 2, 4, 8, and 16.\n   - **Functionality:** Used to engage in duels; each power can be used only once.\n   - **Unique Attributes:**\n     - The **Exact Double Rule** adds a strategic twist to power strengths.\n\n2. **Duel Tracker:**\n   - **Purpose:** Keeps track of the number of duels each player has won.\n   - **Representation:** A simple counter from 0 to 3 for each player.\n\n3. **Used Powers Set:**\n   - **Functionality:** Records which powers have been used to prevent reuse.\n   - **Management:** Updated after each duel.\n\n---\n\n### **Turns**\n\n**Game Progression:**\n- The game is played in **rounds (duels)** rather than individual turns.\n- Each round consists of simultaneous actions by both players.\n\n**Structure of a Round:**\n\n1. **Selection Phase:**\n   - Both players **secretly select** one of their remaining powers to play.\n\n2. **Reveal Phase:**\n   - Players **simultaneously reveal** their selected powers.\n\n3. **Resolution Phase:**\n   - Determine the **winner of the duel** based on the game's rules.\n\n4. **Update Phase:**\n   - **Record** the duel outcome.\n   - **Move used powers** to the used powers set.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Power Selection and Usage:**\n   - Players must select from their **remaining unused powers**.\n   - Once a power is used, it **cannot** be used again.\n\n2. **Duel Resolution:**\n   - **Higher Power Wins:**\n     - Generally, the player who plays the higher power wins the duel.\n   - **Exact Double Rule:**\n     - If a player's power is **exactly double** their opponent's power, the **lower power wins** the duel.\n   - **Tie Situations:**\n     - If both players select powers of **equal strength**, the duel is a tie, and no points are awarded.\n\n3. **Winning Duels:**\n   - The winner of a duel gains **one point** towards their duel victories.\n   - The game continues to the next round unless a player has reached **three duel victories**.\n\n4. **Game Conclusion:**\n   - The game **ends immediately** when a player achieves three duel victories.\n   - If all powers are used and neither player has three victories, the player with the **most duel victories** wins.\n   - If tied on duel victories after all powers are used, a **tiebreaker duel** is played using any previously used power.\n\n---\n\n### **Scoring**\n\n1. **Duel Victories Tracking:**\n   - Each player's duel victories are **tracked throughout** the game.\n   - Displayed as a **score** (e.g., Player 1: 2 victories, Player 2: 1 victory).\n\n2. **Contributing to Win:**\n   - Accumulating **three duel victories** secures a win.\n   - In the case of a tie after all powers are used, the tiebreaker determines the winner.\n\n3. **Tie Resolution:**\n   - A tie in duel victories after all powers are exhausted triggers a **final duel**.\n   - Players may select **any one of their previously used powers** for the tiebreaker.\n\n---\n\n### **Examples**\n\n**Sample Game Playthrough:**\n\n---\n\n**Round 1:**\n\n- **Available Powers:**\n  - Player 1: [1, 2, 4, 8, 16]\n  - Player 2: [1, 2, 4, 8, 16]\n\n- **Selection Phase:**\n  - Player 1 selects **Power 4**.\n  - Player 2 selects **Power 8**.\n\n- **Reveal Phase:**\n  - Both reveal their powers.\n\n- **Resolution Phase:**\n  - Player 2's Power 8 is **higher** than Player 1's Power 4.\n  - No Exact Double Rule applies (8 is not exactly double 4).\n  - **Player 2 wins the duel**.\n\n- **Update Phase:**\n  - Duel Victories: Player 1: 0, Player 2: 1\n  - Used Powers:\n    - Player 1: [4]\n    - Player 2: [8]\n\n---\n\n**Round 2:**\n\n- **Available Powers:**\n  - Player 1: [1, 2, 8, 16]\n  - Player 2: [1, 2, 4, 16]\n\n- **Selection Phase:**\n  - Player 1 selects **Power 16**.\n  - Player 2 selects **Power 8**.\n\n- **Reveal Phase:**\n  - Both reveal their powers.\n\n- **Resolution Phase:**\n  - Player 1's Power 16 is **higher** than Player 2's Power 8.\n  - No Exact Double Rule applies (16 is not exactly double 8).\n  - **Player 1 wins the duel**.\n\n- **Update Phase:**\n  - Duel Victories: Player 1: 1, Player 2: 1\n  - Used Powers:\n    - Player 1: [4, 16]\n    - Player 2: [8, 16]\n\n---\n\n**Round 3:**\n\n- **Available Powers:**\n  - Player 1: [1, 2, 8]\n  - Player 2: [1, 2, 4]\n\n- **Selection Phase:**\n  - Player 1 selects **Power 8**.\n  - Player 2 selects **Power 4**.\n\n- **Reveal Phase:**\n  - Both reveal their powers.\n\n- **Resolution Phase:**\n  - Player 1's Power 8 is **exactly double** Player 2's Power 4.\n  - **Exact Double Rule applies**.\n  - **Player 2 wins the duel** (lower power wins).\n\n- **Update Phase:**\n  - Duel Victories: Player 1: 1, Player 2: 2\n  - Used Powers:\n    - Player 1: [4, 16, 8]\n    - Player 2: [8, 16, 4]\n\n---\n\n**Round 4:**\n\n- **Available Powers:**\n  - Player 1: [1, 2]\n  - Player 2: [1, 2]\n\n- **Selection Phase:**\n  - Player 1 selects **Power 2**.\n  - Player 2 selects **Power 1**.\n\n- **Reveal Phase:**\n  - Both reveal their powers.\n\n- **Resolution Phase:**\n  - Player 1's Power 2 is **exactly double** Player 2's Power 1.\n  - **Exact Double Rule applies**.\n  - **Player 2 wins the duel** (lower power wins).\n\n- **Update Phase:**\n  - Duel Victories: Player 1: 1, Player 2: 3\n  - Used Powers:\n    - Player 1: [4, 16, 8, 2]\n    - Player 2: [8, 16, 4, 1]\n\n- **Game End:**\n  - Player 2 has reached **three duel victories** and **wins the game**.\n\n---\n\n**Command-Line Interaction Example:**\n\n1. **Game Start:**\n   - Display: \"Welcome to **Clash of Powers**!\"\n   - Prompt each player to **enter their name**.\n\n2. **Display Available Powers:**\n   - For each player:\n     - \"Your available powers are: 1, 2, 4, 8, 16\"\n\n3. **Round Progression:**\n   - **Selection Prompt:**\n     - \"Select a power to play in this duel:\"\n     - Players input their chosen power.\n\n   - **Validation:**\n     - Ensure the power is available and unused.\n\n   - **Reveal and Resolution:**\n     - \"Player 1 has selected Power X.\"\n     - \"Player 2 has selected Power Y.\"\n     - \"Determining the winner...\"\n\n   - **Duel Outcome:**\n     - Announce the winner and update duel victories.\n     - \"Player 2 wins this duel!\"\n     - \"Current Score - Player 1: 1 victory, Player 2: 2 victories.\"\n\n4. **Update Powers:**\n   - Inform players of their **remaining powers**.\n\n5. **Game End:**\n   - When a player reaches three victories:\n     - \"Player X has won three duels and wins the game!\"\n\n6. **Tie Scenario:**\n   - If a tiebreaker is needed:\n     - \"All powers used. The score is tied. Select any one of your used powers for the final duel.\"\n\n---\n\n**Strategic Considerations:**\n\n- **Predict Opponent's Moves:**\n  - Anticipate which powers your opponent might play based on their remaining powers.\n\n- **Exact Double Rule Exploitation:**\n  - Use the Exact Double Rule to your advantage by playing a lower power when you suspect your opponent will use a specific higher power.\n\n- **Power Conservation:**\n  - Decide when to use your highest powers or save them for crucial moments.\n\n---\n\nEnjoy the strategic depths of **Clash of Powers** and may the most cunning player win!",
    "# Prime Claim\n\n## Objective\n\n**Prime Claim** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to be the first player to reach **exactly 50 points** by claiming numbers from a shared pool. Players must strategically select numbers to accumulate points while considering the impact on their opponent. If a player exceeds 50 points, they lose the game. Victory is achieved by reaching exactly 50 points or forcing the opponent to surpass 50 points.\n\n## Setup\n\n1. **Number Pool**: A shared list of numbers from **1 to 25** is presented to both players at the start of the game. All numbers are initially unclaimed.\n\n2. **Player Scores**: Both players begin with a score of **0**.\n\n3. **Starting Player**: Decide randomly or by mutual agreement which player takes the first turn.\n\nExample of the initial number pool:\n\n```\nNumbers Available: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n```\n\n## Game Components\n\n- **Numbers (1-25)**: These are the central elements of the game. Each number can be claimed by a player during their turn and has specific effects based on its properties.\n\n  - **Prime Numbers**: Numbers greater than 1 that have no positive divisors other than 1 and themselves (e.g., 2, 3, 5, 7, 11, 13, 17, 19, 23).\n  \n  - **Composite Numbers**: Numbers that have positive divisors other than 1 and themselves (e.g., 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25).\n\n- **Score Tracker**: A simple display or variable to keep track of each player's current score.\n\n## Turns\n\n1. **Turn Order**: Players take turns alternately. On each turn, a player performs the following actions:\n\n   - **Select a Number**: Choose any unclaimed number from the available number pool.\n\n2. **Action Resolution**:\n\n   - **Update Scores**: Based on the selected number (prime or composite), scores are adjusted according to the game rules.\n\n   - **Update Number Pool**: The chosen number is marked as claimed and is no longer available.\n\n3. **Progression**:\n\n   - **Check for Victory Conditions**: After each turn, check if either player has reached exactly 50 points or if any player has exceeded 50 points.\n\n   - **Proceed to Next Turn**: If the game hasn't ended, the turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n\n   - Players may select **any unclaimed number** from 1 to 25 during their turn.\n\n2. **Claiming Prime Numbers**:\n\n   - When a player claims a **prime number**, they **add the value** of that number to **their own score only**.\n\n   - *Example*: If a player claims **7**, they gain **+7 points**.\n\n3. **Claiming Composite Numbers**:\n\n   - When a player claims a **composite number**, they **add the value** of that number to **their own score**.\n   \n   - Additionally, the **opponent** receives points equal to the sum of all **prime factors** of the claimed composite number.\n\n   - *Example*: If a player claims **15**, they gain **+15 points**, and the opponent gains **+8 points** (since 15's prime factors are 3 and 5, and 3 + 5 = 8).\n\n4. **Victory Conditions**:\n\n   - **Exact Score Win**: The first player to reach **exactly 50 points** wins the game.\n\n   - **Over Scoring Loss**: If a player's score **exceeds 50 points** after their turn, they **lose** the game.\n\n   - **Opponent Over Scores**: If a player's action causes **both players' scores** to exceed 50, the **active player loses**.\n\n5. **Number Availability**:\n\n   - Once a number is claimed by a player, it is **removed** from the number pool and cannot be selected again.\n\n## Scoring\n\n- **Tracking Scores**: Keep a running total of each player's score after every turn.\n\n- **Score Adjustments**:\n\n  - **Prime Number Claimed**:\n    - **Active Player**: Adds the prime number's value to their score.\n    - **Opponent**: No change.\n\n  - **Composite Number Claimed**:\n    - **Active Player**: Adds the composite number's value to their score.\n    - **Opponent**: Adds the sum of the prime factors of the composite number to their score.\n\n- **Victory Check**:\n\n  - After score adjustments, check if either player has **exactly 50 points** or if any player has **exceeded 50 points**.\n\n## Examples\n\n### Sample Game Playthrough\n\n#### Initial Setup\n\n```\nNumbers Available: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n\nPlayer 1 Score: 0\nPlayer 2 Score: 0\n```\n\n#### Turn 1: Player 1\n\n- **Action**: Player 1 claims **13** (a prime number).\n\n- **Outcome**:\n  - Player 1 gains **+13 points**.\n  - Player 2 gains **0 points**.\n\n- **Updated Scores**:\n  - Player 1 Score: **13**\n  - Player 2 Score: **0**\n\n- **Numbers Available**: 1 2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25\n\n#### Turn 2: Player 2\n\n- **Action**: Player 2 claims **15** (a composite number).\n\n- **Prime Factors of 15**: 3 and 5 (since 3 × 5 = 15).\n\n- **Outcome**:\n  - Player 2 gains **+15 points**.\n  - Player 1 gains **+8 points** (3 + 5).\n\n- **Updated Scores**:\n  - Player 1 Score: **13 + 8 = 21**\n  - Player 2 Score: **15**\n\n- **Numbers Available**: 1 2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 21 22 23 24 25\n\n#### Turn 3: Player 1\n\n- **Action**: Player 1 claims **7** (a prime number).\n\n- **Outcome**:\n  - Player 1 gains **+7 points**.\n  - Player 2 gains **0 points**.\n\n- **Updated Scores**:\n  - Player 1 Score: **21 + 7 = 28**\n  - Player 2 Score: **15**\n\n- **Numbers Available**: 1 2 3 4 5 6 8 9 10 11 12 14 16 17 18 19 20 21 22 23 24 25\n\n#### Turn 4: Player 2\n\n- **Action**: Player 2 claims **24** (a composite number).\n\n- **Prime Factors of 24**: 2, 2, 2, 3 (since 2 × 2 × 2 × 3 = 24).\n\n- **Unique Prime Factors**: 2 and 3.\n\n- **Sum of Unique Prime Factors**: 2 + 3 = **5**\n\n- **Outcome**:\n  - Player 2 gains **+24 points**.\n  - Player 1 gains **+5 points**.\n\n- **Updated Scores**:\n  - Player 1 Score: **28 + 5 = 33**\n  - Player 2 Score: **15 + 24 = 39**\n\n- **Numbers Available**: 1 2 3 4 5 6 8 9 10 11 12 14 16 17 18 19 20 21 22 23 25\n\n#### Turn 5: Player 1\n\n- **Action**: Player 1 claims **17** (a prime number).\n\n- **Outcome**:\n  - Player 1 gains **+17 points**.\n  - Player 2 gains **0 points**.\n\n- **Updated Scores**:\n  - Player 1 Score: **33 + 17 = 50**\n  - Player 2 Score: **39**\n\n- **Victory Check**:\n  - **Player 1** has reached **exactly 50 points** and **wins the game**.\n\n### Command-Line Interaction Example\n\nBelow is how the game might look in a command-line interface:\n\n```\n--- Prime Claim ---\n\nNumbers Available: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n\nPlayer 1 Score: 0\nPlayer 2 Score: 0\n\nPlayer 1, it's your turn.\nEnter the number you wish to claim: 13\n\nYou have claimed number 13 (Prime).\nYou gain 13 points.\n\nUpdated Scores:\nPlayer 1 Score: 13\nPlayer 2 Score: 0\n\nNumbers Available: 1 2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25\n\nPlayer 2, it's your turn.\nEnter the number you wish to claim: 15\n\nYou have claimed number 15 (Composite).\nIts prime factors are: 3, 5\nYou gain 15 points.\nPlayer 1 gains 8 points from the prime factors.\n\nUpdated Scores:\nPlayer 1 Score: 21\nPlayer 2 Score: 15\n\nNumbers Available: 1 2 3 4 5 6 7 8 9 10 11 12 14 16 17 18 19 20 21 22 23 24 25\n\nPlayer 1, it's your turn.\nEnter the number you wish to claim: 7\n\nYou have claimed number 7 (Prime).\nYou gain 7 points.\n\nUpdated Scores:\nPlayer 1 Score: 28\nPlayer 2 Score: 15\n\n... [Game continues as in the sample playthrough] ...\n\nPlayer 1, it's your turn.\nEnter the number you wish to claim: 17\n\nYou have claimed number 17 (Prime).\nYou gain 17 points.\n\nUpdated Scores:\nPlayer 1 Score: 50\nPlayer 2 Score: 39\n\nCongratulations, Player 1! You have reached exactly 50 points and win the game!\n```\n\n### Strategic Considerations\n\n- **Choosing Primes vs. Composites**:\n\n  - **Primes**: Safe choice for accumulating points without benefiting the opponent.\n\n  - **Composites**: High-risk, high-reward. They offer more points but can boost the opponent's score significantly.\n\n- **Monitoring Opponent's Score**:\n\n  - Be cautious when your opponent is close to 50 points. Claiming a composite number might inadvertently allow them to win.\n\n- **Avoiding Over Scoring**:\n\n  - Plan your selections to avoid exceeding 50 points. Selecting a number that causes you to surpass 50 results in an immediate loss.\n\n- **Denying Numbers**:\n\n  - Consider claiming numbers that your opponent might use to reach 50 points, especially if they are within winning range.\n\n## Conclusion\n\n**Prime Claim** offers strategic depth through careful selection and timing of number claims. Players must balance the desire for high-point composite numbers against the risk of empowering their opponent. By planning ahead and anticipating the opponent's moves, skilled players can consistently outperform less experienced players.\n\nEnjoy the challenge and may the most strategic player win!",
    "# Number Clash\n\n## Objective\n\nThe objective of **Number Clash** is to reduce your opponent's Health Points (HP) to zero before they do the same to you. Players achieve this by strategically playing number cards to deal damage based on the difference between their card and their opponent's last played card.\n\n## Setup\n\n1. **Health Points**: Each player starts the game with **10 Health Points**.\n2. **Deck Preparation**:\n   - Create a shared deck consisting of number cards from **1 to 9**. To ensure a sufficient number of cards, include **four copies of each number**, resulting in a **36-card deck**.\n3. **Initial Draw**:\n   - Shuffle the deck thoroughly.\n   - Each player draws **three cards** from the deck to form their starting hand.\n\n## Game Components\n\n- **Number Cards (1-9)**:\n  - **Appearance**: Cards are numbered **1** through **9**, with equal quantities of each.\n  - **Functionality**: Used to attack the opponent or defend against incoming attacks.\n- **Health Points**:\n  - **Each player starts with 10 HP**.\n  - HP is reduced based on the outcomes of card clashes.\n- **Shared Deck**:\n  - A common draw pile from which players replenish their hands.\n- **Discard Pile**:\n  - A place for used cards. If the deck runs out, shuffle the discard pile to form a new deck.\n\n## Turns\n\nPlayers take turns performing the following actions:\n\n1. **Play a Card**:\n   - Select one card from your hand and play it face up on the table.\n2. **Resolve the Clash**:\n   - Compare your played card with your opponent's last played card.\n   - Calculate damage based on the Rules and Mechanics.\n3. **Draw a Card**:\n   - Draw one card from the deck to replenish your hand back to three cards.\n4. **Pass Turn**:\n   - The turn passes to the opponent, who now becomes the active player.\n\n## Rules and Mechanics\n\n### Card Play\n\n- **First Turn Exception**:\n  - On the very first turn of the game, since there is no previous card to compare, **no damage is dealt**.\n- **Valid Plays**:\n  - You must play a card each turn. If you have no cards (which shouldn't happen under normal circumstances), skip drawing a card but reshuffle the discard pile to create a new deck if the draw pile is empty.\n\n### Resolving Clashes\n\n- **Comparing Cards**:\n  - When you play a card, compare its value to your opponent's last played card.\n- **Damage Calculation**:\n  - **If your card is higher**:\n    - Deal damage to your opponent equal to the difference between the two cards.\n    - **Damage to Opponent** = Your Card - Opponent's Last Card.\n  - **If your card is lower**:\n    - You take damage equal to the difference between the two cards.\n    - **Damage to You** = Opponent's Last Card - Your Card.\n  - **If the cards are equal**:\n    - Both players take **1 damage**.\n\n### Health Points\n\n- **Tracking HP**:\n  - Keep track of both players' HP throughout the game.\n- **Zero HP**:\n  - If a player's HP drops to **zero or below**, they lose the game immediately.\n\n### Deck Management\n\n- **Replenishing Hand**:\n  - After playing a card, always draw one card to maintain a hand of three cards.\n- **Deck Depletion**:\n  - If the deck runs out of cards, shuffle the discard pile to form a new deck.\n\n## Scoring\n\n- **Winning the Game**:\n  - The first player to reduce their opponent's HP to zero or below wins the game.\n- **No Draws**:\n  - Since HP cannot be reduced below zero simultaneously due to the turn structure, **draws are not possible** in Number Clash.\n\n## Examples\n\n### Sample Turn Sequence\n\n**Initial Setup**:\n\n- Both players have **10 HP**.\n- Both players draw **three cards**.\n\n**Turn 1**:\n\n- **Player 1** plays a **5**.\n  - No previous card to compare.\n  - **No damage is dealt**.\n  - Player 1 draws a card.\n- **Player 2** plays a **7**.\n  - Compare 7 (Player 2) vs. 5 (Player 1's last card).\n  - 7 > 5, so **Player 2 deals 2 damage** to **Player 1**.\n  - **Player 1's HP** is now **8**.\n  - Player 2 draws a card.\n\n**Turn 2**:\n\n- **Player 1** plays a **4**.\n  - Compare 4 (Player 1) vs. 7 (Player 2's last card).\n  - 4 < 7, so **Player 1 takes 3 damage**.\n  - **Player 1's HP** is now **5**.\n  - Player 1 draws a card.\n- **Player 2** plays a **3**.\n  - Compare 3 (Player 2) vs. 4 (Player 1's last card).\n  - 3 < 4, so **Player 2 takes 1 damage**.\n  - **Player 2's HP** is now **9**.\n  - Player 2 draws a card.\n\n**Turn 3**:\n\n- **Player 1** plays a **9**.\n  - Compare 9 (Player 1) vs. 3 (Player 2's last card).\n  - 9 > 3, so **Player 1 deals 6 damage** to **Player 2**.\n  - **Player 2's HP** is now **3**.\n  - Player 1 draws a card.\n- **Player 2** plays a **5**.\n  - Compare 5 (Player 2) vs. 9 (Player 1's last card).\n  - 5 < 9, so **Player 2 takes 4 damage**.\n  - **Player 2's HP** is now **-1**.\n  - **Player 2's HP** has dropped below zero.\n\n**Conclusion**:\n\n- **Player 2**'s HP is **-1**.\n- **Player 1 wins the game**.\n\n### Command-Line Interaction Example\n\nAssuming a command-line interface where players input commands.\n\n**Player Commands**:\n\n- `play [card number]` - Plays a card from the hand.\n- `hand` - Shows current hand.\n- `hp` - Shows both players' HP.\n\n**Sample Interaction**:\n\n```\nPlayer 1's turn.\nYour hand: [3, 5, 7]\nOpponent's last card: None\nEnter command: play 5\nYou played 5.\nNo previous card to compare. No damage dealt.\nYou draw a card.\n\nPlayer 2's turn.\nYour hand: [2, 6, 7]\nOpponent's last card: 5\nEnter command: play 7\nYou played 7.\nOpponent's last card: 5\n7 > 5, you deal 2 damage to Player 1.\nPlayer 1's HP: 8\nYou draw a card.\n\nPlayer 1's turn.\nYour hand: [3, 4, 9]\nOpponent's last card: 7\nEnter command: play 4\nYou played 4.\nOpponent's last card: 7\n4 < 7, you take 3 damage.\nYour HP: 5\nYou draw a card.\n```\n\n## Strategic Tips\n\n- **Hand Management**:\n  - Keep track of your opponent's last card to decide which card to play.\n- **High vs. Low Cards**:\n  - Playing a high card after your opponent's low card can deal significant damage.\n- **Predict Opponent Moves**:\n  - Anticipate what your opponent might play based on the cards they've played.\n\n## Summary\n\nNumber Clash is a fast-paced, strategic game that combines elements of luck and foresight. By carefully selecting which cards to play, players can maximize damage to their opponent while minimizing damage to themselves. With simple rules and deep strategic potential, Number Clash offers an engaging experience that challenges players to think ahead and adapt to their opponent's moves.",
    "---\n\n# Order Challenge\n\n## Objective\n\nIn **Order Challenge**, two players compete to build the longest strictly increasing sequence of numbers by selecting from a shared pool of integers. The primary goal is to continue adding numbers to your sequence without breaking the increasing order. The player who cannot make a valid move loses, and the opponent wins.\n\n---\n\n## Setup\n\n- **Shared Number Pool**: A set of unique integers from **1** to **9** inclusive.\n- **Player Sequences**: Each player starts with an empty sequence.\n\nAt the start of the game:\n\n1. Place all numbers from **1** to **9** into the shared number pool.\n2. Decide which player will take the first turn (you may flip a coin or decide amicably).\n\n---\n\n## Game Components\n\n### Shared Number Pool\n\n- **Numbers**: Integers **1** through **9**.\n- **Availability**: Each number is available to both players but can be selected only once.\n- **Function**: Serves as the source from which players draw numbers to build their sequences.\n\n### Player Sequences\n\n- **Individual Sequences**: Each player maintains their own sequence of numbers.\n- **Starting Condition**: Both sequences start empty.\n- **Structure**: Numbers are added to the end of the sequence in the order they are selected.\n\n---\n\n## Turns\n\nPlayers alternate turns throughout the game.\n\n### Turn Structure\n\n1. **Selection Phase**:\n   - The active player selects one available number from the shared pool.\n2. **Validation Phase**:\n   - The selected number must be **strictly greater** than the last number in the player's own sequence.\n   - If the player's sequence is empty, any available number may be selected.\n3. **Update Phase**:\n   - Add the selected number to the end of the player's sequence.\n   - Remove the selected number from the shared pool.\n4. **Turn End**:\n   - The turn passes to the other player.\n\n---\n\n## Rules and Mechanics\n\n### 1. Number Selection\n\n- **Initial Selection**:\n  - If your sequence is empty, you may choose any number from the shared pool.\n- **Subsequent Selections**:\n  - You must choose a number that is **strictly greater** than the last number in your sequence.\n  - If no such number exists in the shared pool, you cannot make a valid move.\n\n### 2. Sequence Building\n\n- **Strictly Increasing Order**:\n  - Your sequence must always increase; equal or smaller numbers cannot be added after larger ones.\n- **Sequence Example**:\n  - Valid: [2, 5, 6]\n  - Invalid: [3, 3], [4, 2]\n\n### 3. Shared Pool Management\n\n- **Number Availability**:\n  - Once a number is selected, it is removed from the shared pool and cannot be selected again.\n- **Viewing the Pool**:\n  - Players should always be informed of the current numbers available in the shared pool at the start of their turn.\n\n### 4. Winning the Game\n\n- **Loss Condition**:\n  - If it's your turn and you cannot select any valid number, you lose.\n- **Win Condition**:\n  - If your opponent cannot make a valid move on their turn, you win.\n- **No Draws**:\n  - The game cannot end in a draw; play continues until one player loses.\n\n---\n\n## Scoring\n\n- **Outcome**:\n  - The game results in a win for one player and a loss for the other.\n- **No Point System**:\n  - There are no points awarded; the focus is on strategic play to outlast the opponent.\n- **Match Play**:\n  - Players may choose to play multiple rounds, keeping track of wins to determine an overall champion.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Initial Shared Pool**: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n**Player 1's Sequence**: []\n\n**Player 2's Sequence**: []\n\n---\n\n#### Turn 1: Player 1\n\n- **Action**: Chooses **5**.\n- **Reason**: Sequence is empty; any number can be selected.\n- **Player 1's Sequence**: [5]\n- **Updated Shared Pool**: [1, 2, 3, 4, 6, 7, 8, 9]\n\n#### Turn 2: Player 2\n\n- **Action**: Chooses **4**.\n- **Reason**: Sequence is empty; any number can be selected.\n- **Player 2's Sequence**: [4]\n- **Updated Shared Pool**: [1, 2, 3, 6, 7, 8, 9]\n\n#### Turn 3: Player 1\n\n- **Last Number**: 5\n- **Available Numbers**: [6, 7, 8, 9]\n- **Action**: Chooses **6**.\n- **Reason**: 6 > 5.\n- **Player 1's Sequence**: [5, 6]\n- **Updated Shared Pool**: [1, 2, 3, 7, 8, 9]\n\n#### Turn 4: Player 2\n\n- **Last Number**: 4\n- **Available Numbers**: [7, 8, 9]\n- **Action**: Chooses **7**.\n- **Reason**: 7 > 4.\n- **Player 2's Sequence**: [4, 7]\n- **Updated Shared Pool**: [1, 2, 3, 8, 9]\n\n#### Turn 5: Player 1\n\n- **Last Number**: 6\n- **Available Numbers**: [8, 9]\n- **Action**: Chooses **8**.\n- **Reason**: 8 > 6.\n- **Player 1's Sequence**: [5, 6, 8]\n- **Updated Shared Pool**: [1, 2, 3, 9]\n\n#### Turn 6: Player 2\n\n- **Last Number**: 7\n- **Available Numbers**: [9]\n- **Action**: Chooses **9**.\n- **Reason**: 9 > 7.\n- **Player 2's Sequence**: [4, 7, 9]\n- **Updated Shared Pool**: [1, 2, 3]\n\n#### Turn 7: Player 1\n\n- **Last Number**: 8\n- **Available Numbers**: None (since 1, 2, 3 < 8)\n- **Action**: Cannot make a valid move.\n- **Outcome**: Player 1 loses.\n\n---\n\n### Command-Line Interaction\n\nThis example demonstrates how the game might be played in a command-line interface.\n\n**Game Start**\n\n```\nShared Pool: [1,2,3,4,5,6,7,8,9]\nPlayer 1's Sequence: []\nPlayer 2's Sequence: []\n\nPlayer 1's turn.\nAvailable numbers: [1,2,3,4,5,6,7,8,9]\nEnter a number to select: 3\n```\n\n**Player 1 selects 3.**\n\n```\nShared Pool: [1,2,4,5,6,7,8,9]\nPlayer 1's Sequence: [3]\nPlayer 2's Sequence: []\n\nPlayer 2's turn.\nAvailable numbers: [1,2,4,5,6,7,8,9]\nEnter a number to select: 2\n```\n\n**Player 2 selects 2.**\n\n```\nShared Pool: [1,4,5,6,7,8,9]\nPlayer 1's Sequence: [3]\nPlayer 2's Sequence: [2]\n\nPlayer 1's turn.\nLast number in your sequence: 3\nAvailable numbers greater than 3: [4,5,6,7,8,9]\nEnter a number to select: 5\n```\n\n**Player 1 selects 5.**\n\n```\nShared Pool: [1,4,6,7,8,9]\nPlayer 1's Sequence: [3,5]\nPlayer 2's Sequence: [2]\n\nPlayer 2's turn.\nLast number in your sequence: 2\nAvailable numbers greater than 2: [4,6,7,8,9]\nEnter a number to select: 4\n```\n\n**Player 2 selects 4.**\n\n```\nShared Pool: [1,6,7,8,9]\nPlayer 1's Sequence: [3,5]\nPlayer 2's Sequence: [2,4]\n\nPlayer 1's turn.\nLast number in your sequence: 5\nAvailable numbers greater than 5: [6,7,8,9]\nEnter a number to select: 6\n```\n\n**Player 1 selects 6.**\n\n```\nShared Pool: [1,7,8,9]\nPlayer 1's Sequence: [3,5,6]\nPlayer 2's Sequence: [2,4]\n\nPlayer 2's turn.\nLast number in your sequence: 4\nAvailable numbers greater than 4: [7,8,9]\nEnter a number to select: 7\n```\n\n**Player 2 selects 7.**\n\n```\nShared Pool: [1,8,9]\nPlayer 1's Sequence: [3,5,6]\nPlayer 2's Sequence: [2,4,7]\n\nPlayer 1's turn.\nLast number in your sequence: 6\nAvailable numbers greater than 6: [8,9]\nEnter a number to select: 9\n```\n\n**Player 1 selects 9.**\n\n```\nShared Pool: [1,8]\nPlayer 1's Sequence: [3,5,6,9]\nPlayer 2's Sequence: [2,4,7]\n\nPlayer 2's turn.\nLast number in your sequence: 7\nAvailable numbers greater than 7: [8]\nEnter a number to select: 8\n```\n\n**Player 2 selects 8.**\n\n```\nShared Pool: [1]\nPlayer 1's Sequence: [3,5,6,9]\nPlayer 2's Sequence: [2,4,7,8]\n\nPlayer 1's turn.\nLast number in your sequence: 9\nAvailable numbers greater than 9: None\nNo valid moves available.\n\nPlayer 1 cannot make a valid move. Player 2 wins!\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**: Look at the shared pool and anticipate future moves. Try to force your opponent into a position where they have no valid moves.\n- **Control High Numbers**: Securing higher numbers can limit your opponent's options later in the game.\n- **Balance Selections**: Avoid selecting numbers too high too soon, as this may reduce your own options in later turns.\n- **Monitor Opponent's Sequence**: Keep track of your opponent's sequence to predict their possible moves and adjust your strategy accordingly.\n\n---\n\nBy understanding the rules and employing strategic thinking, players can enhance their chances of winning **Order Challenge**. Enjoy the game and may the keenest strategist prevail!\n\n---",
    "# Light Out Duel - Rule Book\n\n## Objective\n\n**Primary Goal:**  \nBe the player who turns off the last remaining light on the board.\n\n**Victory Condition:**  \n- **Win:** You win the game if you turn off the last light during your turn.\n- **Loss:** You lose the game if it's your turn and there are no lights left to turn off.\n\n## Setup\n\n**Initial Arrangement:**\n- The game features a straight line of **seven lights**, numbered **1** to **7**.\n- **Starting State:** All seven lights are initially **ON**.\n- **Player Positions:** There are no physical positions; players interact with the lights during their turns.\n- **Starting Player:** Decide who goes first (e.g., flip a coin).\n\n**Visual Representation:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: O O O O O O O\n```\n(O represents a light that is ON.)\n\n## Game Components\n\n- **Lights Board:**\n  - A linear board displaying seven numbered lights.\n  - Each light has two states: **ON** or **OFF**.\n- **Light Indicators:**\n  - **ON State:** Represented by `O` or any indicator showing the light is on.\n  - **OFF State:** Represented by `X` or any indicator showing the light is off.\n\n**Functionality and Attributes:**\n- Lights are identified by their numbers (1-7).\n- Players interact directly with the lights by toggling them between ON and OFF states.\n\n## Turns\n\n**Structure of a Turn:**\n1. **Action Selection:**\n   - On your turn, choose to toggle lights according to the rules.\n2. **Valid Actions:**\n   - **Option 1:** Turn **OFF** any **one** light that is currently **ON**.\n   - **Option 2:** Turn **OFF** any **two adjacent** lights that are both currently **ON**.\n3. **Action Execution:**\n   - Apply your chosen action to the board.\n4. **Turn Completion:**\n   - Your turn ends after performing your action.\n   - The next player takes their turn.\n\n**Turn Progression:**\n- Players alternate turns until the game ends.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Toggling Lights:**\n   - **Single Light Toggle:**\n     - You may turn **OFF** one light that is **ON**.\n   - **Double Light Toggle:**\n     - You may turn **OFF** two **adjacent** lights that are both **ON**.\n     - **Adjacency:** Two lights are adjacent if their numbers are consecutive (e.g., lights 3 and 4).\n\n2. **Light States:**\n   - **ON Lights:** Can be toggled **OFF**.\n   - **OFF Lights:** Cannot be toggled; they remain off for the rest of the game.\n\n3. **Valid Moves:**\n   - You cannot skip your turn.\n   - If there are no valid moves (no lights are **ON**), the game ends, and you lose your turn.\n\n### Winning the Game\n\n- **Victory Condition:** You win if you turn **OFF** the last remaining **ON** light.\n- **Forced Loss:** If it's your turn and all lights are **OFF**, you lose because you have no valid moves.\n\n### Special Considerations\n\n- **No Skipping:** You must perform an action on your turn if possible.\n- **Action Limits:** You cannot turn OFF more than two lights in a single turn.\n- **Light Selection:** You cannot turn OFF non-adjacent lights when choosing to toggle two lights.\n\n## Scoring\n\n- **Win/Loss Outcome:** The game is won by achieving the objective; there is no point scoring.\n- **No Draws:** The game cannot end in a draw due to the structure of turns and the finite number of lights.\n\n## Examples\n\n### Example Game Play\n\n#### Initial State\n\n```\nLights: 1 2 3 4 5 6 7\nStates: O O O O O O O\n```\n\n#### Turn 1 - Player 1\n\n- **Action:** Turns OFF lights **1** and **2**.\n- **Reason:** Both lights are ON and adjacent.\n\n**Board After Turn:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: X X O O O O O\n```\n\n#### Turn 2 - Player 2\n\n- **Action:** Turns OFF light **4**.\n- **Reason:** Chooses to turn off a single light.\n\n**Board After Turn:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: X X O X O O O\n```\n\n#### Turn 3 - Player 1\n\n- **Action:** Attempts to turn OFF lights **3** and **5**.\n- **Result:** Invalid move (lights **3** and **5** are not adjacent).\n- **Corrected Action:** Turns OFF light **3**.\n\n**Board After Turn:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: X X X X O O O\n```\n\n#### Turn 4 - Player 2\n\n- **Action:** Turns OFF lights **5** and **6**.\n- **Reason:** Both lights are ON and adjacent.\n\n**Board After Turn:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: X X X X X X O\n```\n\n#### Turn 5 - Player 1\n\n- **Action:** Turns OFF light **7**.\n- **Reason:** Only remaining ON light.\n\n**Board After Turn:**\n\n```\nLights: 1 2 3 4 5 6 7\nStates: X X X X X X X\n```\n\n#### Outcome\n\n- **Winner:** Player 1 wins by turning OFF the last light.\n- **Game End:** All lights are OFF; the game concludes.\n\n### Command-Line Interaction Sample\n\n**Notation:**\n- `>` denotes a player prompt.\n- `States:` shows the current state of lights.\n- `Player 1` and `Player 2` indicate which player's turn it is.\n\n#### Game Start\n\n```\nStates: O O O O O O O\n```\n\n#### Player 1 Turn\n\n```\nPlayer 1, choose your action:\n1. Turn OFF one light.\n2. Turn OFF two adjacent lights.\n> 2\nEnter the number of the first light to turn OFF:\n> 1\nTurning OFF lights 1 and 2.\n\nStates: X X O O O O O\n```\n\n#### Player 2 Turn\n\n```\nPlayer 2, choose your action:\n1. Turn OFF one light.\n2. Turn OFF two adjacent lights.\n> 1\nEnter the number of the light to turn OFF:\n> 4\nTurning OFF light 4.\n\nStates: X X O X O O O\n```\n\n[...and so on, following the gameplay from the previous example.]\n\n## Strategy Tips\n\n- **Plan Ahead:** Consider the implications of turning off single vs. multiple lights.\n- **Control the Board:** Try to force your opponent into a position where they have limited options.\n- **Prevent Opponent's Win:** Be aware of the remaining lights to avoid setting up your opponent for a win.\n\n## Conclusion\n\n\"Light Out Duel\" offers a simple yet strategic gameplay experience suitable for a command-line interface. Understanding the rules and planning your moves carefully will enhance your chances of victory. Enjoy the challenge of outsmarting your opponent in this game of wits and strategy!",
    "# Command Clash: Rule Book\n\n## Objective\n\n**Command Clash** is a two-player turn-based strategy game where players engage in a battle of wits and resource management. The primary goal is to **reduce your opponent's Command Points (CP) to zero or below** by strategically choosing actions each turn. Players must manage their CP wisely, anticipate their opponent's moves, and decide the best moments to attack, defend, or recharge.\n\n## Setup\n\n- **Starting Command Points**: Both players begin the game with **5 Command Points (CP)**.\n- **Maximum Command Points**: A player cannot have more than **5 CP** at any time.\n- **Game Start**: Determine who will enter their action first if necessary (though actions are resolved simultaneously).\n\n## Game Components\n\n- **Command Points (CP)**: Represents a player's resources required to perform actions.\n  - **Appearance**: Numerical value ranging from **0 to 5**.\n  - **Functionality**: CP are spent to perform actions like Attack, Special Attack, and Shield, and can be replenished by using the Charge action.\n- **Actions**: \n  - **Charge**\n    - **Cost**: 0 CP\n    - **Effect**: Gain **+1 CP** (cannot exceed 5 CP)\n  - **Attack**\n    - **Cost**: 1 CP\n    - **Effect**: Deal **1 damage** to the opponent unless they have used Shield\n  - **Special Attack**\n    - **Cost**: 3 CP\n    - **Effect**: Deal **3 damage** to the opponent unless they have used Shield\n  - **Shield**\n    - **Cost**: 1 CP\n    - **Effect**: Blocks all damage from the opponent's Attack or Special Attack for that turn\n\n## Turns\n\n- **Simultaneous Action Selection**: Both players secretly choose one action each turn.\n- **Action Submission**: Players input their chosen action without knowledge of the opponent's choice.\n- **Resolution**: Actions are revealed and resolved simultaneously according to the game mechanics.\n- **Turn Progression**: The game continues with players selecting and resolving actions each turn until a win condition is met.\n\n## Rules and Mechanics\n\n### Action Details\n\n1. **Charge**\n   - **Usage**: Replenish CP when low or to prepare for costly actions.\n   - **Limit**: CP cannot exceed 5.\n   - **Strategic Note**: Essential for maintaining the ability to perform powerful actions.\n\n2. **Attack**\n   - **Usage**: A standard offensive move to chip away at the opponent's CP.\n   - **Blocked By**: Shield.\n   - **Strategic Note**: Useful for consistent pressure; efficient when the opponent is less likely to Shield.\n\n3. **Special Attack**\n   - **Usage**: A heavy offensive move to significantly damage the opponent.\n   - **Blocked By**: Shield.\n   - **Requirement**: Requires at least 3 CP to perform.\n   - **Strategic Note**: High risk and reward; best used when the opponent is unlikely to Shield.\n\n4. **Shield**\n   - **Usage**: Defensive maneuver to protect against incoming damage.\n   - **Effectiveness**: Blocks all damage from Attack and Special Attack for the turn.\n   - **Strategic Note**: Costly if the opponent does not attack; anticipate opponent's moves to use effectively.\n\n### Action Resolution\n\n- **Simultaneous Actions**: Both players' actions are resolved at the same time.\n- **CP Adjustments**: Apply the CP cost of actions before resolving their effects.\n- **Damage Application**: After CP adjustments, apply any damage to the opponent's CP.\n- **Overdraw**: If a player's CP is reduced below zero, it remains at zero for the purpose of determining the game end.\n\n### Victory Conditions\n\n- **Winning the Game**: A player wins when the opponent's CP is reduced to **zero or below** at the end of any turn.\n- **Draws**: The game cannot end in a draw; it continues until one player's CP reaches zero.\n\n## Scoring\n\n- **Command Points (CP)**: The primary metric tracked throughout the game.\n  - **Starting Value**: 5 CP for each player.\n  - **Tracking**: Players must keep an accurate record of their own and the opponent's CP after each turn.\n- **Damage**: Represents CP lost due to opponent's actions.\n  - **Attack Damage**: 1 CP.\n  - **Special Attack Damage**: 3 CP.\n\n## Examples\n\n### Example Scenario 1\n\n**Turn 1**\n\n- **Player Actions**:\n  - **Player 1**: Charge\n  - **Player 2**: Attack\n- **Resolution**:\n  - **Player 1**: Gains +1 CP (now at **5 CP**; cannot exceed maximum).\n  - **Player 2**:\n    - Spends 1 CP (now at **4 CP**).\n    - Deals 1 damage to Player 1 (Player 1 now at **4 CP**).\n\n**Turn 2**\n\n- **Player Actions**:\n  - **Player 1**: Special Attack\n  - **Player 2**: Shield\n- **Resolution**:\n  - **Player 1**:\n    - Spends 3 CP (now at **1 CP**).\n    - Attempts to deal 3 damage to Player 2.\n  - **Player 2**:\n    - Spends 1 CP (now at **3 CP**).\n    - Blocks all damage from Player 1's Special Attack.\n- **Outcome**: No CP change from damage this turn.\n\n**Turn 3**\n\n- **Player Actions**:\n  - **Player 1**: Charge\n  - **Player 2**: Attack\n- **Resolution**:\n  - **Player 1**: Gains +1 CP (now at **2 CP**).\n  - **Player 2**:\n    - Spends 1 CP (now at **2 CP**).\n    - Deals 1 damage to Player 1 (Player 1 now at **1 CP**).\n\n**Turn 4**\n\n- **Player Actions**:\n  - **Player 1**: Attack\n  - **Player 2**: Attack\n- **Resolution**:\n  - **Both Players**:\n    - Spend 1 CP (Player 1 at **0 CP**, Player 2 at **1 CP**).\n    - Deal 1 damage to each other.\n  - **Player 1**: CP reduced to **0 CP**.\n  - **Player 2**: CP reduced to **0 CP**.\n- **Outcome**: Both players reach 0 CP, but the game continues until one player wins.\n- **Note**: Since both have 0 CP, the next actions will be limited to Charge or Shield (if they have CP).\n\n**Turn 5**\n\n- **Player Actions**:\n  - **Player 1**: Charge\n  - **Player 2**: Charge\n- **Resolution**:\n  - **Both Players**: Gain +1 CP (both at **1 CP**).\n\n**Turn 6**\n\n- **Player Actions**:\n  - **Player 1**: Attack\n  - **Player 2**: Shield\n- **Resolution**:\n  - **Player 1**:\n    - Spends 1 CP (now at **0 CP**).\n    - Attempts to deal 1 damage to Player 2.\n  - **Player 2**:\n    - Spends 1 CP (now at **0 CP**).\n    - Blocks all damage from Player 1's Attack.\n- **Outcome**: No CP change from damage.\n\n**Turn 7**\n\n- **Player Actions**:\n  - **Player 1**: Charge\n  - **Player 2**: Charge\n- **Resolution**:\n  - **Both Players**: Gain +1 CP (both at **1 CP**).\n\n**Turn 8**\n\n- **Player Actions**:\n  - **Player 1**: Attack\n  - **Player 2**: Attack\n- **Resolution**:\n  - **Both Players**:\n    - Spend 1 CP (both at **0 CP**).\n    - Deal 1 damage to each other.\n- **Outcome**:\n  - **Player 1**: Already at 0 CP, remains at **0 CP**.\n  - **Player 2**: CP reduced below zero (to **-1 CP**).\n- **Game End**: Player 1 wins, as Player 2's CP has dropped below zero.\n\n## Command-Line Interaction Sample\n\n**Game Start**\n\n```\nWelcome to Command Clash!\nPlayer 1 and Player 2 both start with 5 CP.\n```\n\n**Turn 1**\n\n```\nPlayer 1, enter your action (Charge, Attack, Special Attack, Shield): Charge\nPlayer 2, enter your action (Charge, Attack, Special Attack, Shield): Attack\n\nActions resolving...\nPlayer 1 charges and gains +1 CP! (Player 1 CP: 5)\nPlayer 2 attacks! (Cost: 1 CP; Player 2 CP: 4)\nPlayer 1 takes 1 damage. (Player 1 CP: 4)\n```\n\n**Turn 2**\n\n```\nPlayer 1, enter your action (Charge, Attack, Special Attack, Shield): Special Attack\nPlayer 2, enter your action (Charge, Attack, Special Attack, Shield): Shield\n\nActions resolving...\nPlayer 1 uses Special Attack! (Cost: 3 CP; Player 1 CP: 1)\nPlayer 2 shields! (Cost: 1 CP; Player 2 CP: 3)\nPlayer 2 blocks the Special Attack!\n```\n\n**...**\n\n**Game End**\n\n```\nPlayer 1 has reduced Player 2's CP to zero!\nPlayer 1 wins the game!\n```\n\n## Strategic Tips\n\n- **Balance Offense and Defense**: Attacking depletes your CP, so time your attacks wisely.\n- **Predict Opponent's Moves**: Anticipate when your opponent might Shield or Charge to optimize your action choice.\n- **Manage CP Carefully**: Keep track of both players' CP to plan when to Charge or go for a Special Attack.\n- **Avoid Wasting Actions**: Using a Special Attack when the opponent Shields is costly; consider the risk.\n\n## Conclusion\n\nCommand Clash is a game of prediction, resource management, and strategy. Players must make calculated decisions each turn, considering both their CP and the opponent's likely actions. With simple rules and deep strategic possibilities, Command Clash offers an engaging and quick gameplay experience in a command-line interface.",
    "# Number Cross: A Competitive Two-Player Turn-Based Game\n\nWelcome to **Number Cross**, a strategic and engaging two-player turn-based game designed for the command-line interface. This game combines simple mechanics with deep strategic opportunities, ensuring that skilled players can consistently outmaneuver their opponents. Easy to code and quick to play, Number Cross is perfect for those seeking a new and unique gaming challenge.\n\n---\n\n## Objective\n\nThe primary goal of **Number Cross** is to outscore your opponent by strategically claiming rows and columns on a shared 3x3 grid. Each cell on the grid contains a unique number from 1 to 9. Players take turns claiming rows or columns, and after both players have made their selections, the sums of the numbers in their claimed rows and columns are calculated. The player with the higher total sum wins the game.\n\n---\n\n## Setup\n\n1. **Game Grid Initialization**:\n   - Create a 3x3 grid representing the game board.\n   - Populate each cell of the grid with the numbers 1 through 9.\n   - Assign the numbers randomly to the cells without any repeats.\n\n2. **Player Initialization**:\n   - Determine which player will take the first turn (this can be decided randomly or by agreement).\n   - Both players begin with zero claimed rows or columns.\n\n---\n\n## Game Components\n\n1. **Grid Cells**:\n   - A total of 9 cells arranged in 3 rows and 3 columns.\n   - Each cell contains a unique number from 1 to 9.\n\n2. **Rows and Columns**:\n   - There are 3 rows (Row 1, Row 2, Row 3) and 3 columns (Column 1, Column 2, Column 3).\n   - Rows are horizontal lines of cells; columns are vertical lines of cells.\n\n3. **Player Selections**:\n   - Each player can claim up to 3 lines (rows or columns) during the game.\n   - Claimed lines are tracked throughout the game to prevent duplicate selections.\n\n---\n\n## Turns\n\n1. **Turn Order**:\n   - Players alternate turns, starting with Player 1.\n   - On each turn, a player selects an unclaimed row or column to claim.\n\n2. **Turn Actions**:\n   - **Selection**: Choose one unclaimed row or column to claim.\n   - **Announcement**: Declare the selected row or column to the opponent.\n\n3. **Progression**:\n   - Continue alternating turns until both players have each claimed 3 lines.\n   - The game consists of a total of 6 turns (3 per player).\n\n---\n\n## Rules and Mechanics\n\n1. **Claiming Lines**:\n   - Players can claim any unclaimed row or column on their turn.\n   - Once a line is claimed by any player, it cannot be claimed again.\n\n2. **Selection Restrictions**:\n   - Players cannot select diagonals—only rows and columns are valid choices.\n   - Players may choose any combination of rows and columns (e.g., 2 rows and 1 column).\n\n3. **Overlap of Lines**:\n   - Lines may overlap in cells (e.g., Row 1 and Column 1 both include the top-left cell).\n   - Players can tactically select lines that overlap with their opponent's choices.\n\n4. **Game End Condition**:\n   - The game ends after both players have claimed 3 lines each.\n   - Proceed to calculate the scores based on the numbers in the claimed lines.\n\n---\n\n## Scoring\n\n1. **Calculating Sums**:\n   - For each player, sum the numbers in all their claimed lines.\n   - If a cell is included in multiple claimed lines for the same player, its number is counted multiple times.\n\n2. **Determining the Winner**:\n   - The player with the **higher total sum** wins the game.\n   - **No Draws**: Since the total sum of all numbers from 1 to 9 is 45 and there are no fractional values, ties are impossible under normal gameplay.\n\n3. **Example of Overlaps in Scoring**:\n   - If a player claims both Row 1 and Column 1, the top-left cell's number is counted twice in their total sum.\n\n---\n\n## Examples\n\n### Example Game Playthrough\n\n**Initial Grid**:\n\n```\n+-----+-----+-----+\n|  4  |  9  |  2  |  Row 1\n+-----+-----+-----+\n|  3  |  5  |  7  |  Row 2\n+-----+-----+-----+\n|  8  |  1  |  6  |  Row 3\n+-----+-----+-----+\n  C1    C2    C3\n```\n\n**Turn Sequence**:\n\n1. **Player 1's Turn**:\n   - Claims **Row 2**.\n\n2. **Player 2's Turn**:\n   - Claims **Column 3**.\n\n3. **Player 1's Turn**:\n   - Claims **Column 2**.\n\n4. **Player 2's Turn**:\n   - Claims **Row 1**.\n\n5. **Player 1's Turn**:\n   - Claims **Row 3**.\n\n6. **Player 2's Turn**:\n   - Claims **Column 1**.\n\n**Player 1's Claimed Lines**:\n- Row 2: 3, 5, 7\n- Column 2: 9, 5, 1\n- Row 3: 8, 1, 6\n\n**Player 2's Claimed Lines**:\n- Column 3: 2, 7, 6\n- Row 1: 4, 9, 2\n- Column 1: 4, 3, 8\n\n**Calculating Player 1's Total Sum**:\n- Row 2: 3 + 5 + 7 = 15\n- Column 2: 9 + 5 + 1 = 15\n- Row 3: 8 + 1 + 6 = 15\n- **Total Sum**: 15 + 15 + 15 = **45**\n\n**Calculating Player 2's Total Sum**:\n- Column 3: 2 + 7 + 6 = 15\n- Row 1: 4 + 9 + 2 = 15\n- Column 1: 4 + 3 + 8 = 15\n- **Total Sum**: 15 + 15 + 15 = **45**\n\n**Determining the Winner**:\n\n- Since both players have the same total sum, refer to the tiebreaker rule (if a tie is possible, but as per earlier rule, ties are impossible under normal gameplay). However, since in this specific scenario a tie occurred due to symmetrical play, we can implement a tiebreaker:\n\n**Tiebreaker Rule**:\n\n- In the event of a tie (extremely rare), the **player who moved second wins**. This encourages strategic play in earlier turns to avoid ties.\n\n**Result**:\n\n- **Player 2 wins** the game.\n\n---\n\n## Command-Line Interaction Example\n\nBelow is an example of how players might interact with the game via a command-line interface.\n\n### Game Start\n\n```plaintext\nWelcome to Number Cross!\n\nInitializing the game grid...\n+-----+-----+-----+\n|  4  |  9  |  2  |  Row 1\n+-----+-----+-----+\n|  3  |  5  |  7  |  Row 2\n+-----+-----+-----+\n|  8  |  1  |  6  |  Row 3\n+-----+-----+-----+\n  C1    C2    C3\n\nPlayer 1, you will go first.\n```\n\n### Turns\n\n```plaintext\nPlayer 1's Turn:\nAvailable lines to claim: Row1, Row2, Row3, Col1, Col2, Col3\nEnter the line you want to claim: Row2\n\nPlayer 1 has claimed Row2.\n\nPlayer 2's Turn:\nAvailable lines to claim: Row1, Row3, Col1, Col2, Col3\nEnter the line you want to claim: Col3\n\nPlayer 2 has claimed Col3.\n\nPlayer 1's Turn:\nAvailable lines to claim: Row1, Row3, Col1, Col2\nEnter the line you want to claim: Col2\n\nPlayer 1 has claimed Col2.\n\nPlayer 2's Turn:\nAvailable lines to claim: Row1, Row3, Col1\nEnter the line you want to claim: Row1\n\nPlayer 2 has claimed Row1.\n\nPlayer 1's Turn:\nAvailable lines to claim: Row3, Col1\nEnter the line you want to claim: Row3\n\nPlayer 1 has claimed Row3.\n\nPlayer 2's Turn:\nAvailable lines to claim: Col1\nEnter the line you want to claim: Col1\n\nPlayer 2 has claimed Col1.\n```\n\n### Game End and Scoring\n\n```plaintext\nAll lines have been claimed. Calculating scores...\n\nPlayer 1's claimed lines:\n- Row2: 3 + 5 + 7 = 15\n- Col2: 9 + 5 + 1 = 15\n- Row3: 8 + 1 + 6 = 15\nTotal Sum: 45\n\nPlayer 2's claimed lines:\n- Col3: 2 + 7 + 6 = 15\n- Row1: 4 + 9 + 2 = 15\n- Col1: 4 + 3 + 8 = 15\nTotal Sum: 45\n\nIt's a tie!\n\nAccording to the tiebreaker rule, Player 2 wins the game!\n\nCongratulations, Player 2!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**: Consider the sums of the lines before claiming to maximize your total.\n- **Block Opponent**: Anticipate which lines the opponent may want and claim them first.\n- **Overlap Advantage**: Claim lines that overlap with your existing lines to count high-value cells multiple times.\n- **Balance**: Choose a mix of rows and columns to spread your control over the grid.\n\n---\n\nEnjoy playing **Number Cross**, and may the most strategic player win!",
    "# Number Duel Rule Book\n\n## Objective\n\nNumber Duel is a strategic two-player turn-based game where each player aims to reduce their opponent's points to zero before their own points are depleted. By selecting numbers thoughtfully and anticipating the opponent's choices, players engage in a battle of wits and tactics. The first player to bring the opponent's points to zero wins the game.\n\n## Setup\n\n- **Players:** Two players.\n- **Starting Points:** Each player begins with **15 points**.\n- **Number Range:** Players will select numbers between **1 and 5**, inclusive.\n\nNo physical setup is required other than a means to track each player's points, which can be done easily within a command-line interface or on a piece of paper.\n\n## Game Components\n\n- **Player Points:** Numerical values representing each player's remaining points. Both players start with 15 points.\n- **Selection Range:** Numbers from **1 to 5**. Players will choose from these numbers during each turn.\n- **Turn Indicator:** A means to track whose turn it is, although in this game, selections are made simultaneously.\n\n## Turns\n\n1. **Simultaneous Selection:**\n   - At the beginning of each round, both players **simultaneously** select a number from **1 to 5** without revealing it to the opponent.\n   - In a command-line interface, this can be simulated by prompting each player for their selection in turn without displaying it until both choices are made.\n\n2. **Reveal:**\n   - Once both players have made their selections, the chosen numbers are revealed to both players.\n\n3. **Resolution:**\n   - The game state is updated according to the rules outlined in the **Rules and Mechanics** section.\n\n4. **Next Round:**\n   - Steps 1-3 are repeated until one player's points are reduced to zero or below.\n\n## Rules and Mechanics\n\n1. **Number Selection:**\n   - Players must choose an **integer between 1 and 5**, inclusive, during each round.\n\n2. **Comparing Numbers:**\n   - After both numbers are revealed, they are compared.\n\n3. **Outcome Determination:**\n   - **Different Numbers:**\n     - The player who selected the **higher number** subtracts **their own number** from the opponent's points.\n     - The player with the lower number does not alter the opponent's points.\n   - **Same Numbers:**\n     - If both players select the **same number**, each player subtracts **their own number** from **their own points**.\n\n4. **Points Reduction:**\n   - Players adjust the points according to the outcome:\n     - Subtracting the appropriate value from the opponent's or their own points as determined.\n   - Points can become zero or negative.\n\n5. **Winning the Game:**\n   - The first player to reduce the opponent's points to **zero or below** wins the game.\n   - If both players reach zero or below in the same round:\n     - The player who initiated the points reduction (the one who had the higher number in that round) is declared the winner.\n     - If both players subtracted from their own points due to selecting the same number and both reach zero or below, the game proceeds to an immediate **sudden death round**.\n\n6. **Sudden Death Round:**\n   - In the event of a tie where both points reach zero or below simultaneously due to both players selecting the same number:\n     - Players engage in a sudden death round following the same rules.\n     - This continues until the tie is broken.\n\n## Scoring\n\n- **Points Tracking:**\n  - Each player's points should be tracked after every round.\n  - Points are adjusted based on the outcomes described in the rules.\n\n- **Victory Condition:**\n  - The game is won when one player's points are reduced to zero or below, and the other player has more than zero points (unless both points reach zero or below, triggering sudden death).\n\n## Examples\n\n### Example Scenario\n\n**Initial State:**\n- Player A Points: 15\n- Player B Points: 15\n\n**Round 1:**\n\n- **Player A selects:** 4\n- **Player B selects:** 2\n- **Outcome:** Player A's number (4) is higher than Player B's number (2).\n  - Player A subtracts **their own number (4)** from **Player B's points**.\n\n**Updated Points:**\n- Player A Points: 15\n- Player B Points: 15 - 4 = **11**\n\n---\n\n**Round 2:**\n\n- **Player A selects:** 3\n- **Player B selects:** 3\n- **Outcome:** Both players selected the same number.\n  - Each player subtracts **their own number (3)** from **their own points**.\n\n**Updated Points:**\n- Player A Points: 15 - 3 = **12**\n- Player B Points: 11 - 3 = **8**\n\n---\n\n**Round 3:**\n\n- **Player A selects:** 5\n- **Player B selects:** 2\n- **Outcome:** Player A's number (5) is higher than Player B's number (2).\n  - Player A subtracts **their own number (5)** from **Player B's points**.\n\n**Updated Points:**\n- Player A Points: 12\n- Player B Points: 8 - 5 = **3**\n\n---\n\n**Round 4:**\n\n- **Player A selects:** 1\n- **Player B selects:** 3\n- **Outcome:** Player B's number (3) is higher than Player A's number (1).\n  - Player B subtracts **their own number (3)** from **Player A's points**.\n\n**Updated Points:**\n- Player A Points: 12 - 3 = **9**\n- Player B Points: 3\n\n---\n\n**Round 5:**\n\n- **Player A selects:** 4\n- **Player B selects:** 2\n- **Outcome:** Player A's number (4) is higher than Player B's number (2).\n  - Player A subtracts **their own number (4)** from **Player B's points**.\n\n**Updated Points:**\n- Player A Points: 9\n- Player B Points: 3 - 4 = **-1**\n\n**Result:**\n- Player B's points have been reduced below zero.\n- **Player A wins the game.**\n\n### Command-Line Interaction Sample\n\nBelow is a sample of how the game might be played in a command-line interface.\n\n**Game Start:**\n\n```plaintext\nPlayer A Points: 15\nPlayer B Points: 15\n\nRound 1\n---------\nPlayer A, enter your number (1-5): *[input hidden]*\nPlayer B, enter your number (1-5): *[input hidden]*\n```\n\n*(Players privately input their choices, which are revealed after both have entered.)*\n\n```plaintext\nPlayer A selected: 4\nPlayer B selected: 2\n\nPlayer A's number is higher.\nPlayer A subtracts 4 from Player B's points.\n\nUpdated Points:\nPlayer A Points: 15\nPlayer B Points: 11\n\nPress Enter to proceed to the next round.\n```\n\n*(The game continues in this manner, prompting each player for their selection and updating the points accordingly.)*\n\n---\n\n**Sudden Death Example**\n\nIf at the end of a round both players reach zero or below due to selecting the same number:\n\n```plaintext\nPlayer A Points: 2\nPlayer B Points: 2\n\nRound 5\n---------\nPlayer A, enter your number (1-5): *[input hidden]*\nPlayer B, enter your number (1-5): *[input hidden]*\n\nPlayer A selected: 2\nPlayer B selected: 2\n\nBoth players selected the same number.\nEach player subtracts 2 from their own points.\n\nUpdated Points:\nPlayer A Points: 2 - 2 = 0\nPlayer B Points: 2 - 2 = 0\n\nBoth players have reached zero points.\nSudden Death Round Initiated!\n\nRound 6\n---------\nPlayer A, enter your number (1-5): *[input hidden]*\nPlayer B, enter your number (1-5): *[input hidden]*\n\nPlayer A selected: 3\nPlayer B selected: 1\n\nPlayer A's number is higher.\nPlayer A subtracts 3 from Player B's points.\n\nUpdated Points:\nPlayer A Points: 0\nPlayer B Points: 0 - 3 = -3\n\nPlayer B's points have dropped below zero.\nPlayer A wins the game!\n```\n\n## Strategic Depth\n\n- **Predicting Opponent's Choices:**\n  - Anticipate whether the opponent will choose a high or low number based on the current points.\n  \n- **Risk vs. Reward:**\n  - Choosing a higher number can deal more damage but risks greater self-harm if numbers match.\n  - Selecting lower numbers may conserve high numbers for critical moments.\n  \n- **Psychological Play:**\n  - Bluffing and patterns can be used to confuse the opponent.\n\n## Conclusion\n\nNumber Duel is a simple yet strategic game that combines elements of prediction, risk management, and psychological tactics. Easy to implement in a command-line interface and quick to play, it provides depth and complexity that allows skilled players to consistently outperform unskilled opponents. Enjoy the battle of minds and may the best strategist win!",
    "**Subtraction Square**\n\n---\n\n**Objective**\n\nThe primary goal of Subtraction Square is to strategically reduce your opponent's score to exactly zero by selecting numbers from a shared grid. Each number chosen subtracts from the opponent's score. The player who successfully reduces their opponent's score to zero wins the game. If a player cannot make a valid move on their turn, they lose.\n\n---\n\n**Setup**\n\n1. **Grid Initialization**: Create a 4x4 grid filled with the numbers 1 through 16, randomly arranged.\n   \n2. **Player Scores**: Both players start with a score of **20**.\n\n3. **Starting Player**: Decide who goes first (e.g., by random selection or mutual agreement).\n\n---\n\n**Game Components**\n\n- **The Grid**: A 4x4 grid displayed in the command-line interface. Each cell contains a unique number from 1 to 16 at the start of the game.\n  \n  - *Appearance*: The grid is presented with rows and columns, labeling each cell with its corresponding number.\n  \n  - *Functionality*: Numbers selected by players are removed from the grid and cannot be chosen again.\n\n- **Player Scores**:\n  \n  - *Representation*: Each player's score is displayed after every turn.\n  \n  - *Starting Value*: Both players begin with a score of 20.\n  \n  - *Updates*: Scores decrease based on the opponent's selections.\n\n- **Available Numbers**:\n  \n  - *Definition*: Numbers currently on the grid that have not been selected.\n  \n  - *Attributes*: Each number corresponds to the amount it will subtract from the opponent's score when selected.\n\n---\n\n**Turns**\n\n1. **Turn Structure**:\n\n   - **View State**: At the start of each turn, the player views the current grid and both players' scores.\n   \n   - **Select Number**: The player selects an available number from the grid.\n   \n   - **Subtract Score**: The selected number is subtracted from the opponent's score.\n   \n   - **Update Grid**: The selected number is removed from the grid.\n   \n   - **End Turn**: The turn ends, and control passes to the opponent.\n\n2. **Turn Progression**:\n\n   - Players alternate turns until the game ends.\n   \n   - The game proceeds quickly due to the limited number of available moves.\n\n---\n\n**Rules and Mechanics**\n\n1. **Number Selection**:\n\n   - **Valid Moves**: On their turn, a player must select a number that does not reduce the opponent's score below zero.\n   \n   - **Invalid Moves**: If all remaining numbers would cause the opponent's score to become negative, the player cannot make a move and loses the game.\n\n2. **Score Reduction**:\n\n   - The selected number is subtracted from the opponent's score.\n   \n   - A player's score cannot go below zero.\n   \n   - Reaching exactly zero is the winning condition.\n\n3. **Removing Numbers**:\n\n   - Once a number is selected, it is removed from the grid and cannot be chosen again.\n   \n   - The grid updates after each turn to reflect the remaining available numbers.\n\n4. **Winning the Game**:\n\n   - A player wins by reducing their opponent's score to exactly zero.\n   \n   - If a player cannot make a valid move on their turn, they lose the game.\n\n---\n\n**Scoring**\n\n- **Score Tracking**: Each player's score begins at 20 and decreases based on the numbers selected by the opponent.\n  \n- **Winning Condition**: Reduce your opponent's score to exactly zero to win.\n  \n- **Losing Condition**: Being unable to make a valid move on your turn results in a loss.\n\n---\n\n**Examples**\n\n*Example Game Play:*\n\n**Initial Setup**\n\n- **Grid**:\n\n  |  5  | 12  |  1  |  8  |\n  |-----|-----|-----|-----|\n  |  3  | 16  |  7  |  2  |\n  |  9  |  4  | 11  | 14  |\n  |  6  | 10  | 13  | 15  |\n\n- **Scores**:\n\n  - Player 1 Score: 20\n  - Player 2 Score: 20\n\n---\n\n**Turn 1: Player 1**\n\n- **Action**: Selects number **5**.\n  \n- **Effect**: Player 2's score is reduced by 5 (20 - 5 = 15).\n  \n- **Grid Update**:\n\n  |  X  | 12  |  1  |  8  |\n  |-----|-----|-----|-----|\n  |  3  | 16  |  7  |  2  |\n  |  9  |  4  | 11  | 14  |\n  |  6  | 10  | 13  | 15  |\n\n- **Scores**:\n\n  - Player 1 Score: 20\n  - Player 2 Score: 15\n\n---\n\n**Turn 2: Player 2**\n\n- **Action**: Selects number **16**.\n  \n- **Effect**: Player 1's score is reduced by 16 (20 - 16 = 4).\n  \n- **Grid Update**:\n\n  |  X  | 12  |  1  |  8  |\n  |-----|-----|-----|-----|\n  |  3  |  X  |  7  |  2  |\n  |  9  |  4  | 11  | 14  |\n  |  6  | 10  | 13  | 15  |\n\n- **Scores**:\n\n  - Player 1 Score: 4\n  - Player 2 Score: 15\n\n---\n\n**Turn 3: Player 1**\n\n- **Action**: Selects number **1**.\n  \n- **Effect**: Player 2's score is reduced by 1 (15 - 1 = 14).\n  \n- **Grid Update**:\n\n  |  X  | 12  |  X  |  8  |\n  |-----|-----|-----|-----|\n  |  3  |  X  |  7  |  2  |\n  |  9  |  4  | 11  | 14  |\n  |  6  | 10  | 13  | 15  |\n\n- **Scores**:\n\n  - Player 1 Score: 4\n  - Player 2 Score: 14\n\n---\n\n**Turn 4: Player 2**\n\n- **Action**: Selects number **4** (must choose a number ≤ Player 1's score).\n  \n- **Effect**: Player 1's score is reduced by 4 (4 - 4 = 0).\n  \n- **Grid Update**:\n\n  |  X  | 12  |  X  |  8  |\n  |-----|-----|-----|-----|\n  |  3  |  X  |  7  |  2  |\n  |  9  |  X  | 11  | 14  |\n  |  6  | 10  | 13  | 15  |\n\n- **Scores**:\n\n  - Player 1 Score: 0\n  - Player 2 Score: 14\n\n- **Result**: Player 2 wins by reducing Player 1's score to zero.\n\n---\n\n**Sample Command-Line Interaction**\n\n```\n--- Player 1's Turn ---\n\nCurrent Grid:\n[ 5 ][12 ][ 1 ][ 8 ]\n[ 3 ][16 ][ 7 ][ 2 ]\n[ 9 ][ 4 ][11 ][14 ]\n[ 6 ][10 ][13 ][15 ]\n\nYour Score: 20\nOpponent's Score: 20\n\nSelect a number from the grid to subtract from your opponent's score:\n> 5\n\nYou selected 5.\n\nOpponent's new score: 15\n\nNumber 5 has been removed from the grid.\n\n---\n\n--- Player 2's Turn ---\n\nCurrent Grid:\n[ X ][12 ][ 1 ][ 8 ]\n[ 3 ][16 ][ 7 ][ 2 ]\n[ 9 ][ 4 ][11 ][14 ]\n[ 6 ][10 ][13 ][15 ]\n\nYour Score: 15\nOpponent's Score: 20\n\nSelect a number from the grid to subtract from your opponent's score:\n> 16\n\nYou selected 16.\n\nOpponent's new score: 4\n\nNumber 16 has been removed from the grid.\n\n...\n```\n\n---\n\n**Strategic Tips**\n\n- **Anticipate Opponent's Moves**: Keep track of the remaining numbers and consider how they could impact your score in future turns.\n\n- **Manage the Opponent's Score**: Aim to leave your opponent with a score that limits their options, potentially forcing them into a losing position.\n\n- **Balance Offense and Defense**: While reducing your opponent's score is crucial, be mindful of not leaving yourself vulnerable to a counter-attack that could cost you the game.\n\n---\n\n**Conclusion**\n\nSubtraction Square is a fast-paced, strategic game that tests players' numerical reasoning and foresight. With simple rules and mechanics, it's easy to learn but offers depth for those looking to master its intricacies. Enjoy the challenge of outsmarting your opponent in this engaging and unique command-line game!",
    "# High-Low Battle\n\n**A Two-Player Strategic Card Game for the Command-Line Interface**\n\n---\n\n## Objective\n\nHigh-Low Battle is a strategic two-player turn-based card game played in a command-line interface. The primary goal is to outscore your opponent over a series of rounds by strategically playing numbered cards from your hand. Victory is achieved by having the highest total score after all rounds are completed. There are no draws in High-Low Battle; a winner is always determined.\n\n---\n\n## Setup\n\n- **Player Hands**: Each player receives a hand of cards numbered from **1** to **9**. Each card has a unique number and can be used only once per game.\n- **Rounds**: The game is played over **five rounds**.\n- **Score Tracker**: Both players start with a score of **0 points**.\n\n---\n\n## Game Components\n\n- **Cards**:\n  - Numbered **1** through **9**.\n  - Each card is unique within a player's hand.\n  - Cards are played secretly and revealed simultaneously.\n- **Hands**:\n  - Each player holds their own hand of nine cards.\n  - Cards once played are discarded and cannot be reused.\n- **Scoreboard**:\n  - Tracks the cumulative score of each player throughout the game.\n- **Rounds**:\n  - A total of five rounds are played.\n  - Each round consists of card selection, reveal, comparison, and scoring.\n\n---\n\n## Turns\n\n### Structure of a Round\n\n1. **Card Selection**:\n   - Both players select one card from their remaining hand.\n   - Selection is done secretly.\n   - Once a card is selected, it cannot be changed.\n\n2. **Card Reveal**:\n   - Players simultaneously reveal their selected cards.\n   - The values are compared to determine the winner of the round.\n\n3. **Scoring**:\n   - Points are awarded based on the comparison of the cards.\n   - The scoreboard is updated with the new scores.\n\n4. **Progression**:\n   - The played cards are discarded from the players' hands.\n   - The game proceeds to the next round until all five rounds are completed.\n\n---\n\n## Rules and Mechanics\n\n### 1. Card Selection\n\n- Players must choose one card per round from their remaining cards.\n- Cards are chosen without knowledge of the opponent's selection.\n- Each card can only be played once per game.\n\n### 2. Card Reveal and Comparison\n\n- After selection, both players reveal their cards at the same time.\n- The numbers on the cards are compared to determine the outcome:\n\n  - **Higher Card Wins**:\n    - The player with the higher number wins the round.\n    - The winner earns **1 point**.\n  - **Tie**:\n    - If both players reveal cards with the same number, the tie-breaker rule is applied.\n\n### 3. Tie-Breaker Rule\n\n- **Tie in the First Round**:\n  - If a tie occurs in the first round, neither player earns points for that round.\n- **Tie in Subsequent Rounds**:\n  - The player who played the **lower-numbered card in the previous round** wins the tie.\n  - The tie-breaker winner earns **2 points** for the round.\n- **No Previous Round Difference (Another Tie)**:\n  - If the previous round was also a tie, compare the last round where the cards were different.\n  - Continue backward until a difference is found.\n  - If all previous rounds are ties, neither player earns points for the current round.\n\n### 4. Scoring\n\n- **Winning a Round**: The player earns **1 point**.\n- **Winning a Tie via Tie-Breaker**: The player earns **2 points**.\n- **Tie with No Tie-Breaker Winner**: No points are awarded.\n\n### 5. End of the Game\n\n- After five rounds, the player with the **highest total score** wins.\n- Since the total number of points possible is odd, a tie in total score is impossible.\n\n---\n\n## Scoring Summary\n\n- **Win a Round (Higher Card)**: +1 point\n- **Win a Tie (Tie-Breaker)**: +2 points\n- **Tie with No Winner**: +0 points\n\n---\n\n## Examples\n\n### Example Game Play:\n\n**Initial Setup**\n\n- **Player 1's Hand**: 1, 2, 3, 4, 5, 6, 7, 8, 9\n- **Player 2's Hand**: 1, 2, 3, 4, 5, 6, 7, 8, 9\n- **Scores**: Player 1 - 0 points, Player 2 - 0 points\n\n---\n\n**Round 1**\n\n- **Selections**:\n  - Player 1 selects **6**.\n  - Player 2 selects **6**.\n- **Reveal**:\n  - Both players reveal **6**.\n- **Outcome**:\n  - It's a tie.\n  - No previous round to determine a tie-breaker.\n  - No points awarded.\n- **Scores**:\n  - Player 1 - 0 points\n  - Player 2 - 0 points\n\n---\n\n**Round 2**\n\n- **Remaining Hands**:\n  - Player 1: 1, 2, 3, 4, 5, 7, 8, 9\n  - Player 2: 1, 2, 3, 4, 5, 7, 8, 9\n- **Selections**:\n  - Player 1 selects **9**.\n  - Player 2 selects **8**.\n- **Reveal**:\n  - Player 1 reveals **9**.\n  - Player 2 reveals **8**.\n- **Outcome**:\n  - Player 1 wins the round.\n  - Player 1 earns **1 point**.\n- **Scores**:\n  - Player 1 - 1 point\n  - Player 2 - 0 points\n\n---\n\n**Round 3**\n\n- **Remaining Hands**:\n  - Player 1: 1, 2, 3, 4, 5, 7, 8\n  - Player 2: 1, 2, 3, 4, 5, 7, 9\n- **Selections**:\n  - Player 1 selects **5**.\n  - Player 2 selects **5**.\n- **Reveal**:\n  - Both players reveal **5**.\n- **Outcome**:\n  - It's a tie.\n  - **Tie-Breaker**:\n    - Previous round cards:\n      - Player 1 played **9**.\n      - Player 2 played **8**.\n    - Player 2 played the lower card in the previous round.\n    - Player 2 wins the tie and earns **2 points**.\n- **Scores**:\n  - Player 1 - 1 point\n  - Player 2 - 2 points\n\n---\n\n**Round 4**\n\n- **Remaining Hands**:\n  - Player 1: 1, 2, 3, 4, 7, 8\n  - Player 2: 1, 2, 3, 4, 7, 9\n- **Selections**:\n  - Player 1 selects **7**.\n  - Player 2 selects **9**.\n- **Reveal**:\n  - Player 1 reveals **7**.\n  - Player 2 reveals **9**.\n- **Outcome**:\n  - Player 2 wins the round.\n  - Player 2 earns **1 point**.\n- **Scores**:\n  - Player 1 - 1 point\n  - Player 2 - 3 points\n\n---\n\n**Round 5**\n\n- **Remaining Hands**:\n  - Player 1: 1, 2, 3, 4, 8\n  - Player 2: 1, 2, 3, 4, 7\n- **Selections**:\n  - Player 1 selects **8**.\n  - Player 2 selects **7**.\n- **Reveal**:\n  - Player 1 reveals **8**.\n  - Player 2 reveals **7**.\n- **Outcome**:\n  - Player 1 wins the round.\n  - Player 1 earns **1 point**.\n- **Scores**:\n  - Player 1 - 2 points\n  - Player 2 - 3 points\n\n---\n\n**Game Conclusion**\n\n- **Final Scores**:\n  - Player 1 - 2 points\n  - Player 2 - 3 points\n- **Winner**: Player 2 wins the game.\n\n---\n\n## Sample Command-Line Interaction\n\n**Round 1**\n\n```plaintext\n[Round 1]\nPlayer 1, enter the number of the card you wish to play: 6\nPlayer 2, enter the number of the card you wish to play: 6\n\nBoth players reveal their cards.\nPlayer 1 played: 6\nPlayer 2 played: 6\n\nIt's a tie! No previous round to determine tie-breaker. No points awarded.\nCurrent Score - Player 1: 0 points | Player 2: 0 points\n```\n\n---\n\n**Round 2**\n\n```plaintext\n[Round 2]\nPlayer 1, enter the number of the card you wish to play: 9\nPlayer 2, enter the number of the card you wish to play: 8\n\nBoth players reveal their cards.\nPlayer 1 played: 9\nPlayer 2 played: 8\n\nPlayer 1 wins the round and earns 1 point.\nCurrent Score - Player 1: 1 point | Player 2: 0 points\n```\n\n---\n\n**Round 3**\n\n```plaintext\n[Round 3]\nPlayer 1, enter the number of the card you wish to play: 5\nPlayer 2, enter the number of the card you wish to play: 5\n\nBoth players reveal their cards.\nPlayer 1 played: 5\nPlayer 2 played: 5\n\nIt's a tie!\nPrevious round cards:\n  Player 1 played: 9\n  Player 2 played: 8\nPlayer 2 played the lower card in the previous round and wins the tie.\nPlayer 2 earns 2 points!\nCurrent Score - Player 1: 1 point | Player 2: 2 points\n```\n\n---\n\n**Round 4**\n\n```plaintext\n[Round 4]\nPlayer 1, enter the number of the card you wish to play: 7\nPlayer 2, enter the number of the card you wish to play: 9\n\nBoth players reveal their cards.\nPlayer 1 played: 7\nPlayer 2 played: 9\n\nPlayer 2 wins the round and earns 1 point.\nCurrent Score - Player 1: 1 point | Player 2: 3 points\n```\n\n---\n\n**Round 5**\n\n```plaintext\n[Round 5]\nPlayer 1, enter the number of the card you wish to play: 8\nPlayer 2, enter the number of the card you wish to play: 7\n\nBoth players reveal their cards.\nPlayer 1 played: 8\nPlayer 2 played: 7\n\nPlayer 1 wins the round and earns 1 point.\nCurrent Score - Player 1: 2 points | Player 2: 3 points\n\nGame Over!\nPlayer 2 wins the game with 3 points!\n```\n\n---\n\n## Strategic Tips\n\n- **Card Management**: Balance the use of high and low cards. Playing all high cards early may leave you vulnerable in later rounds.\n- **Predict Opponent's Moves**: Consider which cards your opponent has left and what they might play next.\n- **Tie-Breaker Strategy**: Sometimes playing a lower card can be advantageous in setting up a tie-breaker win in future rounds.\n- **Adaptability**: Adjust your strategy based on the current score and remaining cards.\n\n---\n\n## Conclusion\n\nHigh-Low Battle is a quick and engaging game that combines luck and strategy. Players must carefully consider their card choices each round to outmaneuver their opponent. With simple mechanics and deep strategic possibilities, High-Low Battle offers a compelling experience suitable for a command-line interface.\n\nEnjoy the battle, and may the best strategist win!\n\n---",
    "# Elemental Clash - Rule Book\n\n## Objective\n\n**Elemental Clash** is a two-player turn-based strategy game where players harness elemental powers to defeat their opponent. The primary goal is to reduce your opponent's health points (HP) from 10 to 0 by strategically selecting elements that counter your opponent's choices. Victory is achieved when your opponent's HP drops to zero or below.\n\n## Setup\n\n- **Players**: Two opponents sit opposite each other.\n- **Health Points**: Both players start with **10 HP**.\n- **Elements**: The game involves **five elements**:\n  - **Fire**\n  - **Water**\n  - **Earth**\n  - **Air**\n  - **Lightning**\n\nNo physical setup is required beyond the command-line interface, as all game interactions occur through player inputs.\n\n## Game Components\n\n### Elements\n\nEach element has unique strengths and weaknesses against other elements. Understanding these interactions is key to mastering the game.\n\n- **Fire**\n  - **Strengths**: Beats **Earth** and **Air**\n  - **Weaknesses**: Loses to **Water** and **Lightning**\n- **Water**\n  - **Strengths**: Beats **Fire** and **Lightning**\n  - **Weaknesses**: Loses to **Earth** and **Air**\n- **Earth**\n  - **Strengths**: Beats **Water** and **Lightning**\n  - **Weaknesses**: Loses to **Fire** and **Air**\n- **Air**\n  - **Strengths**: Beats **Earth** and **Water**\n  - **Weaknesses**: Loses to **Fire** and **Lightning**\n- **Lightning**\n  - **Strengths**: Beats **Fire** and **Air**\n  - **Weaknesses**: Loses to **Water** and **Earth**\n\n### Health Points (HP)\n\n- Each player has a health pool starting at **10 HP**.\n- HP is reduced when a player takes damage based on the outcome of element clashes.\n\n## Turns\n\n**Elemental Clash** is played in a series of rounds. Each round consists of the following steps:\n\n1. **Element Selection**\n   - Both players **secretly** choose one of the five elements.\n   - In a command-line game, each player inputs their choice without revealing it to the opponent.\n2. **Reveal**\n   - Both players **simultaneously reveal** their chosen elements.\n   - In the command-line interface, the game displays both choices after both players have made their selection.\n3. **Resolution**\n   - Determine the outcome based on the interaction of the chosen elements.\n   - Adjust health points accordingly.\n\nPlayers continue taking turns until one player's HP is reduced to zero or below.\n\n## Rules and Mechanics\n\n### Element Interactions\n\nThe core mechanic revolves around the strengths and weaknesses of the elements:\n\n- **Determining the Outcome**:\n  - **Winning Interaction**: If a player's element **beats** the opponent's element, the opponent takes **3 damage**.\n  - **Draw**: If both players choose the **same element**, **both players take 1 damage**.\n  - **No Damage**: If neither element has an advantage over the other (no direct strength), **no damage is dealt**.\n\n### Damage Calculation\n\n- **Winning Interaction**: Opponent loses **3 HP**.\n- **Draw**: Both players lose **1 HP**.\n- **No Damage**: Health points remain unchanged.\n\n### Health Points\n\n- The game keeps track of each player's HP after every round.\n- A player's HP can never exceed the starting value (10 HP).\n- The game ends immediately when a player's HP reaches **zero or below**.\n\n### Victory Conditions\n\n- **Winning the Game**: Reduce your opponent's HP to **zero or below**.\n- There are **no draws**; the game continues until one player wins.\n\n## Scoring\n\n- **Health Points (HP)** serve as the score.\n- Players start with **10 HP**.\n- The first player to reduce the opponent's HP to **zero or below** wins.\n- The game keeps a record of the number of rounds played, which can be used for match statistics.\n\n## Examples\n\n### Example Scenario\n\n**Starting HP**: Player 1 (10 HP), Player 2 (10 HP)\n\n**Round 1**:\n\n- **Element Selection**:\n  - Player 1 chooses **Fire**.\n  - Player 2 chooses **Earth**.\n- **Reveal**:\n  - Both players reveal their choices.\n- **Resolution**:\n  - **Fire beats Earth**.\n  - Player 2 takes **3 damage**.\n  - **HP Update**: Player 1 (10 HP), Player 2 (**7 HP**).\n\n**Round 2**:\n\n- **Element Selection**:\n  - Player 1 chooses **Water**.\n  - Player 2 chooses **Fire**.\n- **Reveal**:\n  - Both players reveal their choices.\n- **Resolution**:\n  - **Water beats Fire**.\n  - Player 1 deals **3 damage** to Player 2.\n  - **HP Update**: Player 1 (10 HP), Player 2 (**4 HP**).\n\n**Round 3**:\n\n- **Element Selection**:\n  - Player 1 chooses **Earth**.\n  - Player 2 chooses **Lightning**.\n- **Reveal**:\n  - Both players reveal their choices.\n- **Resolution**:\n  - **Earth beats Lightning**.\n  - Player 2 takes **3 damage**.\n  - **HP Update**: Player 1 (10 HP), Player 2 (**1 HP**).\n\n**Round 4**:\n\n- **Element Selection**:\n  - Player 1 chooses **Air**.\n  - Player 2 chooses **Water**.\n- **Reveal**:\n  - Both players reveal their choices.\n- **Resolution**:\n  - **Air beats Water**.\n  - Player 2 takes **3 damage**.\n  - **HP Update**: Player 1 (10 HP), Player 2 (**-2 HP**).\n\n**Outcome**: Player 2's HP has dropped below zero. **Player 1 wins the game**.\n\n### Command-Line Interaction Sample\n\n```\n[Round 1]\n\nPlayer 1, select your element (Fire, Water, Earth, Air, Lightning): [Input Hidden]\nPlayer 2, select your element (Fire, Water, Earth, Air, Lightning): [Input Hidden]\n\nBoth players have selected their elements.\n\nPlayer 1 chose: Fire\nPlayer 2 chose: Earth\n\nFire beats Earth!\nPlayer 2 takes 3 damage.\n\nScores:\nPlayer 1 HP: 10\nPlayer 2 HP: 7\n\n[Round 2]\n\nPlayer 1, select your element (Fire, Water, Earth, Air, Lightning): [Input Hidden]\nPlayer 2, select your element (Fire, Water, Earth, Air, Lightning): [Input Hidden]\n\nBoth players have selected their elements.\n\nPlayer 1 chose: Water\nPlayer 2 chose: Fire\n\nWater beats Fire!\nPlayer 2 takes 3 damage.\n\nScores:\nPlayer 1 HP: 10\nPlayer 2 HP: 4\n\n...\n\nPlayer 1 wins the game!\n```\n\n## Strategic Depth\n\nWhile the game mechanics are simple, strategic depth arises from predicting your opponent's choices and countering them. Skilled players can anticipate patterns and select elements that both protect themselves and maximize damage to the opponent. As there are no elements that dominate all others, and each has specific strengths and weaknesses, players must adapt their strategies dynamically.\n\n## Additional Notes\n\n- **Honesty in Element Selection**: Since the game relies on secret selection, honesty is crucial, especially in a command-line environment where inputs may not be truly hidden. It's recommended to implement input masking or agree on trust rules.\n- **No Randomness**: The game lacks random elements, emphasizing player strategy over luck.\n- **No Draws**: The game's mechanics ensure that it cannot end in a draw, fulfilling the requirement for decisive outcomes.\n\n## Conclusion\n\n**Elemental Clash** offers a quick, easy-to-learn, and strategically rich experience suitable for a command-line interface. With simple rules and the need for tactical thinking, players can engage in intense duels where skill and prediction determine the victor.",
    "# Countdown Clash\n\n## Objective\n\n**Countdown Clash** is a strategic two-player, turn-based game where players compete to be the first to reduce a shared countdown number to exactly zero. On each turn, players subtract a prime number from a specified set from the shared number. The player who brings the countdown to zero wins the game. If a player cannot make a valid move without causing the countdown to go negative, they lose.\n\n## Setup\n\n1. **Select the Starting Number (N):**\n   - The game begins with a shared countdown number, **N**.\n   - **N** should be a positive integer agreed upon by both players before the game starts. For a quick game, it's recommended to choose a number between 15 and 30.\n\n2. **Determine Player Order:**\n   - Decide which player goes first. This can be done by a coin toss or mutual agreement.\n\n## Game Components\n\n- **Shared Countdown Number (N):**\n  - A positive integer that both players will reduce with each turn.\n\n- **Allowed Prime Numbers:**\n  - The set of prime numbers that can be subtracted from **N** on each turn:\n    - **2, 3, 5, 7**\n\n## Turns\n\n1. **Player Action:**\n   - On their turn, a player must subtract one of the allowed prime numbers from the current value of **N**.\n\n2. **Valid Moves:**\n   - The chosen prime number must not reduce **N** below zero.\n   - If no valid moves are available (all allowed primes are greater than **N**), the player loses.\n\n3. **Turn Progression:**\n   - Players alternate turns until the game ends.\n\n## Rules and Mechanics\n\n1. **Subtracting Primes:**\n   - Players can only subtract from the list of allowed prime numbers: **2, 3, 5, 7**.\n\n2. **Updating the Countdown:**\n   - After a player subtracts a prime number, **N** is updated to reflect the new value (N = N - prime number).\n\n3. **Winning the Game:**\n   - The player who reduces **N** to exactly zero wins the game.\n\n4. **Losing the Game:**\n   - A player loses if:\n     - They cannot make a valid move on their turn (no allowed primes can be subtracted without making **N** negative).\n     - They reduce **N** to a negative number (an invalid move).\n\n5. **No Skipping Turns:**\n   - Players cannot skip their turn. If a player has at least one valid move, they must make a move.\n\n## Scoring\n\n- **Winning:**\n  - The winner is the player who successfully reduces **N** to zero or forces the opponent into a position with no valid moves.\n\n- **Tracking Wins:**\n  - Players can track the number of games won if playing multiple rounds.\n\n## Examples\n\n### Example Game Play\n\n**Starting Number (N):** 23\n\n**Turn Sequence:**\n\n1. **Player 1's Turn (N = 23):**\n   - Player 1 subtracts **5**.\n   - **N** is now **18** (23 - 5).\n\n2. **Player 2's Turn (N = 18):**\n   - Player 2 subtracts **7**.\n   - **N** is now **11** (18 - 7).\n\n3. **Player 1's Turn (N = 11):**\n   - Player 1 subtracts **5**.\n   - **N** is now **6** (11 - 5).\n\n4. **Player 2's Turn (N = 6):**\n   - Player 2 subtracts **2**.\n   - **N** is now **4** (6 - 2).\n\n5. **Player 1's Turn (N = 4):**\n   - Player 1 subtracts **2**.\n   - **N** is now **2** (4 - 2).\n\n6. **Player 2's Turn (N = 2):**\n   - Player 2 subtracts **2**.\n   - **N** is now **0** (2 - 2).\n   - **Player 2 wins**.\n\n### Command-Line Interaction Sample\n\n```\nGame Start: N = 23\n\nPlayer 1's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 23\nEnter the prime number to subtract: 5\nN is now 18\n\nPlayer 2's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 18\nEnter the prime number to subtract: 7\nN is now 11\n\nPlayer 1's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 11\nEnter the prime number to subtract: 5\nN is now 6\n\nPlayer 2's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 6\nEnter the prime number to subtract: 2\nN is now 4\n\nPlayer 1's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 4\nEnter the prime number to subtract: 2\nN is now 2\n\nPlayer 2's turn.\nAvailable primes to subtract: 2, 3, 5, 7\nN = 2\nEnter the prime number to subtract: 2\nN is now 0\n\nPlayer 2 wins!\n```\n\n## Strategic Tips\n\n- **Planning Ahead:**\n  - Anticipate the results of your move and how it will affect your opponent's options.\n  \n- **Controlling the Game:**\n  - Try to leave **N** in a state where the opponent has limited choices, potentially forcing them into a losing position.\n  \n- **Prime Selection:**\n  - Use higher primes early to reduce **N** quickly, but be cautious of the remaining options as **N** decreases.\n\n## Game Variations\n\n- **Changing Allowed Primes:**\n  - Modify the list of allowed primes to adjust game difficulty (e.g., use only 2, 3, and 5).\n\n- **Different Starting Number:**\n  - Start with a higher **N** for a longer game or a lower **N** for a quicker game.\n\n- **Additional Primes:**\n  - Include more prime numbers (e.g., 11, 13) to add complexity.\n\n## Summary\n\n**Countdown Clash** is a simple yet strategic game that requires foresight and planning. It's easy to implement in a command-line interface and provides a quick and competitive experience. By understanding the game's mechanics and carefully selecting which prime numbers to subtract, a skilled player can consistently triumph over their opponent.\n\nHave fun clashing!",
    "# Divisor Duel\n\n## Objective\n\nThe goal of **Divisor Duel** is to be the player who reduces the **Current Number** to 1 by subtracting proper divisors of the Current Number on your turn. If a player cannot make a valid move (i.e., the Current Number is 1 or a prime number with no proper divisors), they lose the game.\n\n---\n\n## Setup\n\n1. **Determine the Starting Number**:\n   - Both players agree on a positive integer to start the game. This number is called the **Current Number**.\n   - Recommended starting numbers for a quick game are between **20 and 100**.\n\n2. **Assign Players**:\n   - Decide who will be **Player 1** and **Player 2**. You can flip a coin or have the player who most recently performed a mathematical calculation go first.\n\n---\n\n## Game Components\n\n- **Current Number**:\n  - A positive integer that changes throughout the game based on the players' moves.\n  - It is shared between both players and is updated each turn.\n\n- **Proper Divisors**:\n  - For any positive integer N, its proper divisors are all positive integers less than N that divide N without leaving a remainder, **excluding 1 and N itself**.\n  - Example:\n    - Proper divisors of 12 are **2, 3, 4, and 6**.\n\n---\n\n## Turns\n\n1. **Turn Order**:\n   - Players take turns alternately, starting with **Player 1**.\n\n2. **Actions on Your Turn**:\n   - **Determine Proper Divisors**:\n     - Find all proper divisors of the Current Number.\n   - **Choose a Divisor**:\n     - Select one proper divisor from the list.\n   - **Subtract the Divisor**:\n     - Subtract the chosen divisor from the Current Number.\n   - **Update the Current Number**:\n     - The result becomes the new Current Number for the next player's turn.\n\n3. **Invalid Moves**:\n   - If the Current Number is 1 or a prime number (has no proper divisors), the player cannot make a move and loses the game.\n\n---\n\n## Rules and Mechanics\n\n1. **Valid Divisors**:\n   - Only proper divisors (excluding 1 and the number itself) can be subtracted.\n   - The chosen divisor must divide evenly into the Current Number with no remainder.\n\n2. **Updating the Current Number**:\n   - After subtraction, the Current Number must remain a positive integer greater than zero.\n   - The new Current Number is used by the next player on their turn.\n\n3. **Winning the Game**:\n   - A player wins if their opponent cannot make a valid move on their turn.\n   - This typically occurs when the Current Number becomes 1 or a prime number.\n\n4. **No Skipping Turns**:\n   - Players cannot skip their turn. If a player has at least one valid move, they must make a move.\n\n5. **Game End Condition**:\n   - The game ends immediately when a player cannot make a valid move.\n\n---\n\n## Scoring\n\n- **Single Game Victory**:\n  - The player who forces their opponent into a position where they cannot make a valid move wins the game.\n\n- **Match Play (Optional)**:\n  - Players can agree to play multiple rounds.\n  - Keep track of the number of games won by each player.\n  - The first player to win a predetermined number of games (e.g., best of five) wins the match.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Initial Setup**:\n- Current Number: **30**\n- Player 1 starts the game.\n\n---\n\n**Turn 1**\n\n- **Player 1's Turn**:\n  - Proper Divisors of 30: **2, 3, 5, 6, 10, 15**\n  - Player 1 chooses to subtract **15**.\n  - Calculation: 30 - 15 = **15**\n  - **New Current Number**: **15**\n\n---\n\n**Turn 2**\n\n- **Player 2's Turn**:\n  - Proper Divisors of 15: **3, 5**\n  - Player 2 chooses to subtract **5**.\n  - Calculation: 15 - 5 = **10**\n  - **New Current Number**: **10**\n\n---\n\n**Turn 3**\n\n- **Player 1's Turn**:\n  - Proper Divisors of 10: **2, 5**\n  - Player 1 chooses to subtract **5**.\n  - Calculation: 10 - 5 = **5**\n  - **New Current Number**: **5**\n\n---\n\n**Turn 4**\n\n- **Player 2's Turn**:\n  - Proper Divisors of 5: **None** (since 5 is prime)\n  - Player 2 cannot make a move.\n  - **Player 1 wins the game!**\n\n---\n\n### Command-Line Interaction Example\n\nBelow is a sample command-line interaction for the game:\n\n```\nGame Start! Current Number is 30.\n\nPlayer 1's Turn:\nProper divisors of 30 are: 2, 3, 5, 6, 10, 15\nEnter the divisor to subtract: 15\nPlayer 1 subtracts 15 from 30.\nNew Current Number is 15.\n\nPlayer 2's Turn:\nProper divisors of 15 are: 3, 5\nEnter the divisor to subtract: 5\nPlayer 2 subtracts 5 from 15.\nNew Current Number is 10.\n\nPlayer 1's Turn:\nProper divisors of 10 are: 2, 5\nEnter the divisor to subtract: 5\nPlayer 1 subtracts 5 from 10.\nNew Current Number is 5.\n\nPlayer 2's Turn:\nProper divisors of 5 are: None\nPlayer 2 cannot make a move.\nPlayer 1 wins the game!\n\nGame Over.\n```\n\n---\n\n## Strategic Considerations\n\n- **Plan Ahead**:\n  - Anticipate the results of your moves to avoid leaving your opponent with advantageous numbers.\n  - Consider how your move will affect the options available to your opponent.\n\n- **Prime Numbers**:\n  - Aim to reduce the Current Number to a prime number on your opponent's turn, forcing them into a position where they cannot move.\n\n- **Optimal Subtractions**:\n  - Sometimes subtracting the smallest proper divisor is the best move to control the flow of the game.\n\n- **Avoiding Traps**:\n  - Be cautious of moves that might seem beneficial but could lead to a loss in subsequent turns.\n\n---\n\n## Tips for Coding the Game\n\n- **Determine Proper Divisors**:\n  - Create a function to calculate all proper divisors of a given number.\n\n- **Input Validation**:\n  - Ensure that the player's chosen divisor is valid and is a proper divisor of the Current Number.\n\n- **Game Loop**:\n  - Implement a loop that alternates turns between the two players until the game ends.\n\n- **Win Condition**:\n  - Check after each turn if the Current Number has become 1 or a prime number to determine if the game has ended.\n\n- **User Interface**:\n  - Display clear prompts and messages to guide players through the game.\n\n---\n\n## Conclusion\n\n**Divisor Duel** is a strategic, turn-based game that combines simple arithmetic with forward-thinking. It's easy to learn and quick to play, making it perfect for casual gaming sessions. Players can enhance their mathematical skills while engaging in friendly competition. Enjoy the challenge of outsmarting your opponent and claiming victory in the Divisor Duel!\n\n---",
    "# Divisor Duel: A Strategic Two-Player Number Game\n\n## Objective\n\nBe the first player to reduce the **Current Number** to exactly **zero** by strategically subtracting its proper divisors.\n\n- **Victory**: You win if you reduce the Current Number to zero on your turn.\n- **Loss**: You lose if your opponent reduces the Current Number to zero before you.\n\n---\n\n## Setup\n\n1. **Starting Number**: The game begins with a shared **Current Number** of **20**. Players can agree to start with a different positive integer for varied difficulty.\n2. **Player Assignment**: Determine who will be **Player 1** and **Player 2**. You can flip a coin or choose randomly.\n3. **Game Interface**: The game is played in a command-line interface, where players enter their moves when prompted.\n\n---\n\n## Game Components\n\n- **Current Number**: An integer that starts at **20** and changes as players subtract numbers.\n- **Proper Divisors**: Numbers that evenly divide the Current Number excluding 1 and the number itself.\n  - For example, proper divisors of 8 are **2** and **4**.\n- **Prime Number Identifier**: Recognizes when the Current Number is prime.\n\n---\n\n## Turns\n\n- **Alternate Turns**: Players take turns one after the other, starting with **Player 1**.\n- **Turn Structure**:\n  1. **Display Current Number**: The game shows the Current Number.\n  2. **List Proper Divisors**: The game lists available proper divisors for the Current Number.\n  3. **Player Action**: The current player chooses a number to subtract according to the rules.\n  4. **Update Number**: The chosen number is subtracted from the Current Number.\n  5. **Check for Win**: If the Current Number reaches zero, the player who made the last move wins.\n\n---\n\n## Rules and Mechanics\n\n1. **Subtracting Proper Divisors**:\n   - On your turn, you **must** subtract a proper divisor of the Current Number.\n   - **Proper Divisors** exclude **1** and the number itself.\n   - If the Current Number is **4**, valid options are **2** (since 2 divides 4 evenly).\n\n2. **Handling Prime Numbers**:\n   - If the Current Number is **prime** (no proper divisors), you **must** subtract **1**.\n   - For example, if the Current Number is **13**, you can only subtract **1**.\n\n3. **No Proper Divisors**:\n   - If the Current Number has no proper divisors (excluding 1 and itself), you **must** subtract **1**.\n   - This applies to numbers like **1** and **prime numbers**.\n\n4. **Invalid Moves**:\n   - You cannot subtract **1** unless the Current Number is prime or has no proper divisors.\n   - You cannot subtract a number that's not a proper divisor of the Current Number.\n   - Making an invalid move forfeits your turn (optional rule for added competitiveness).\n\n5. **Winning the Game**:\n   - You win if you reduce the Current Number to **exactly zero** on your turn.\n   - If you cannot make a valid move when the Current Number is greater than zero, you lose.\n\n---\n\n## Scoring\n\n- **Win Condition**: First player to reduce the Current Number to zero wins.\n- **No Points System**: The game doesn't track points; it's a win-or-lose outcome.\n- **Match Play**: Players can decide to play multiple rounds, keeping track of wins.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Starting Current Number**: 20\n\n#### Turn Sequence:\n\n1. **Player 1's Turn**:\n   - **Current Number**: 20\n   - **Proper Divisors**: 2, 4, 5, 10\n   - **Player 1 subtracts**: 5\n   - **New Current Number**: 15\n\n2. **Player 2's Turn**:\n   - **Current Number**: 15\n   - **Proper Divisors**: 3, 5\n   - **Player 2 subtracts**: 5\n   - **New Current Number**: 10\n\n3. **Player 1's Turn**:\n   - **Current Number**: 10\n   - **Proper Divisors**: 2, 5\n   - **Player 1 subtracts**: 5\n   - **New Current Number**: 5\n\n4. **Player 2's Turn**:\n   - **Current Number**: 5 (prime)\n   - **Must subtract**: 1\n   - **Player 2 subtracts**: 1\n   - **New Current Number**: 4\n\n5. **Player 1's Turn**:\n   - **Current Number**: 4\n   - **Proper Divisors**: 2\n   - **Player 1 subtracts**: 2\n   - **New Current Number**: 2\n\n6. **Player 2's Turn**:\n   - **Current Number**: 2 (prime)\n   - **Must subtract**: 1\n   - **Player 2 subtracts**: 1\n   - **New Current Number**: 1\n\n7. **Player 1's Turn**:\n   - **Current Number**: 1 (no proper divisors)\n   - **Must subtract**: 1\n   - **Player 1 subtracts**: 1\n   - **New Current Number**: 0\n   - **Player 1 Wins!**\n\n---\n\n## Command-Line Interaction Example\n\n```\n--- Divisor Duel ---\n\nStarting Current Number: 20\n\nPlayer 1's Turn\nCurrent Number: 20\nProper Divisors: 2, 4, 5, 10\nEnter a number to subtract: 5\n\nPlayer 1 subtracts 5.\nNew Current Number: 15\n\nPlayer 2's Turn\nCurrent Number: 15\nProper Divisors: 3, 5\nEnter a number to subtract: 5\n\nPlayer 2 subtracts 5.\nNew Current Number: 10\n\nPlayer 1's Turn\nCurrent Number: 10\nProper Divisors: 2, 5\nEnter a number to subtract: 5\n\nPlayer 1 subtracts 5.\nNew Current Number: 5\n\nPlayer 2's Turn\nCurrent Number: 5\n5 is a prime number.\nYou must subtract 1.\nEnter a number to subtract: 1\n\nPlayer 2 subtracts 1.\nNew Current Number: 4\n\nPlayer 1's Turn\nCurrent Number: 4\nProper Divisors: 2\nEnter a number to subtract: 2\n\nPlayer 1 subtracts 2.\nNew Current Number: 2\n\nPlayer 2's Turn\nCurrent Number: 2\n2 is a prime number.\nYou must subtract 1.\nEnter a number to subtract: 1\n\nPlayer 2 subtracts 1.\nNew Current Number: 1\n\nPlayer 1's Turn\nCurrent Number: 1\nNo proper divisors available.\nYou must subtract 1.\nEnter a number to subtract: 1\n\nPlayer 1 subtracts 1.\nNew Current Number: 0\n\nPlayer 1 wins the game!\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's moves by calculating potential future Current Numbers.\n- **Control the Primes**: Force the Current Number into a prime on your opponent's turn, limiting their options.\n- **Balance Subtractions**: Sometimes subtracting a smaller proper divisor can set up a win in subsequent turns.\n- **Avoid Invalid Moves**: Always ensure the number you subtract is a proper divisor to avoid losing a turn.\n\n---\n\n## Additional Rules (Optional for Advanced Play)\n\n- **Forfeit Rule**: An invalid move results in an immediate loss.\n- **Time Limit**: Players have a set amount of time (e.g., 30 seconds) per turn to make their move.\n- **Variable Starting Number**: Agree on different starting numbers to increase difficulty. Larger numbers make the game longer and potentially more complex.\n\n---\n\n## Conclusion\n\nDivisor Duel is an engaging and strategic game that combines simple arithmetic with tactical planning. It's easy to learn and quick to play, making it ideal for a fun challenge between friends or as a programming project to implement. Mastery comes from understanding the properties of numbers and anticipating your opponent's moves.\n\nEnjoy the game and may the best strategist win!\n\n---\n\n*Happy dueling!*",
    "# Divisor Duel\n\n## Objective\n\nDivisor Duel is a two-player, turn-based game where players take turns reducing a shared positive integer by subtracting its proper divisors. The primary goal is to be the last player able to make a valid move. A player wins by forcing their opponent into a position where they cannot make a move on their turn.\n\n## Setup\n\n- **Starting Number (N):** The game begins with a shared positive integer \\( N \\) greater than 1. It is recommended to start with a number like 30 for a quick game, but any integer greater than 1 can be used.\n\n- **Players:** Two players, referred to as **Player 1** and **Player 2**.\n\n## Game Components\n\n- **Shared Number (N):** This is the current number in play. It is visible to both players and is updated each turn based on the players' actions.\n\n- **Proper Divisors:** For any given number \\( N \\), its proper divisors are all positive integers less than \\( N \\) that divide \\( N \\) evenly (excluding 1 and \\( N \\) itself).\n\n## Turns\n\n- **Turn Order:** Players take turns alternately. Player 1 starts the game.\n\n- **Player Actions:**\n  - On their turn, a player must:\n    1. **Identify the Proper Divisors of \\( N \\):** List all the proper divisors of the current number \\( N \\) (excluding 1 and \\( N \\)).\n    2. **Choose a Divisor to Subtract:** Select one proper divisor from the list.\n    3. **Update \\( N \\):** Subtract the chosen divisor from \\( N \\) to obtain a new \\( N \\).\n    4. **Announce the Move:** Inform the opponent of the chosen divisor and the new value of \\( N \\).\n\n- **Turn Progression:** The updated \\( N \\) becomes the current number for the next player's turn.\n\n## Rules and Mechanics\n\n1. **Valid Moves:**\n   - A move is valid if:\n     - The chosen divisor is a proper divisor of \\( N \\) (excluding 1 and \\( N \\)).\n     - The subtraction results in a positive integer greater than 0.\n\n2. **Invalid Moves:**\n   - If a player cannot find any proper divisors of \\( N \\) (i.e., \\( N \\) is prime or \\( N \\) equals 1), they cannot make a move and lose the game.\n\n3. **End of Game:**\n   - The game ends when a player cannot make a valid move on their turn. The other player is declared the winner.\n\n4. **No Draws:**\n   - There are no possible draw scenarios in Divisor Duel. The game will always result in one winner and one loser.\n\n## Scoring\n\n- **Winning the Game:** The player who forces their opponent into a position where they cannot make a valid move wins the game.\n\n- **No Points System:** Divisor Duel does not track points. Victory is determined solely by the ability to make valid moves.\n\n## Examples\n\n### Example Game\n\n**Starting Number:** \\( N = 30 \\)\n\n#### Turn 1:\n- **Player 1's Turn:**\n  - **Proper Divisors of 30:** 2, 3, 5, 6, 10, 15\n  - **Player 1 Chooses:** 15\n  - **New \\( N \\):** \\( 30 - 15 = 15 \\)\n  - **Announcement:** \"I subtract 15 from 30. New N is 15.\"\n\n#### Turn 2:\n- **Player 2's Turn:**\n  - **Proper Divisors of 15:** 3, 5\n  - **Player 2 Chooses:** 5\n  - **New \\( N \\):** \\( 15 - 5 = 10 \\)\n  - **Announcement:** \"I subtract 5 from 15. New N is 10.\"\n\n#### Turn 3:\n- **Player 1's Turn:**\n  - **Proper Divisors of 10:** 2, 5\n  - **Player 1 Chooses:** 5\n  - **New \\( N \\):** \\( 10 - 5 = 5 \\)\n  - **Announcement:** \"I subtract 5 from 10. New N is 5.\"\n\n#### Turn 4:\n- **Player 2's Turn:**\n  - **Proper Divisors of 5:** None (since 5 is prime)\n  - **Outcome:** Player 2 cannot make a move.\n  - **Winner:** Player 1 wins the game.\n\n### Command-Line Interaction\n\nBelow is a sample interaction between two players in a command-line interface:\n\n```\nStarting Number (N): 30\n\nPlayer 1's Turn:\nProper divisors of 30: 2, 3, 5, 6, 10, 15\nEnter the divisor to subtract: 15\nYou subtracted 15 from 30.\nNew N is 15.\n\nPlayer 2's Turn:\nProper divisors of 15: 3, 5\nEnter the divisor to subtract: 5\nYou subtracted 5 from 15.\nNew N is 10.\n\nPlayer 1's Turn:\nProper divisors of 10: 2, 5\nEnter the divisor to subtract: 5\nYou subtracted 5 from 10.\nNew N is 5.\n\nPlayer 2's Turn:\nProper divisors of 5: None\nNo valid moves available. Player 2 loses.\nPlayer 1 wins the game!\n```\n\n## Strategic Depth\n\n- **Understanding Divisors:** Skilled players will benefit from quickly identifying the proper divisors of numbers and anticipating future moves.\n\n- **Planning Ahead:** By choosing specific divisors, players can manipulate \\( N \\) to prime numbers or 1 on their opponent's turn, forcing a win.\n\n- **Control of the Game:** Players can strategize to control the flow of the game, deciding when to reduce \\( N \\) significantly or minimally based on the available divisors.\n\n## Summary\n\nDivisor Duel is a simple yet strategic game that involves number theory and foresight. It is easy to code and play in a command-line interface, ends quickly, and ensures that skilled players can consistently outmaneuver unskilled opponents through better understanding and planning.\n\n---\n\nEnjoy playing Divisor Duel, and may the best strategist win!",
    "# Divisor Duel Rule Book\n\n## Objective\n\n**Divisor Duel** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to force your opponent into a position where they cannot make a valid move. A player wins by reducing the current number to a point where the opponent has no proper divisors to subtract, thereby securing victory.\n\n---\n\n## Setup\n\n1. **Initial Number Selection**:\n   - Agree on a positive integer to start the game. This number is called the **Current Number (N)**.\n   - The recommended starting range is between **10** and **100** for a quick game.\n\n2. **Player Order**:\n   - Decide which player goes first. This can be done by a coin toss or mutual agreement.\n\n---\n\n## Game Components\n\n- **Current Number (N)**:\n  - A shared number that changes throughout the game based on players' moves.\n  - It starts at the agreed-upon initial value and decreases as the game progresses.\n\n- **Proper Divisors**:\n  - Numbers less than **N** that divide **N** exactly (without leaving a remainder), excluding **1** and **N** itself.\n  - Essential for determining valid moves.\n\n---\n\n## Turns\n\n1. **Turn Structure**:\n   - Players alternate turns, starting with **Player 1**.\n   - On each turn, a player performs the following actions:\n     - Calculate the proper divisors of the current number.\n     - Choose a proper divisor to subtract.\n     - Subtract the chosen proper divisor from the current number.\n     - Declare the new current number.\n\n2. **Turn Progression**:\n   - The game continues with players alternating turns until a win condition is met.\n\n---\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - On your turn, you **must** subtract a proper divisor of the current number from the current number.\n   - **Proper Divisors** exclude **1** and the number itself.\n   - The result becomes the new current number for the next turn.\n\n2. **Calculating Proper Divisors**:\n   - Find all positive integers greater than **1** and less than **N** that divide **N** exactly.\n   - For example, if **N = 18**, the proper divisors are **2, 3, 6, 9**.\n\n3. **Winning the Game**:\n   - If a player cannot make a valid move because the current number has no proper divisors (i.e., the current number is **prime** or **2**), they lose.\n   - The opponent who forced this position wins the game.\n\n4. **Invalid Moves**:\n   - If a player attempts to subtract an invalid number (e.g., a non-divisor, **1**, or the number itself), they forfeit their turn.\n   - The current number remains unchanged, and the opponent takes their turn.\n\n---\n\n## Scoring\n\n- **Winning**:\n  - The winner is the player who successfully reduces the current number to a point where the opponent has no valid moves.\n  \n- **Tracking**:\n  - No points are tracked; the game outcome is simply a win or loss.\n  - Keep a record of wins if playing multiple rounds.\n\n---\n\n## Examples\n\n### Example Game\n\n**Initial Setup**:\n- Starting Current Number (**N**): 30\n- Player 1: Alice\n- Player 2: Bob\n\n---\n\n**Game Play**:\n\n1. **Turn 1 - Alice**:\n   - Current Number (**N**): 30\n   - Proper Divisors of 30: **2, 3, 5, 6, 10, 15**\n   - Alice chooses to subtract **15**.\n   - New Current Number: 30 - 15 = **15**\n   - **Alice**: \"I subtract 15. The new number is 15.\"\n\n2. **Turn 2 - Bob**:\n   - Current Number (**N**): 15\n   - Proper Divisors of 15: **3, 5**\n   - Bob chooses to subtract **5**.\n   - New Current Number: 15 - 5 = **10**\n   - **Bob**: \"I subtract 5. The new number is 10.\"\n\n3. **Turn 3 - Alice**:\n   - Current Number (**N**): 10\n   - Proper Divisors of 10: **2, 5**\n   - Alice chooses to subtract **5**.\n   - New Current Number: 10 - 5 = **5**\n   - **Alice**: \"I subtract 5. The new number is 5.\"\n\n4. **Turn 4 - Bob**:\n   - Current Number (**N**): 5\n   - Proper Divisors of 5: (No proper divisors greater than 1)\n   - Bob has no valid moves and loses.\n   - **Bob**: \"I have no valid moves. You win!\"\n\n---\n\n### Command-Line Interaction\n\n**Initial Setup**:\n\n```plaintext\nWelcome to Divisor Duel!\nEnter the starting number (N): 30\nPlayer 1 (Alice) will start the game.\n```\n\n**Gameplay**:\n\n- **Turn 1**:\n\n  ```plaintext\n  [Alice's Turn]\n  Current Number (N): 30\n  Proper Divisors (excluding 1 and N): 2, 3, 5, 6, 10, 15\n  Enter a proper divisor to subtract: 15\n  Subtracting 15 from 30. New Current Number is 15.\n  ```\n\n- **Turn 2**:\n\n  ```plaintext\n  [Bob's Turn]\n  Current Number (N): 15\n  Proper Divisors (excluding 1 and N): 3, 5\n  Enter a proper divisor to subtract: 5\n  Subtracting 5 from 15. New Current Number is 10.\n  ```\n\n- **Turn 3**:\n\n  ```plaintext\n  [Alice's Turn]\n  Current Number (N): 10\n  Proper Divisors (excluding 1 and N): 2, 5\n  Enter a proper divisor to subtract: 5\n  Subtracting 5 from 10. New Current Number is 5.\n  ```\n\n- **Turn 4**:\n\n  ```plaintext\n  [Bob's Turn]\n  Current Number (N): 5\n  Proper Divisors (excluding 1 and N): None\n  No valid moves available. Bob loses!\n  Congratulations Alice, you win!\n  ```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**:\n  - Anticipate the possible resulting numbers after your move to avoid setting up your opponent for a winning move.\n  \n- **Prime Awareness**:\n  - Forcing the current number to a prime number (greater than 2) puts your opponent at a disadvantage since they will have no valid moves.\n\n- **Avoid Low Numbers Early**:\n  - Subtracting small divisors may prolong the game, but can give your opponent an advantage if not carefully planned.\n\n---\n\n## Notes\n\n- **Simple Implementation**:\n  - The game mechanics are straightforward and suitable for a basic command-line program.\n  \n- **No Draws**:\n  - The game cannot end in a draw; a player must lose by being unable to make a valid move.\n\n- **Game Length**:\n  - Starting with numbers between **10** and **100** generally results in a quick game.\n\n---\n\nEnjoy challenging your friends in this battle of wits and strategy with **Divisor Duel**!",
    "**Game Name:** Divisor Subtractor\n\n---\n\n### **Objective**\n\nBe the last player to make a valid move by strategically selecting divisors of a shared number. Successfully reduce the shared number to zero or force your opponent into a position where they cannot make a valid move to win the game.\n\n---\n\n### **Setup**\n\n1. **Choose the Starting Number (N):**\n\n   - Both players agree on a positive integer to start the game. For simplicity, you can begin with **N = 30**.\n   - Alternatively, players can take turns choosing the starting number in different rounds.\n\n2. **Decide Turn Order:**\n\n   - Flip a coin, or have one player choose to go first. Players alternate turns throughout the game.\n\n---\n\n### **Game Components**\n\n- **Shared Number (N):**\n  - A positive integer that both players manipulate during the game.\n  - It starts at the agreed-upon value and changes as players subtract divisors.\n\n- **Divisors:**\n  - Integers greater than 1 that evenly divide the current N without leaving a remainder.\n\n- **Players:**\n  - Two participants, referred to as **Player 1** and **Player 2**.\n\n- **Command-Line Interface:**\n  - Players interact with the game by entering commands in the terminal or console.\n  - All necessary information, such as current N and available divisors, is displayed to the players.\n\n---\n\n### **Turns**\n\n- **Turn Structure:**\n\n  1. **Display Current State:**\n     - The game shows the current value of N and lists all valid divisors.\n  \n  2. **Player Action:**\n     - The active player selects a valid divisor D of N (D > 1 and N mod D == 0).\n  \n  3. **Update N:**\n     - Subtract D from N to get the new N: _N = N - D_.\n\n  4. **Announce Move:**\n     - The game displays the chosen divisor and the new value of N.\n\n  5. **Check for Win Condition:**\n     - If N reaches zero, the player who made the last move wins.\n     - If no valid divisors remain and N is not zero, the player who cannot move loses.\n\n- **Turn Progression:**\n\n  - Players alternate turns until the game ends with a win or loss.\n  - There are no skips or additional turns unless specified by the rules.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Valid Divisors:**\n\n   - On each turn, a player must choose an integer D such that:\n     - **D > 1**\n     - **D divides N evenly** (N mod D == 0)\n     - **D < N**\n\n2. **Subtracting Divisors:**\n\n   - After selecting D, subtract it from N:\n     - New N = N - D\n\n3. **Winning the Game:**\n\n   - **Reducing N to Zero:**\n     - If a player reduces N to exactly zero on their turn, they win the game.\n\n   - **No Valid Moves:**\n     - If a player cannot find any valid divisor of N on their turn (excluding D=1 and D=N), they lose the game.\n\n4. **No Repeats or Restrictions:**\n\n   - Divisors can be reused in subsequent turns as long as they are valid for the current N.\n\n5. **No Draws:**\n\n   - The game cannot end in a draw; there is always a winner.\n\n---\n\n### **Scoring**\n\n- **Win/Loss Outcome:**\n\n  - **Winner:** The player who reduces N to zero or forces the opponent into a position with no valid moves.\n  - **Loser:** The player who cannot make a valid move on their turn.\n\n- **No Point Tracking:**\n\n  - The game focuses on strategic play rather than accumulating points.\n\n---\n\n### **Examples**\n\n#### **Example Game Play**\n\n**Starting N:** 30\n\n---\n\n**Player 1's Turn:**\n\n- **Current N:** 30\n- **Available Divisors:** 2, 3, 5, 6, 10, 15\n- **Action:**\n  - Chooses D = 5\n  - Calculates new N: 30 - 5 = 25\n- **Announcement:**\n  - \"I subtract 5 from 30. New N is 25.\"\n\n---\n\n**Player 2's Turn:**\n\n- **Current N:** 25\n- **Available Divisors:** 5\n- **Action:**\n  - Chooses D = 5\n  - Calculates new N: 25 - 5 = 20\n- **Announcement:**\n  - \"I subtract 5 from 25. New N is 20.\"\n\n---\n\n**Player 1's Turn:**\n\n- **Current N:** 20\n- **Available Divisors:** 2, 4, 5, 10\n- **Action:**\n  - Chooses D = 10\n  - Calculates new N: 20 - 10 = 10\n- **Announcement:**\n  - \"I subtract 10 from 20. New N is 10.\"\n\n---\n\n**Player 2's Turn:**\n\n- **Current N:** 10\n- **Available Divisors:** 2, 5\n- **Action:**\n  - Chooses D = 5\n  - Calculates new N: 10 - 5 = 5\n- **Announcement:**\n  - \"I subtract 5 from 10. New N is 5.\"\n\n---\n\n**Player 1's Turn:**\n\n- **Current N:** 5\n- **Available Divisors:** 5\n- **Action:**\n  - Chooses D = 5\n  - Calculates new N: 5 - 5 = 0\n- **Announcement:**\n  - \"I subtract 5 from 5. New N is 0.\"\n- **Result:**\n  - N has been reduced to zero. **Player 1 wins!**\n\n---\n\n#### **Command-Line Interaction Sample**\n\n```\nCurrent N: 30\nAvailable divisors: 2, 3, 5, 6, 10, 15\nPlayer 1, enter your divisor: 5\nYou subtracted 5 from 30. New N is 25.\n\nCurrent N: 25\nAvailable divisors: 5\nPlayer 2, enter your divisor: 5\nYou subtracted 5 from 25. New N is 20.\n\nCurrent N: 20\nAvailable divisors: 2, 4, 5, 10\nPlayer 1, enter your divisor: 10\nYou subtracted 10 from 20. New N is 10.\n\nCurrent N: 10\nAvailable divisors: 2, 5\nPlayer 2, enter your divisor: 5\nYou subtracted 5 from 10. New N is 5.\n\nCurrent N: 5\nAvailable divisors: 5\nPlayer 1, enter your divisor: 5\nYou subtracted 5 from 5. New N is 0.\nPlayer 1 wins the game!\n```\n\n---\n\n### **Strategy Tips**\n\n- **Plan Ahead:**\n  - Anticipate future moves by considering how your choice will affect the available divisors for your opponent.\n  \n- **Limit Opponent's Options:**\n  - Aim to leave N as a number with few divisors, forcing your opponent into a difficult position.\n\n- **Control the Game Flow:**\n  - Use larger divisors when advantageous to reduce N more significantly.\n\n---\n\n### **Notes**\n\n- **Adjusting Difficulty:**\n  - For a shorter game, start with a smaller N.\n  - For a more challenging game, choose a larger N or agree to avoid certain divisors.\n\n- **Multiple Rounds:**\n  - Players can play multiple rounds, alternating who chooses N or who goes first.\n\n- **Programming Simplicity:**\n  - The game is easy to code in a command-line interface using basic input/output and arithmetic operations.\n\n---\n\n**Enjoy playing Divisor Subtractor, and may the best strategist win!**",
    "# Isolation: A Two-Player Strategy Game\n\n## Objective\n\n**Isolation** is a turn-based strategy game where two players compete to be the last to make a valid move. The primary goal is to strategically claim positions on a linear board while isolating your opponent and limiting their available moves. Victory is achieved by forcing your opponent into a position where they cannot make a valid move on their turn.\n\n## Setup\n\n- **Game Board**: A linear board consisting of **13 consecutively numbered squares** ranging from 1 to 13.\n- **Player Tokens**: No physical tokens are necessary as the game can be played in a command-line interface by tracking claimed squares.\n- **Starting Condition**: All 13 squares are unclaimed at the beginning of the game. Players decide who will take the first turn (Player 1 and Player 2).\n\n## Game Components\n\n- **Linear Board**: Represents the playing field with squares numbered from 1 to 13.\n- **Claimed Squares**: Squares that have been selected by the players during the game.\n- **Unclaimed Squares**: Squares that are still available for players to claim.\n- **Adjacency Rule**: Squares are considered adjacent if their numbers are consecutive (e.g., squares 5 and 6).\n\n## Turns\n\n- **Turn Order**: Players alternate turns starting with Player 1.\n- **Player Actions**: On their turn, a player must:\n  1. **Select a Square**: Choose any unclaimed square that is **not adjacent** to any already claimed square.\n  2. **Claim the Square**: Mark the chosen square as claimed by themselves.\n- **Turn Progression**: After a player claims a square, the turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Claiming Squares**:\n   - A player may claim **any unclaimed square** that is **not adjacent** to any claimed square.\n   - **Adjacency Definition**: Squares are adjacent if their numbers differ by exactly 1.\n   - **Example**: If square 5 is claimed, squares 4 and 6 are considered adjacent and cannot be claimed on subsequent turns.\n2. **Valid Moves**:\n   - A move is valid if there is at least one unclaimed square that is not adjacent to any claimed square.\n   - If no valid moves are available on a player's turn, the player loses the game.\n3. **Winning the Game**:\n   - The **last player** to successfully claim a square wins the game.\n   - A player **loses** if they have no valid moves on their turn.\n4. **No Draws**:\n   - The game is designed with an odd number of squares (13) to ensure that a draw is impossible.\n\n## Scoring\n\n- **Victory Condition**: Winning the game by being the last player to make a valid move.\n- **No Point System**: The game does not utilize a point or scoring system; the outcome is a win or loss based on the players' strategic moves.\n\n## Examples\n\n### Sample Game Playthrough\n\n#### Initial State:\n\nAll squares are unclaimed:\n\n`[ ] 1 [ ] 2 [ ] 3 [ ] 4 [ ] 5 [ ] 6 [ ] 7 [ ] 8 [ ] 9 [ ] 10 [ ] 11 [ ] 12 [ ] 13 [ ]`\n\n#### Turn 1 - Player 1:\n\n- **Action**: Claims square 7.\n- **Command**: `Player1: claim 7`\n- **Result**:\n\n`[ ] 1 [ ] 2 [ ] 3 [ ] 4 [ ] 5 [ ] 6 [P1] 7 [ ] 8 [ ] 9 [ ] 10 [ ] 11 [ ] 12 [ ] 13 [ ]`\n\n#### Turn 2 - Player 2:\n\n- **Available Squares**: All except squares 6, 7, and 8 (since square 7 is claimed, squares 6 and 8 are adjacent and unavailable).\n- **Action**: Claims square 4.\n- **Command**: `Player2: claim 4`\n- **Result**:\n\n`[ ] 1 [ ] 2 [ ] 3 [P2] 4 [ ] 5 [ ] 6 [P1] 7 [ ] 8 [ ] 9 [ ] 10 [ ] 11 [ ] 12 [ ] 13 [ ]`\n\n#### Turn 3 - Player 1:\n\n- **Available Squares**: Squares not adjacent to claimed squares (excluding squares 3,4,5,6,7,8).\n- **Action**: Claims square 10.\n- **Command**: `Player1: claim 10`\n- **Result**:\n\n`[ ] 1 [ ] 2 [ ] 3 [P2] 4 [ ] 5 [ ] 6 [P1] 7 [ ] 8 [ ] 9 [P1] 10 [ ] 11 [ ] 12 [ ] 13 [ ]`\n\n#### Turn 4 - Player 2:\n\n- **Available Squares**: Squares 1, 2, 12, 13 (squares 9,10,11 are adjacent to claimed square 10).\n- **Action**: Claims square 1.\n- **Command**: `Player2: claim 1`\n- **Result**:\n\n`[P2] 1 [ ] 2 [ ] 3 [P2] 4 [ ] 5 [ ] 6 [P1] 7 [ ] 8 [ ] 9 [P1] 10 [ ] 11 [ ] 12 [ ] 13 [ ]`\n\n#### Turn 5 - Player 1:\n\n- **Available Squares**: Squares 12 and 13.\n- **Action**: Claims square 12.\n- **Command**: `Player1: claim 12`\n- **Result**:\n\n`[P2] 1 [ ] 2 [ ] 3 [P2] 4 [ ] 5 [ ] 6 [P1] 7 [ ] 8 [ ] 9 [P1] 10 [P1] 12 [ ] 13 [ ]`\n\n#### Turn 6 - Player 2:\n\n- **Available Squares**: Square 13 (since square 12 is claimed, square 13 is adjacent and unavailable).\n- **Action**: No valid moves available.\n- **Result**:\n\n`Player2 has no valid moves. Player1 wins the game!`\n\n### Sample Command-Line Interaction\n\n```plaintext\n--- Isolation Game Starts ---\nAvailable squares: 1-13\n\nPlayer1's turn.\nAvailable squares to claim: 1-13\nEnter the square number you want to claim: 7\nPlayer1 claims square 7.\n\nPlayer2's turn.\nAvailable squares to claim: 1-5,9-13\nEnter the square number you want to claim: 4\nPlayer2 claims square 4.\n\nPlayer1's turn.\nAvailable squares to claim: 1-3,9-13\nEnter the square number you want to claim: 10\nPlayer1 claims square 10.\n\nPlayer2's turn.\nAvailable squares to claim: 1-3,9,12,13\nEnter the square number you want to claim: 1\nPlayer2 claims square 1.\n\nPlayer1's turn.\nAvailable squares to claim: 2,9,12,13\nEnter the square number you want to claim: 12\nPlayer1 claims square 12.\n\nPlayer2's turn.\nAvailable squares to claim: 2,9\nNo valid squares to claim. Player2 cannot make a move.\n\nGame Over: Player1 wins!\n```\n\n## Strategic Tips\n\n- **Control the Center**: Claiming central squares can block larger sections of the board from your opponent.\n- **Plan Ahead**: Anticipate which squares will remain available after your move to avoid limiting your own options.\n- **Force Isolation**: Aim to isolate sections of the board to restrict your opponent's future moves.\n- **Avoid Early Corners**: Claiming edge squares early might limit your own moves more than your opponent's.\n\n---\n\nEnjoy the challenge of Isolation, where every move counts, and strategy is key to outmaneuvering your opponent!",
    "# Add or Multiply: A Two-Player Turn-Based Game\n\n## Objective\n\nThe objective of **Add or Multiply** is to be the first player to reach or exceed the target number of **31** by strategically adding to or multiplying the shared current number. Players take turns choosing to either add or multiply the current number using integers from **1** to **5** inclusive. The first player to reach or exceed **31** wins the game.\n\n## Setup\n\n- **Starting Current Number**: The game begins with the current number set to **1**.\n- **Target Number**: Establish the target number as **31**.\n- **Player Order**: Decide which player goes first (e.g., via coin toss or mutual agreement).\n\n## Game Components\n\n- **Current Number**: A shared number that starts at **1** and changes based on players' actions.\n- **Target Number**: The number **31**; players aim to reach or exceed this number.\n- **Allowed Integers**: Numbers from **1** to **5** inclusive; players use these numbers to add or multiply.\n- **Command-Line Interface**: The game is played via a command-line interface where players input their choices.\n\n## Turns\n\n- **Turn Order**: Players alternate turns throughout the game.\n- **Turn Structure**:\n  1. **Choose Operation**: On their turn, a player selects either to **add** or **multiply**.\n  2. **Select Number**: The player chooses an integer from **1** to **5** inclusive.\n  3. **Perform Operation**: The chosen operation is performed using the selected number, and the current number is updated accordingly.\n  4. **Check for Win**: After updating, check if the current number has reached or exceeded the target number.\n\n## Rules and Mechanics\n\n1. **Operations**:\n   - **Addition**: Add an integer between **1** and **5** to the current number.\n     - **Formula**: `Current Number = Current Number + Selected Number`\n   - **Multiplication**: Multiply the current number by an integer between **1** and **5**.\n     - **Formula**: `Current Number = Current Number * Selected Number`\n2. **Allowed Numbers**:\n   - Only integers from **1** to **5** inclusive can be used for operations.\n3. **Valid Moves**:\n   - Each turn must consist of one operation (**add** or **multiply**) and one integer (**1** to **5**).\n4. **Winning the Game**:\n   - The first player to make the current number **equal to or exceed 31** wins.\n5. **Invalid Moves**:\n   - If a player inputs an invalid operation or number (e.g., an operation other than add/multiply or a number outside 1-5), they must retry with a valid move.\n6. **No Draws**:\n   - The game continues until one player wins; there are no draws.\n\n## Scoring\n\n- The game result is a **win** or **loss**.\n- Players may track the number of games won if playing multiple rounds.\n\n## Examples\n\n### Example Gameplay\n\n#### Starting the Game\n\n- **Current Number**: 1\n- **Target Number**: 31\n- **Player 1** begins.\n\n#### Turn 1: Player 1\n\n- **Choose Operation**: Multiply\n- **Select Number**: 3\n- **Calculation**: `1 * 3 = 3`\n- **Updated Current Number**: **3**\n\n#### Turn 2: Player 2\n\n- **Choose Operation**: Add\n- **Select Number**: 5\n- **Calculation**: `3 + 5 = 8`\n- **Updated Current Number**: **8**\n\n#### Turn 3: Player 1\n\n- **Choose Operation**: Multiply\n- **Select Number**: 4\n- **Calculation**: `8 * 4 = 32`\n- **Updated Current Number**: **32**\n\n#### Check for Win\n\n- **Current Number** (32) is greater than **Target Number** (31).\n- **Player 1 wins the game!**\n\n### Command-Line Interaction Sample\n\n```\nCurrent Number: 1\nPlayer 1's turn.\nChoose operation (add/multiply): multiply\nSelect a number between 1 and 5: 3\nYou chose to multiply by 3.\nNew Current Number: 3\n\nCurrent Number: 3\nPlayer 2's turn.\nChoose operation (add/multiply): add\nSelect a number between 1 and 5: 5\nYou chose to add 5.\nNew Current Number: 8\n\nCurrent Number: 8\nPlayer 1's turn.\nChoose operation (add/multiply): multiply\nSelect a number between 1 and 5: 4\nYou chose to multiply by 4.\nNew Current Number: 32\n\nCurrent Number: 32\nPlayer 1 has reached the target number!\nPlayer 1 wins!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Consider possible outcomes of both addition and multiplication to strategize your moves.\n- **Force Moves**: Try to set up the current number so that the opponent has limited options to prevent you from winning on your next turn.\n- **Multiplication Risk**: Multiplying can quickly increase the current number, but be cautious not to set up the opponent to win.\n\n## Conclusion\n\n\"Add or Multiply\" is a simple yet strategic game that requires players to think ahead and make calculated decisions. Its straightforward rules make it easy to learn and quick to play, while the strategic possibilities provide depth and challenge. Enjoy testing your skills and strategies against your opponent!",
    "# Number Sequence Showdown\n\n## Objective\n\n**Number Sequence Showdown** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is for a player to be the first to collect three unique numbers that form an arithmetic sequence (a sequence where the difference between consecutive numbers is constant). Players take turns selecting numbers from a shared pool, strategically blocking their opponent while advancing their path to victory. There are no draws in this game; the first player to achieve an arithmetic sequence wins.\n\n## Setup\n\n1. **Shared Number Pool**: The game uses numbers from **1** to **9**.\n2. **Initial Conditions**:\n   - All numbers from 1 to 9 are available in the shared pool at the start.\n   - Both players start with an empty collection.\n\n## Game Components\n\n- **Numbers (1-9)**:\n  - Represented as individual numerals.\n  - Once a number is selected by a player, it is removed from the shared pool and cannot be selected again.\n- **Player Collections**:\n  - Each player has a personal collection where they keep their selected numbers.\n  - Collections are visible to both players for strategic planning.\n\n## Turns\n\n- **Turn Order**:\n  - Players decide who goes first (e.g., by coin toss or mutual agreement).\n  - Turns alternate between Player 1 and Player 2.\n- **Player Actions During a Turn**:\n  - **Select a Number**:\n    - Choose any available number from the shared pool.\n    - Add the selected number to your collection.\n  - **Pass Turn**:\n    - Optional; a player may choose to pass their turn, but this is generally disadvantageous.\n- **Progression of Turns**:\n  - Turns continue to alternate until one player wins by forming an arithmetic sequence.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Number Selection**:\n   - On their turn, a player must select one available number from the shared pool.\n   - The selected number is added to the player's collection and removed from the shared pool.\n2. **Unique Numbers**:\n   - Each number can only be selected once during the game.\n   - Players cannot have duplicate numbers in their collection.\n3. **Winning Condition**:\n   - A player wins immediately when they have any three numbers that form an arithmetic sequence.\n   - The sequence does not need to be in order of selection.\n   - Examples of valid sequences:\n     - 2, 4, 6 (common difference of 2)\n     - 5, 7, 9 (common difference of 2)\n     - 3, 5, 7 (common difference of 2)\n     - 4, 5, 6 (common difference of 1)\n     - 1, 5, 9 (common difference of 4)\n4. **Game End without a Winner**:\n   - If all numbers have been selected and neither player has formed an arithmetic sequence, the game enters sudden death:\n     - The player with the higher total sum of their numbers wins.\n     - If the sums are equal, the player with the highest individual number wins.\n\n### Strategic Considerations\n\n- **Blocking**:\n  - Players can select numbers that their opponent may need to complete a sequence.\n- **Sequencing**:\n  - Players should plan ahead to identify potential sequences they can form with the available numbers.\n\n### Special Mechanics\n\n- **Visibility**:\n  - Both players' collections are open information.\n  - Players can see which numbers their opponent has selected.\n\n## Scoring\n\n- **Winning**:\n  - The first player to form an arithmetic sequence with three of their numbers wins the game.\n- **Sudden Death Scoring**:\n  - If no arithmetic sequence is formed by either player:\n    - **Primary Criterion**: Higher total sum of collected numbers.\n    - **Secondary Criterion**: Highest individual number collected.\n- **No Points System**:\n  - This game does not track points beyond determining the winner.\n\n## Examples\n\n### Example Scenario 1\n\n**Turn 1**:\n- **Player 1** selects **5**.\n  - Player 1's collection: [5]\n  - Numbers remaining: 1-4, 6-9\n- **Player 2** selects **3**.\n  - Player 2's collection: [3]\n  - Numbers remaining: 1-2, 4-9\n\n**Turn 2**:\n- **Player 1** selects **7**.\n  - Player 1's collection: [5, 7]\n  - Numbers remaining: 1-2, 4, 6, 8-9\n- **Player 2** selects **9**.\n  - Player 2's collection: [3, 9]\n  - Numbers remaining: 1-2, 4, 6, 8\n\n**Turn 3**:\n- **Player 1** selects **6**.\n  - Player 1's collection: [5, 6, 7]\n  - **Player 1 wins**, as they have formed the sequence **5, 6, 7** (common difference of 1).\n\n### Example Scenario 2\n\n**Turn 1**:\n- **Player 1** selects **4**.\n  - Player 1's collection: [4]\n  - Numbers remaining: 1-3, 5-9\n- **Player 2** selects **6**.\n  - Player 2's collection: [6]\n  - Numbers remaining: 1-3, 5, 7-9\n\n**Turn 2**:\n- **Player 1** selects **8**.\n  - Player 1's collection: [4, 8]\n  - Numbers remaining: 1-3, 5-7, 9\n- **Player 2** selects **2**.\n  - Player 2's collection: [6, 2]\n  - Numbers remaining: 1, 3, 5, 7, 9\n\n**Turn 3**:\n- **Player 1** selects **5**.\n  - Player 1's collection: [4, 5, 8]\n  - Numbers remaining: 1, 3, 7, 9\n- **Player 1** has not yet formed an arithmetic sequence.\n\n**Turn 4**:\n- **Player 2** selects **4**.\n  - **Invalid Move** (Number already taken by Player 1).\n  - **Player 2** selects **7** instead.\n  - Player 2's collection: [6, 2, 7]\n  - Numbers remaining: 1, 3, 9\n- **Player 2** wins, having the sequence **2, 4, 6** (common difference of 2).\n  - Note: In this example, Player 2 mistakenly attempted to select an already chosen number. The game continues after correcting the move.\n\n## Command-Line Interaction Example\n\nBelow is a sample interaction between the players and the game in a command-line interface.\n\n```\nGame Start!\nAvailable Numbers: 1, 2, 3, 4, 5, 6, 7, 8, 9\n\nPlayer 1's Turn.\nYour Collection: []\nEnter a number to select: 2\n\nPlayer 1 selected 2.\nAvailable Numbers: 1, 3, 4, 5, 6, 7, 8, 9\n\nPlayer 2's Turn.\nYour Collection: []\nEnter a number to select: 4\n\nPlayer 2 selected 4.\nAvailable Numbers: 1, 3, 5, 6, 7, 8, 9\n\nPlayer 1's Turn.\nYour Collection: [2]\nEnter a number to select: 5\n\nPlayer 1 selected 5.\nAvailable Numbers: 1, 3, 6, 7, 8, 9\n\nPlayer 2's Turn.\nYour Collection: [4]\nEnter a number to select: 6\n\nPlayer 2 selected 6.\nAvailable Numbers: 1, 3, 7, 8, 9\n\nPlayer 1's Turn.\nYour Collection: [2, 5]\nEnter a number to select: 8\n\nPlayer 1 selected 8.\nAvailable Numbers: 1, 3, 7, 9\n\nPlayer 1 has numbers: [2, 5, 8]\nPlayer 1 wins! They have formed an arithmetic sequence: 2, 5, 8 (common difference of 3).\n```\n\n## Notes\n\n- **Valid Arithmetic Sequences**:\n  - Players can form sequences with any common difference as long as it is consistent between the numbers.\n  - Sequences can be ascending or descending.\n- **Strategy Tips**:\n  - Pay attention to the numbers your opponent is collecting and anticipate their potential sequences.\n  - Block your opponent by selecting numbers they may need.\n  - Focus on multiple sequence possibilities to increase your chances of winning.\n\n---\n\nEnjoy the challenge of **Number Sequence Showdown** and may the best strategist win!",
    "# Number Duel Rule Book\n\n## Objective\n\n**Be the first player to reduce your opponent's Health Points (HP) to zero** by strategically selecting numbers to attack while managing your own HP. Predict your opponent's moves to maximize damage and avoid self-harm.\n\n---\n\n## Setup\n\n- **Health Points (HP):** Each player starts with **10 HP**.\n- **Number Choices:** The numbers **1**, **2**, and **3** are available for selection each round.\n- **Players:**\n  - **Player 1**\n  - **Player 2**\n\n---\n\n## Game Components\n\n1. **Health Point (HP) Tracker:**\n   - A simple counter for each player that records their current HP.\n2. **Number Selection Mechanism:**\n   - Players choose a number from **1** to **3** each turn.\n3. **Command-Line Interface:**\n   - Players input their chosen numbers.\n   - The interface displays results and updates HP after each round.\n\n---\n\n## Turns\n\n- **Rounds:**\n  - The game progresses in rounds.\n  - Each round consists of both players taking their turn simultaneously.\n- **Turn Structure:**\n  1. **Secret Selection:**\n     - Each player **privately** chooses a number (**1**, **2**, or **3**).\n  2. **Reveal:**\n     - Both players reveal their chosen numbers at the same time.\n  3. **Resolve Actions:**\n     - Apply the rules to adjust HP based on the chosen numbers.\n  4. **Update HP:**\n     - Players' HP are updated accordingly.\n  5. **Check for Game End:**\n     - If a player's HP is reduced to zero or below, the game ends.\n\n---\n\n## Rules and Mechanics\n\n### 1. Number Selection\n\n- **Available Numbers:** Each player can choose an integer between **1** and **3** (inclusive) each turn.\n- **Secret Choice:** Players make their selections without revealing them to the opponent until both have chosen.\n\n### 2. Revealing Choices\n\n- After both players have made their selections, they **simultaneously reveal** their chosen numbers.\n\n### 3. Resolving Actions\n\n#### a. Different Numbers Chosen\n\n- **Higher Number Attacks:**\n  - The player who chose the **higher number** becomes the attacker.\n  - The attacker reduces the opponent's HP by the value of **their own chosen number**.\n- **Example:**\n  - Player 1 chooses **2**, Player 2 chooses **3**.\n  - Player 2 attacks; Player 1 loses **3 HP**.\n\n#### b. Same Numbers Chosen\n\n- **Mutual Damage:**\n  - Both players take damage equal to the number they chose.\n  - Each player reduces their own HP by that amount.\n- **Example:**\n  - Both players choose **2**.\n  - Both players lose **2 HP**.\n\n### 4. Health Points (HP)\n\n- **HP Reduction:**\n  - HP is reduced according to the outcome of each round.\n- **No HP Overflow:**\n  - Players' HP cannot exceed the starting value of **10 HP**.\n- **Elimination:**\n  - If a player's HP drops to **zero or below**, they are eliminated, and the opponent wins.\n\n### 5. Game End Conditions\n\n- **Victory:**\n  - The game ends immediately when a player's HP reaches **zero or below**.\n  - The opponent is declared the winner.\n- **No Draws:**\n  - The game cannot end in a draw; there will always be a winner.\n\n---\n\n## Scoring\n\n- **Winning the Game:**\n  - Reduce your opponent's HP to **zero or below**.\n- **Losing the Game:**\n  - If your own HP is reduced to **zero or below**, you lose.\n- **No Point Tracking:**\n  - The game outcome is solely based on the remaining HP; no additional scoring system is required.\n\n---\n\n## Examples\n\n### Example Scenario\n\n**Initial HP:**\n- Player 1: **10 HP**\n- Player 2: **10 HP**\n\n#### Round 1\n\n- **Selections:**\n  - Player 1 chooses **2**.\n  - Player 2 chooses **3**.\n- **Reveal:**\n  - Both players reveal their numbers.\n- **Outcome:**\n  - Numbers are different; Player 2 has the higher number.\n  - Player 2 attacks; Player 1 loses **3 HP**.\n- **Updated HP:**\n  - Player 1: **7 HP**\n  - Player 2: **10 HP**\n\n#### Round 2\n\n- **Selections:**\n  - Player 1 chooses **3**.\n  - Player 2 chooses **3**.\n- **Reveal:**\n  - Both players reveal their numbers.\n- **Outcome:**\n  - Numbers are the same.\n  - Both players take **3 HP** damage.\n- **Updated HP:**\n  - Player 1: **4 HP**\n  - Player 2: **7 HP**\n\n#### Round 3\n\n- **Selections:**\n  - Player 1 chooses **1**.\n  - Player 2 chooses **2**.\n- **Reveal:**\n  - Both players reveal their numbers.\n- **Outcome:**\n  - Numbers are different; Player 2 has the higher number.\n  - Player 2 attacks; Player 1 loses **2 HP**.\n- **Updated HP:**\n  - Player 1: **2 HP**\n  - Player 2: **7 HP**\n\n#### Round 4\n\n- **Selections:**\n  - Player 1 chooses **3**.\n  - Player 2 chooses **1**.\n- **Reveal:**\n  - Both players reveal their numbers.\n- **Outcome:**\n  - Numbers are different; Player 1 has the higher number.\n  - Player 1 attacks; Player 2 loses **3 HP**.\n- **Updated HP:**\n  - Player 1: **2 HP**\n  - Player 2: **4 HP**\n\n#### Round 5\n\n- **Selections:**\n  - Player 1 chooses **2**.\n  - Player 2 chooses **2**.\n- **Reveal:**\n  - Both players reveal their numbers.\n- **Outcome:**\n  - Numbers are the same.\n  - Both players take **2 HP** damage.\n- **Updated HP:**\n  - Player 1: **0 HP**\n  - Player 2: **2 HP**\n- **Game Over:**\n  - Player 1's HP has reached zero.\n  - **Player 2 wins the game!**\n\n---\n\n## Command-Line Interaction Example\n\nBelow is an example of how the game could play out in a command-line interface.\n\n### Sample Game Play\n\n```\n--- Number Duel ---\n\nBoth players start with 10 HP.\n\n[Round 1]\nPlayer 1, enter your number (1-3): *secretly enters 2*\nPlayer 2, enter your number (1-3): *secretly enters 3*\nBoth players have chosen.\n\nRevealing numbers...\nPlayer 1 chose: 2\nPlayer 2 chose: 3\n\nPlayer 2 attacks! Player 1 loses 3 HP.\n\nCurrent HP:\nPlayer 1: 7 HP\nPlayer 2: 10 HP\n\nPress Enter to continue to the next round...\n\n[Round 2]\nPlayer 1, enter your number (1-3): *secretly enters 3*\nPlayer 2, enter your number (1-3): *secretly enters 3*\nBoth players have chosen.\n\nRevealing numbers...\nPlayer 1 chose: 3\nPlayer 2 chose: 3\n\nBoth players chose the same number.\nBoth players take 3 HP damage.\n\nCurrent HP:\nPlayer 1: 4 HP\nPlayer 2: 7 HP\n\nPress Enter to continue to the next round...\n\n[Round 3]\nPlayer 1, enter your number (1-3): *secretly enters 1*\nPlayer 2, enter your number (1-3): *secretly enters 2*\nBoth players have chosen.\n\nRevealing numbers...\nPlayer 1 chose: 1\nPlayer 2 chose: 2\n\nPlayer 2 attacks! Player 1 loses 2 HP.\n\nCurrent HP:\nPlayer 1: 2 HP\nPlayer 2: 7 HP\n\nPress Enter to continue to the next round...\n\n[Round 4]\nPlayer 1, enter your number (1-3): *secretly enters 3*\nPlayer 2, enter your number (1-3): *secretly enters 1*\nBoth players have chosen.\n\nRevealing numbers...\nPlayer 1 chose: 3\nPlayer 2 chose: 1\n\nPlayer 1 attacks! Player 2 loses 3 HP.\n\nCurrent HP:\nPlayer 1: 2 HP\nPlayer 2: 4 HP\n\nPress Enter to continue to the next round...\n\n[Round 5]\nPlayer 1, enter your number (1-3): *secretly enters 2*\nPlayer 2, enter your number (1-3): *secretly enters 2*\nBoth players have chosen.\n\nRevealing numbers...\nPlayer 1 chose: 2\nPlayer 2 chose: 2\n\nBoth players chose the same number.\nBoth players take 2 HP damage.\n\nCurrent HP:\nPlayer 1: 0 HP\nPlayer 2: 2 HP\n\nGame Over!\nPlayer 2 wins the game!\n```\n\n---\n\n## Strategic Tips\n\n- **Predict Opponent's Moves:**\n  - Try to anticipate the number your opponent will choose based on previous rounds.\n- **Manage Risk:**\n  - Choosing a higher number can deal more damage but risks taking self-damage if the opponent chooses the same number.\n- **Use Bluffing:**\n  - Vary your choices to keep your opponent guessing.\n- **Monitor HP Levels:**\n  - Adjust your strategy based on remaining HP; play more cautiously when HP is low.\n\n---\n\n## Conclusion\n\n**Number Duel** is a quick, strategic game that combines elements of prediction, risk management, and psychological warfare. It's simple to learn and easy to code, making it ideal for a command-line interface. Skilled players who can read their opponent and make calculated choices will consistently come out on top.\n\n---\n\nEnjoy the game and may the best strategist win!",
    "# Light Switch Showdown\n\n## Objective\n\nBe the first player to create a sequence of **three consecutive ON lights** in a line of 10 lights. Players take turns toggling lights to achieve this goal while blocking their opponent from doing the same. The player who first arranges **three adjacent lights** to be **ON** wins the game.\n\n## Setup\n\n- **Lights**: A row of **10 lights** numbered from **1 to 10**.\n- **Initial State**: All lights start in the **OFF** position.\n- **Players**: Two players, deciding who goes first by mutual agreement or a random method (e.g., coin toss).\n\n## Game Components\n\n- **Lights**:\n\n  - **Numbered** from **1** to **10**.\n  - Each light has two states:\n    - **OFF**: Represented by `0` or `OFF`.\n    - **ON**: Represented by `1` or `ON`.\n\n- **Game Board**:\n\n  In a command-line interface, the game board is displayed as:\n\n  ```\n  [1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] OFF  [6] OFF  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n  ```\n\n## Turns\n\n- **Turn Order**: Players alternate turns throughout the game.\n- **Turn Actions**:\n\n  - On your turn, **toggle one light** by changing its state from OFF to ON or from ON to OFF.\n  - You may choose **any light** (1-10), regardless of its current state or previous moves.\n\n- **Turn Progression**:\n\n  - After toggling a light, the updated game board is displayed.\n  - The turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Toggling Lights**:\n\n   - **Toggle Exactly One Light** per turn.\n\n2. **Winning Condition**:\n\n   - **Win** by having **three consecutive lights ON** after your turn.\n   - The sequence can be from any position, e.g., lights 2-4 or lights 7-9.\n\n3. **Blocking**:\n\n   - You can **toggle an opponent's ON light to OFF** to prevent them from winning.\n\n4. **No Draws**:\n\n   - The game continues until one player wins.\n   - There is **no possibility of a draw**.\n\n5. **Game State Visibility**:\n\n   - The state of all lights is **visible to both players** after each turn.\n\n6. **Illegal Moves**:\n\n   - **Invalid Action**: Skipping a turn or toggling multiple lights is not allowed.\n   - **Correction**: If an invalid move is made, the player must redo their turn with a valid action.\n\n## Scoring\n\n- **Winning the Game**:\n\n  - The first player to achieve **three consecutive ON lights** wins.\n  - There is no point system; the focus is on strategic play to win each game.\n\n- **Match Play (Optional)**:\n\n  - Players can play multiple games, keeping track of wins to determine an overall champion.\n\n## Examples\n\n### Example Scenario 1\n\n**Initial State**:\n\n```\n[1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] OFF  [6] OFF  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n```\n\n- **Player 1's Turn**:\n\n  - Toggles **Light 5** (OFF → ON)\n\n- **Updated State**:\n\n  ```\n  [1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] ON  [6] OFF  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n  ```\n\n- **Player 2's Turn**:\n\n  - Toggles **Light 6** (OFF → ON)\n\n- **Updated State**:\n\n  ```\n  [1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] ON  [6] ON  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n  ```\n\n- **Player 1's Turn**:\n\n  - Toggles **Light 4** (OFF → ON)\n\n- **Updated State**:\n\n  ```\n  [1] OFF  [2] OFF  [3] OFF  [4] ON  [5] ON  [6] ON  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n  ```\n\n- **Result**:\n\n  - **Player 1 wins** with lights 4-6 all ON.\n\n### Example Scenario 2\n\n**Player 1's Turn**:\n\n- Toggles **Light 3** (OFF → ON)\n\n**Player 2's Turn**:\n\n- Toggles **Light 4** (OFF → ON)\n\n**Player 1's Turn**:\n\n- Toggles **Light 5** (OFF → ON)\n\n**Player 2's Turn**:\n\n- Toggles **Light 3** (ON → OFF) to block Player 1\n\n**Explanation**:\n\n- Player 2 prevents Player 1 from achieving three consecutive ON lights (lights 3-5) by turning **Light 3 OFF**.\n\n## Command-Line Interaction Example\n\n**Game Start**:\n\n```\nLights:\n[1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] OFF  [6] OFF  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n```\n\n**Player 1's Turn**:\n\n```\nEnter the number of the light you want to toggle (1-10):\n> 5\n\nYou toggled Light 5. It is now ON.\n\nLights:\n[1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] ON  [6] OFF  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n```\n\n**Player 2's Turn**:\n\n```\nEnter the number of the light you want to toggle (1-10):\n> 6\n\nYou toggled Light 6. It is now ON.\n\nLights:\n[1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] ON  [6] ON  [7] OFF  [8] OFF  [9] OFF  [10] OFF\n```\n\n**Player 1's Turn**:\n\n```\nEnter the number of the light you want to toggle (1-10):\n> 7\n\nYou toggled Light 7. It is now ON.\n\nLights:\n[1] OFF  [2] OFF  [3] OFF  [4] OFF  [5] ON  [6] ON  [7] ON  [8] OFF  [9] OFF  [10] OFF\n\nCongratulations, you have created three consecutive ON lights!\nPlayer 1 wins!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**:\n\n  - Look for opportunities to set up multiple potential winning sequences.\n  - Anticipate your opponent's moves and plan your toggles accordingly.\n\n- **Block Effectively**:\n\n  - Keep an eye on your opponent's progress toward creating a sequence.\n  - Toggle their ON lights back to OFF to prevent them from winning.\n\n- **Control the Center**:\n\n  - Focusing on the middle lights (e.g., lights 4-7) provides more options for creating sequences.\n\n- **Stay Flexible**:\n\n  - Be prepared to switch strategies based on the changing game board.\n\n## Game Variations (Optional)\n\n- **Extended Board**:\n\n  - Increase the number of lights for a longer game (e.g., 15 or 20 lights).\n\n- **Longer Sequences**:\n\n  - Change the winning condition to requiring four or five consecutive ON lights.\n\n- **Limited Toggling**:\n\n  - Restrict the number of times each light can be toggled during the game.\n\n## Conclusion\n\nLight Switch Showdown is a simple yet strategic game that challenges players to think ahead and outmaneuver their opponent. With straightforward rules and quick gameplay, it provides engaging entertainment suitable for a command-line interface.\n\nEnjoy the game, and may the best strategist win!",
    "# **Prime Deplete**\n\nPrime Deplete is a strategic two-player, turn-based game designed for command-line interfaces. Players take turns removing numbers from a shared list according to specific mathematical rules. The game is easy to code, ends quickly with no possibility of a draw, and rewards strategic planning, allowing a skilled player to consistently outperform an unskilled opponent.\n\n---\n\n## **Objective**\n\nBe the player who removes the last number from the shared list. Players aim to outmaneuver their opponent by strategically removing numbers and their associated divisors, ultimately being the one to deplete the list completely.\n\n---\n\n## **Setup**\n\n1. **Shared List Initialization**:\n   - Create a list of consecutive integers starting from 2 up to a chosen maximum number **N** (e.g., N = 20).\n   - Example starting list: `[2, 3, 4, 5, 6, 7, 8, 9, 10]`.\n\n2. **Player Designation**:\n   - Two players are identified as **Player 1** and **Player 2**.\n   - Determine randomly or by agreement who will take the first turn.\n\n---\n\n## **Game Components**\n\n- **Number List**:\n  - A dynamic list containing integers from 2 to **N**.\n  - Numbers in the list are available for selection and removal.\n  \n- **Proper Divisors**:\n  - For any number **n**, its proper divisors are all positive integers less than **n** that divide **n** exactly.\n  - Example: Proper divisors of 6 are 1, 2, and 3.\n\n*Note: In this game, we consider proper divisors greater than 1 to align with gameplay mechanics.*\n\n---\n\n## **Turns**\n\n1. **Turn Structure**:\n   - Players alternate turns, starting with **Player 1**.\n   - On each turn, a player executes the following actions:\n     - **Select** a number from the current list.\n     - **Remove** the selected number and its proper divisors (excluding 1) from the list.\n\n2. **Action Details**:\n   - **Selection**:\n     - Choose any remaining number in the list.\n   - **Removal**:\n     - Remove the selected number.\n     - Also remove all proper divisors (greater than 1) of the selected number that are still in the list.\n     - If a divisor has already been removed, it is simply ignored.\n\n3. **Turn Progression**:\n   - The turn ends after the selected number and its proper divisors are removed.\n   - Control passes to the other player.\n\n---\n\n## **Rules and Mechanics**\n\n1. **Valid Moves**:\n   - A player must select a number from the current list on their turn.\n   - If no numbers remain, the game ends.\n\n2. **Number Removal**:\n   - When a number is selected, it and its proper divisors are removed from the list.\n   - Proper divisors are calculated as all numbers less than the selected number that divide it without a remainder (excluding 1).\n\n3. **Game End Condition**:\n   - The game ends when all numbers have been removed from the list.\n   - The player who performed the last valid move (i.e., removed the last number(s)) wins the game.\n\n4. **Winning the Game**:\n   - There is no possibility of a draw.\n   - The last player to successfully remove numbers from the list is declared the winner.\n\n5. **Invalid Moves**:\n   - If a player cannot make a valid move because the list is empty, they lose the game.\n   - Players must select a number on their turn if at least one number remains.\n\n---\n\n## **Scoring**\n\n- **Win Condition**:\n  - The game is won by the player who removes the last number(s) from the list.\n- **No Points System**:\n  - There is no point scoring; victory is determined solely by meeting the win condition.\n\n---\n\n## **Examples**\n\n### **Example Game Playthrough**\n\n**Initial List**: `[2, 3, 4, 5, 6, 7, 8, 9, 10]`\n\n**Player 1's Turn**:\n- **Selects**: 6\n- **Proper Divisors of 6**: 2 and 3 (excluding 1)\n- **Removes**: 6, 2, 3\n- **Updated List**: `[4, 5, 7, 8, 9, 10]`\n\n**Player 2's Turn**:\n- **Selects**: 9\n- **Proper Divisors of 9**: 3 (already removed)\n- **Removes**: 9\n- **Updated List**: `[4, 5, 7, 8, 10]`\n\n**Player 1's Turn**:\n- **Selects**: 8\n- **Proper Divisors of 8**: 2 and 4 (2 already removed)\n- **Removes**: 8, 4\n- **Updated List**: `[5, 7, 10]`\n\n**Player 2's Turn**:\n- **Selects**: 10\n- **Proper Divisors of 10**: 2 and 5 (2 already removed)\n- **Removes**: 10, 5\n- **Updated List**: `[7]`\n\n**Player 1's Turn**:\n- **Selects**: 7\n- **Proper Divisors of 7**: None (excluding 1)\n- **Removes**: 7\n- **Updated List**: `[]`\n\n**Game Ends**:\n- **Player 1** removed the last number and **wins** the game.\n\n### **Command-Line Interaction Sample**\n\nAssuming a prompt-based command-line interface:\n\n```\nGame Start!\nInitial List: [2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nPlayer 1's turn.\nAvailable numbers: [2, 3, 4, 5, 6, 7, 8, 9, 10]\nEnter the number you wish to remove: 6\nYou removed 6 and its proper divisors: [2, 3]\nUpdated List: [4, 5, 7, 8, 9, 10]\n\nPlayer 2's turn.\nAvailable numbers: [4, 5, 7, 8, 9, 10]\nEnter the number you wish to remove: 9\nYou removed 9 and its proper divisors: []\nUpdated List: [4, 5, 7, 8, 10]\n\nPlayer 1's turn.\nAvailable numbers: [4, 5, 7, 8, 10]\nEnter the number you wish to remove: 8\nYou removed 8 and its proper divisors: [4]\nUpdated List: [5, 7, 10]\n\nPlayer 2's turn.\nAvailable numbers: [5, 7, 10]\nEnter the number you wish to remove: 10\nYou removed 10 and its proper divisors: [5]\nUpdated List: [7]\n\nPlayer 1's turn.\nAvailable numbers: [7]\nEnter the number you wish to remove: 7\nYou removed 7 and its proper divisors: []\nUpdated List: []\n\nNo numbers remain.\nPlayer 1 wins the game!\n```\n\n---\n\n## **Strategic Tips**\n\n- **Target Numbers with Many Divisors**: Removing numbers that have multiple proper divisors can eliminate more options for your opponent.\n- **Anticipate Opponent's Moves**: Pay attention to which numbers and divisors remain to block your opponent's potential moves.\n- **Control the Endgame**: Aim to force the opponent into a position where they have limited or disadvantageous choices in their next turn.\n\n---\n\nBy following these rules and understanding the mechanics, players can engage in a quick, strategic battle of numerical prowess in Prime Deplete.",
    "# Conquest Command\n\nConquest Command is a unique, strategic two-player turn-based game designed for play in a command-line interface. Players engage in a tactical battle of wits, aiming to outmaneuver their opponent through clever resource management and strategic planning. The game is easy to code and ensures a swift conclusion with no possibility of a draw. A skilled player can consistently outperform an unskilled player, adding depth and competitive excitement to each match.\n\n---\n\n## Objective\n\nBe the first player to conquer the central territory by accumulating exactly **100 Power Points (PP)** through strategic resource allocation and territorial control. Achieving 100 PP allows a player to launch a decisive strike to claim victory. Exceeding 100 PP results in an overload and loss, so precise management is crucial.\n\n---\n\n## Setup\n\n1. **Players**: Two players, **Commander A** and **Commander B**.\n2. **Resources**:\n   - Each player starts with:\n     - **3 Supply Units (SU)**\n     - **0 Power Points (PP)**\n3. **Territories**:\n   - **Home Base**: Each player has a home base.\n   - **Neutral Zone**: A contested central territory.\n4. **Turn Order**: Decide which player goes first (e.g., coin toss).\n\n---\n\n## Game Components\n\n- **Supply Units (SU)**:\n  - Represent resources used to generate Power Points.\n  - Players spend SUs to perform actions.\n- **Power Points (PP)**:\n  - Accumulated to reach the objective of 100 PP.\n  - Represent the player's strategic strength.\n- **Actions**:\n  - **Harvest**: Convert SUs into PP.\n  - **Spy**: Peek at opponent's PP.\n  - **Sabotage**: Reduce opponent's PP.\n  - **Fortify**: Protect own PP from sabotage.\n- **Command-Line Interface**:\n  - All interactions occur via text commands.\n\n---\n\n## Turns\n\nEach turn consists of the following phases:\n\n1. **Resource Allocation**:\n   - Players receive **1 SU** at the start of their turn.\n2. **Action Phase**:\n   - Spend SUs to perform actions:\n     - **Harvest** (`harvest`): Convert SUs to PP.\n     - **Spy** (`spy`): Spend 1 SU to view opponent’s PP.\n     - **Sabotage** (`sabotage`): Spend 2 SUs to reduce opponent’s PP.\n     - **Fortify** (`fortify`): Spend 1 SU to protect against sabotage.\n3. **End Turn**:\n   - The turn ends, and control passes to the opponent.\n\n---\n\n## Rules and Mechanics\n\n### Actions Detailed\n\n1. **Harvest**:\n   - **Command**: `harvest <number_of_SUs>`\n   - **Effect**: Converts the specified number of SUs into PP at a rate of **1 SU = 20 PP**.\n   - **Limit**: Cannot harvest more SUs than currently possessed.\n   - **Example**: `harvest 2` converts 2 SUs into 40 PP.\n\n2. **Spy**:\n   - **Command**: `spy`\n   - **Cost**: 1 SU.\n   - **Effect**: Reveals the opponent's current PP total unless they are fortified this turn.\n   - **Limit**: Can only be used once per turn.\n\n3. **Sabotage**:\n   - **Command**: `sabotage`\n   - **Cost**: 2 SUs.\n   - **Effect**: Reduces opponent's PP by **30 PP** unless they fortified in their last turn.\n   - **Limit**: Can only be used once per turn.\n   - **Note**: Cannot reduce opponent's PP below 0.\n\n4. **Fortify**:\n   - **Command**: `fortify`\n   - **Cost**: 1 SU.\n   - **Effect**: Protects your PP from sabotage until your next turn.\n   - **Limit**: Can only be used once per turn.\n\n### Additional Rules\n\n- **Maximum PP**:\n  - If a player's PP exceeds **100**, they suffer an overload and immediately lose the game.\n- **Running Out of SUs**:\n  - If a player has no SUs at the start of their turn, they only receive 1 SU and may perform any action as normal.\n- **No Draws**:\n  - The game continues until a player wins or loses; there is no possibility of a draw.\n- **Secret Information**:\n  - Players do not automatically know the opponent's PP unless they use the `spy` action.\n\n---\n\n## Scoring\n\n- **Winning the Game**:\n  - **Victory Condition**: Accumulate **exactly 100 PP**.\n  - **Loss Conditions**:\n    - PP exceeds 100 (overload).\n    - Any action resulting in an overload causes an immediate loss.\n- **Tracking Progress**:\n  - Players must keep track of their own PP and SUs.\n  - **Example**:\n    - Current PP: 80\n    - Current SUs: 2\n    - Action: `harvest 1` (adds 20 PP, total PP becomes 100)\n\n---\n\n## Examples\n\n### Sample Turn Sequence\n\n#### Turn 1: Commander A\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 4).\n- **Action Phase**:\n  - Enters command: `harvest 2`\n  - Converts 2 SUs into 40 PP (total PP: 40).\n  - Remaining SUs: 2.\n- **End Turn**.\n\n#### Turn 1: Commander B\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 4).\n- **Action Phase**:\n  - Enters command: `harvest 3`\n  - Converts 3 SUs into 60 PP (total PP: 60).\n  - Remaining SUs: 1.\n- **End Turn**.\n\n#### Turn 2: Commander A\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 3).\n- **Action Phase**:\n  - Enters command: `spy` (costs 1 SU).\n  - Learns Commander B has 60 PP.\n  - Remaining SUs: 2.\n- **End Turn**.\n\n#### Turn 2: Commander B\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 2).\n- **Action Phase**:\n  - Enters command: `fortify` (costs 1 SU).\n  - PP is protected until next turn.\n  - Remaining SUs: 1.\n- **End Turn**.\n\n#### Turn 3: Commander A\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 3).\n- **Action Phase**:\n  - Enters command: `sabotage` (costs 2 SUs).\n  - Attempt to reduce Commander B's PP by 30 PP.\n  - However, Commander B fortified last turn; sabotage fails.\n  - Remaining SUs: 1.\n- **End Turn**.\n\n#### Turn 3: Commander B\n\n- **Resource Allocation**:\n  - Receives 1 SU (total SUs: 2).\n- **Action Phase**:\n  - Enters command: `harvest 2`\n  - **Note**: Current PP is 60.\n  - Harvesting 2 SUs adds 40 PP (total PP becomes 100).\n  - **Victory**: Commander B wins by reaching exactly 100 PP.\n- **Game Over**.\n\n---\n\n## Command-Line Interaction Example\n\n```plaintext\nCommander A's Turn\n------------------\nYou have 2 SUs and 40 PP.\nEnter your action: spy\nYou spend 1 SU to spy on Commander B.\nCommander B has 60 PP.\nRemaining SUs: 1\nTurn ends.\n\nCommander B's Turn\n------------------\nYou have 1 SU and 60 PP.\nEnter your action: fortify\nYou spend 1 SU to fortify your position.\nRemaining SUs: 0\nYour PP is protected until your next turn.\nTurn ends.\n\nCommander A's Turn\n------------------\nYou have 1 SU and 40 PP.\nEnter your action: sabotage\nNot enough SUs to perform this action.\nChoose a different action.\nEnter your action: harvest 1\nYou convert 1 SU into 20 PP.\nTotal PP: 60\nRemaining SUs: 0\nTurn ends.\n```\n\n---\n\n## Strategy Tips\n\n- **Resource Management**:\n  - Balance between harvesting PP and retaining SUs for defensive or aggressive actions.\n- **Monitoring Opponent**:\n  - Use `spy` wisely to inform your strategy.\n- **Defensive Play**:\n  - Fortify when you suspect an opponent might sabotage you.\n- **Aggressive Play**:\n  - Time your `sabotage` to set back your opponent, especially if they are close to 100 PP.\n- **Avoid Overload**:\n  - Plan your harvests carefully to avoid exceeding 100 PP.\n\n---\n\nEnjoy engaging in a battle of strategy and resource management in **Conquest Command**. May the most cunning commander win!",
    "# Prime War\n\n## Objective\n\n**Be the first player to reach exactly 50 points by strategically selecting prime numbers from a shared pool.** The player who accumulates a total score of exactly 50 points first wins the game. If a player's total score exceeds 50 at any point, they lose immediately. There is no possibility of a draw.\n\n---\n\n## Setup\n\n1. **Starting Scores:**\n   - Both Player 1 and Player 2 begin with a score of **0**.\n\n2. **Shared Prime Pool:**\n   - A communal list of prime numbers between **2** and **29** (inclusive):\n     ```\n     2, 3, 5, 7, 11, 13, 17, 19, 23, 29\n     ```\n\n3. **Player Order:**\n   - Determine who will be **Player 1** and **Player 2**. Player 1 takes the first turn.\n\n4. **Command-Line Interface:**\n   - The game is played via text input and output in a command-line interface.\n\n---\n\n## Game Components\n\n- **Prime Numbers Pool:**\n  - A list of available prime numbers that players can select from during their turn.\n  - Once a prime number is selected, it is removed from the pool.\n\n- **Player Scores:**\n  - Each player has an individual score that is the sum of the primes they have selected.\n  - Scores are updated and displayed after each turn.\n\n- **Command-Line Prompts:**\n  - The game prompts players to make selections and displays game states.\n\n---\n\n## Turns\n\n1. **Turn Order:**\n   - Players alternate turns, starting with **Player 1**.\n\n2. **Player Actions:**\n   - On their turn, a player must:\n     - **Select a Prime Number** from the current pool.\n     - **Add the Prime Number** to their total score.\n     - The selected prime is then **removed** from the pool.\n\n3. **Turn Progression:**\n   - After a player completes their turn, the game updates:\n     - **Player's Score**\n     - **Available Primes in the Pool**\n     - Checks for **Win or Loss Conditions**\n     - Prompts the next player.\n\n---\n\n## Rules and Mechanics\n\n1. **Prime Selection:**\n   - Players can only select from the primes currently available in the pool.\n   - If a player attempts to select a number not in the pool, they are prompted again.\n\n2. **Scoring:**\n   - A player's score is the cumulative sum of the primes they have selected.\n   - Scores are recalculated and displayed after each turn.\n\n3. **Winning the Game:**\n   - The first player to reach **exactly 50 points** wins the game immediately.\n\n4. **Losing the Game:**\n   - If a player's score **exceeds 50** after their turn, they lose the game immediately.\n   - The opposing player is declared the winner.\n\n5. **No Draws:**\n   - Due to the finite set of primes and the scoring rules, the game cannot end in a draw.\n\n6. **Strategic Play:**\n   - Players must plan ahead to avoid exceeding 50 and to block their opponent's paths to victory.\n   - Awareness of the remaining primes and possible score combinations is key.\n\n---\n\n## Scoring\n\n- **Score Calculation:**\n  - **Player's Score** = Sum of all primes they have selected.\n\n- **Score Limit:**\n  - The maximum score a player can have without losing is **50**.\n  \n- **Score Tracking:**\n  - After each turn, the game displays:\n    - The player's new total score.\n    - The remaining primes in the pool.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### **Starting Game State:**\n\n- **Prime Pool:**\n  ```\n  2, 3, 5, 7, 11, 13, 17, 19, 23, 29\n  ```\n- **Player 1 Score:** 0\n- **Player 2 Score:** 0\n\n#### **Turns:**\n\n1. **Player 1's Turn:**\n   - **Selects:** 29\n   - **Updated Score:** 0 + 29 = **29**\n   - **Updated Prime Pool:**\n     ```\n     2, 3, 5, 7, 11, 13, 17, 19, 23\n     ```\n   \n2. **Player 2's Turn:**\n   - **Selects:** 23\n   - **Updated Score:** 0 + 23 = **23**\n   - **Updated Prime Pool:**\n     ```\n     2, 3, 5, 7, 11, 13, 17, 19\n     ```\n\n3. **Player 1's Turn:**\n   - **Selects:** 19\n   - **Updated Score:** 29 + 19 = **48**\n   - **Updated Prime Pool:**\n     ```\n     2, 3, 5, 7, 11, 13, 17\n     ```\n\n4. **Player 2's Turn:**\n   - **Selects:** 17\n   - **Updated Score:** 23 + 17 = **40**\n   - **Updated Prime Pool:**\n     ```\n     2, 3, 5, 7, 11, 13\n     ```\n\n5. **Player 1's Turn:**\n   - **Selects:** 2\n   - **Updated Score:** 48 + 2 = **50**\n   - **Player 1 Wins!**\n\n### Command-Line Interaction:\n\n```\nPlayer 1, it's your turn.\nAvailable primes: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29\nEnter a prime number to select: 29\n\nPlayer 1 selected 29.\nPlayer 1's total score: 29\n\nPlayer 2, it's your turn.\nAvailable primes: 2, 3, 5, 7, 11, 13, 17, 19, 23\nEnter a prime number to select: 23\n\nPlayer 2 selected 23.\nPlayer 2's total score: 23\n\nPlayer 1, it's your turn.\nAvailable primes: 2, 3, 5, 7, 11, 13, 17, 19\nEnter a prime number to select: 19\n\nPlayer 1 selected 19.\nPlayer 1's total score: 48\n\n...\n\nPlayer 1, it's your turn.\nAvailable primes: 2, 3, 5, 7, 11, 13\nEnter a prime number to select: 2\n\nPlayer 1 selected 2.\nPlayer 1's total score: 50\n\nCongratulations, Player 1! You have reached exactly 50 and won the game!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead:**\n  - Keep track of both your own and your opponent's scores.\n  - Anticipate which primes they might select next.\n\n- **Control the Pool:**\n  - Select primes that can hinder your opponent's ability to reach 50.\n  - Be mindful of leaving primes that allow them to win on their next turn.\n\n- **Avoid Exceeding 50:**\n  - Calculate potential score outcomes before selecting a prime.\n  - It's better to select a smaller prime to stay in the game than to lose by exceeding 50.\n\n---\n\n## Summary\n\n**Prime War** is a game of numerical strategy and foresight. By selecting prime numbers and carefully managing your total score, you can outmaneuver your opponent and be the first to reach exactly 50 points. Stay sharp, plan your moves, and may the best mathematician win!\n\n# Happy Gaming!",
    "# Reverse Digit Duel\n\n## Objective\n\nReverse Digit Duel is a two-player, turn-based game where each player aims to construct the lowest possible three-digit number. Players take turns selecting digits from 1 to 9, assigning each chosen digit to a position (hundreds, tens, or ones place) in their own number. Once both players have completed their three-digit numbers, the player with the **lowest** number wins the game.\n\n## Setup\n\n- **Digit Pool**: A shared pool of digits from **1** to **9**.\n- **Player Boards**: Each player has a personal board with three slots representing the hundreds, tens, and ones places of a three-digit number.\n- **Starting Conditions**: No digits are assigned at the beginning. All digits from 1 to 9 are available in the digit pool.\n\n## Game Components\n\n- **Digits (1-9)**: Represented as numbers in the command-line interface. Each digit can be selected only once per game.\n- **Player Boards**: Visualized in the CLI as placeholders for the hundreds, tens, and ones positions for each player.\n\nExample:\n\n```\nPlayer 1 Board: [_] [_] [_]\nPlayer 2 Board: [_] [_] [_]\nAvailable Digits: 1 2 3 4 5 6 7 8 9\n```\n\n## Turns\n\n- **Turn Order**: Players decide who goes first (e.g., coin toss, agreement, or random selection).\n- **Structure of a Turn**:\n  1. **Select a Digit**: The current player chooses an available digit from the digit pool.\n  2. **Assign the Digit**: The player assigns the chosen digit to one of the three positions (hundreds, tens, or ones) on their board. Once placed, the digit cannot be moved.\n  3. **Update Boards**: The game displays the updated boards and the remaining available digits.\n- **Turn Progression**: Players alternate turns until all digits in their three-digit numbers are assigned.\n\n## Rules and Mechanics\n\n1. **Digit Selection**:\n   - Each digit from **1** to **9** can be selected only once during the game.\n   - Players must choose from the remaining available digits in the pool.\n   \n2. **Digit Assignment**:\n   - On their turn, after selecting a digit, players must immediately assign it to one of the open positions (hundreds, tens, or ones) on their board.\n   - Once a digit is assigned to a position, it **cannot be changed** later in the game.\n   \n3. **Objective**:\n   - The goal is to create the **lowest possible three-digit number**.\n   - Strategic placement is key, as players must anticipate which digits may be available in future turns.\n\n4. **Game End**:\n   - The game ends after both players have filled all three positions on their boards.\n   - The player with the lower three-digit number wins.\n   \n5. **Winning the Game**:\n   - If both players create identical numbers, which is highly unlikely due to the unique digit selection, the game results in a win for the player who completed their number **second**, emphasizing the strategic advantage of turn order.\n   \n6. **No Draws**:\n   - The game is designed to avoid draws, ensuring a decisive outcome each time.\n\n## Scoring\n\n- **Victory Condition**: Having a lower three-digit number than the opponent.\n- **No Points System**: The game uses a win/loss outcome without cumulative scoring.\n- **Match Play**:\n  - Players may choose to play multiple rounds.\n  - Keep track of wins to determine an overall champion after a set number of games.\n\n## Examples\n\n### Example Game\n\n#### Initial Setup\n\n```\nPlayer 1 Board: [_] [_] [_]\nPlayer 2 Board: [_] [_] [_]\nAvailable Digits: 1 2 3 4 5 6 7 8 9\n```\n\n#### Turn 1: Player 1\n\n- **Selects Digit**: 9\n- **Assigns To**: Hundreds place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [_] [_]\nPlayer 2 Board: [_] [_] [_]\nAvailable Digits: 1 2 3 4 5 6 7 8\n```\n\n#### Turn 2: Player 2\n\n- **Selects Digit**: 1\n- **Assigns To**: Hundreds place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [_] [_]\nPlayer 2 Board: [1] [_] [_]\nAvailable Digits: 2 3 4 5 6 7 8\n```\n\n#### Turn 3: Player 1\n\n- **Selects Digit**: 8\n- **Assigns To**: Tens place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [8] [_]\nPlayer 2 Board: [1] [_] [_]\nAvailable Digits: 2 3 4 5 6 7\n```\n\n#### Turn 4: Player 2\n\n- **Selects Digit**: 2\n- **Assigns To**: Ones place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [8] [_]\nPlayer 2 Board: [1] [_] [2]\nAvailable Digits: 3 4 5 6 7\n```\n\n#### Turn 5: Player 1\n\n- **Selects Digit**: 3\n- **Assigns To**: Ones place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [8] [3]\nPlayer 2 Board: [1] [_] [2]\nAvailable Digits: 4 5 6 7\n```\n\n#### Turn 6: Player 2\n\n- **Selects Digit**: 4\n- **Assigns To**: Tens place\n\nUpdated Boards:\n\n```\nPlayer 1 Board: [9] [8] [3]\nPlayer 2 Board: [1] [4] [2]\nAvailable Digits: 5 6 7\n```\n\n#### Game End\n\n- **Player 1 Number**: 983\n- **Player 2 Number**: 142\n\n**Winner**: **Player 2**, with the lower number 142.\n\n### Strategic Considerations\n\n- **Early Placement**: Assign high digits to higher place values if you are forced to take them.\n- **Anticipation**: Keep track of remaining digits to plan your future moves.\n- **Position Assignment**: Decide whether to fill higher place values first or leave them open for potential lower digits later.\n\n### Command-Line Interaction\n\nSample prompts and inputs:\n\n```\nAvailable Digits: 1 2 3 4 5 6 7 8 9\n\nPlayer 1, it's your turn.\nSelect a digit from the available digits: 6\nAssign digit '6' to a position (hundreds/tens/ones): ones\n\nUpdated Board:\nPlayer 1 Board: [_] [_] [6]\nAvailable Digits: 1 2 3 4 5 7 8 9\n```\n\n## Summary\n\nReverse Digit Duel is a quick and strategic game that challenges players to think ahead and make smart choices with each turn. The simplicity of the rules combined with the depth of strategy makes it suitable for players of all skill levels. Mastery comes from anticipating your opponent's choices and optimizing the placement of your digits to construct the lowest possible number.\n\nEnjoy the duel, and may the best strategist win!",
    "# CountDown Clash\n\n## Objective\n\nBe the first player to **reduce both Counter A and Counter B to zero** by strategically decrementing them during your turns. The player who reduces the second counter to zero wins the game.\n\n## Setup\n\n- The game features **two shared counters**:\n  - **Counter A**: Initialized to **10**.\n  - **Counter B**: Initialized to **10**.\n- Both players start the game without any additional pieces or positions.\n\n## Game Components\n\n- **Counter A**:\n  - Starts at **10**.\n  - Represents one of the two targets players aim to reduce to zero.\n- **Counter B**:\n  - Starts at **10**.\n  - Represents the second target for players to reduce to zero.\n- **Players**:\n  - **Player 1** and **Player 2** take alternating turns.\n- **Actions**:\n  - Players choose a counter and reduce it by a chosen amount within the allowed range on their turn.\n\n## Turns\n\n- Players take turns alternately, starting with **Player 1**.\n- **On your turn**:\n  1. **Choose a counter** to decrement: either **Counter A** or **Counter B**.\n  2. **Select an amount** to reduce the chosen counter by:\n     - The amount must be at least **1**.\n     - The amount cannot exceed the current value of the chosen counter.\n\n## Rules and Mechanics\n\n### Counter Decrementing\n\n- **Valid Moves**:\n  - You must reduce **only one counter** per turn.\n  - The decrement amount must be a **positive integer** between **1** and the counter's current value.\n- **Updating Counters**:\n  - Subtract the chosen amount from the selected counter.\n  - The other counter remains unchanged.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - **You win** if, after your turn, **both Counter A and Counter B are exactly zero**.\n  - This means you have reduced the second counter to zero on your turn.\n- **No Draws**:\n  - The game cannot end in a tie.\n  - There are no scenarios where both players win simultaneously.\n\n### Game Progression\n\n- **Strategic Choices**:\n  - Decide whether to focus on one counter or alternate between them.\n  - Anticipate your opponent's moves based on the counters' values.\n- **Forced Moves**:\n  - If both counters are at zero, the game ends.\n  - You must make a valid move if possible; passing is not allowed.\n\n## Scoring\n\n- **No Points System**:\n  - The game does not track points.\n  - The focus is solely on achieving the victory condition.\n- **Winning the Game**:\n  - The winner is the player who reduces the second counter to zero.\n\n## Examples\n\n### Example Game Playthrough\n\n**Initial State**:\n- **Counter A**: 10\n- **Counter B**: 10\n\n#### Turn 1: Player 1\n\n- **Chooses Counter A**.\n- Reduces Counter A by **3**.\n- **Counter A** is now **7**.\n- **Counter B** remains **10**.\n\n#### Turn 2: Player 2\n\n- **Chooses Counter B**.\n- Reduces Counter B by **5**.\n- **Counter B** is now **5**.\n- **Counter A** remains **7**.\n\n#### Turn 3: Player 1\n\n- **Chooses Counter A**.\n- Reduces Counter A by **7**.\n- **Counter A** is now **0**.\n- **Counter B** remains **5**.\n\n#### Turn 4: Player 2\n\n- **Chooses Counter B**.\n- Reduces Counter B by **5**.\n- **Counter B** is now **0**.\n- **Counter A** is already **0**.\n\n**Outcome**:\n\n- Both counters are zero.\n- **Player 2 wins** by reducing the second counter to zero.\n\n### Command-Line Interaction Example\n\n```\nGame Start!\nCounter A: 10, Counter B: 10\n\nPlayer 1's Turn:\nChoose a counter to decrement (A/B): A\nEnter amount to decrement (1-10): 3\nCounter A is now 7\nCounter B remains at 10\n\nPlayer 2's Turn:\nChoose a counter to decrement (A/B): B\nEnter amount to decrement (1-10): 5\nCounter B is now 5\nCounter A remains at 7\n\nPlayer 1's Turn:\nChoose a counter to decrement (A/B): A\nEnter amount to decrement (1-7): 7\nCounter A is now 0\nCounter B remains at 5\n\nPlayer 2's Turn:\nChoose a counter to decrement (A/B): B\nEnter amount to decrement (1-5): 5\nCounter B is now 0\nCounter A is already 0\n\nBoth counters are zero.\nPlayer 2 wins the game!\n```\n\n## Strategic Considerations\n\n- **Planning Ahead**:\n  - Anticipate your opponent's possible moves.\n  - Plan your decrements to control the flow of the game.\n- **Counter Control**:\n  - Decide whether to focus on reducing one counter quickly or balance reductions across both.\n- **Forcing Moves**:\n  - Manipulate the counters to force your opponent into reducing a counter to a specific value, limiting their options.\n- **Mathematical Calculations**:\n  - Use basic arithmetic to calculate future states and strategize accordingly.\n\n## Tips for Skilled Play\n\n- **Monitor Counter Values**:\n  - Keep track of the remaining values to predict future moves.\n- **Optimal Decrements**:\n  - Reducing counters to certain key values can force advantageous positions.\n- **Opponent Anticipation**:\n  - Consider what options your opponent will have after your turn.\n\n## Summary\n\n**CountDown Clash** is a simple yet strategically rich game where two players compete to be the first to reduce both shared counters to zero. By carefully choosing which counter to decrement and by how much, players can outmaneuver their opponent and secure victory. The game's straightforward mechanics make it easy to learn and play, while offering depth for those who wish to develop advanced strategies.\n\nHave fun clashing!",
    "# **Digit Duel**\n\n## **Objective**\n\nBe the first to construct a three-digit number that is higher than your opponent's by strategically selecting digits from a shared pool and placing them into your number slots. The player with the higher three-digit number at the end of the game wins.\n\n---\n\n## **Setup**\n\n1. **Shared Digit Pool**: A set of digits from **1** to **9** is placed in the shared pool. Each digit is available only once.\n\n2. **Player Number Slots**: Each player has an empty three-digit number represented by placeholders:\n\n   ```\n   [ _ ] [ _ ] [ _ ]\n   ```\n\n   - The placeholders represent the **Hundreds**, **Tens**, and **Units** places, respectively.\n\n3. **Starting Conditions**:\n\n   - Decide randomly or mutually who will take the **first turn**.\n\n---\n\n## **Game Components**\n\n- **Digits (1-9)**: These are the available digits that players can select to build their numbers. Each digit has the following attributes:\n\n  - **Value**: The numeric value of the digit (1-9).\n  - **Availability**: Each digit can be selected only **once** during the game.\n\n- **Player Slots**:\n\n  - **Hundreds Place**: The leftmost position in the number.\n  - **Tens Place**: The middle position in the number.\n  - **Units Place**: The rightmost position in the number.\n\n---\n\n## **Turns**\n\n1. **Turn Order**: Players take turns in sequence, starting with the player who was chosen to go first during setup.\n\n2. **Actions on a Turn**:\n\n   - **Select a Digit**: Choose an available digit from the shared pool.\n   - **Place the Digit**: Assign the chosen digit to one of the three places in your number: Hundreds, Tens, or Units.\n\n3. **Placement Rules**:\n\n   - Once a digit is placed in a position, **it cannot be moved**.\n   - Each place can hold **only one digit**.\n   - You must place a digit on each turn; skipping is not allowed.\n\n4. **Turn Progression**:\n\n   - After placing the digit, the turn passes to the other player.\n   - The game continues until all players have filled all three places in their number slots.\n\n---\n\n## **Rules and Mechanics**\n\n1. **Digit Selection**:\n\n   - Digits are selected from the shared pool.\n   - Each digit is available only **once**; once chosen by a player, it is **removed** from the pool.\n\n2. **Number Construction**:\n\n   - Players aim to construct the **highest possible three-digit number**.\n   - Strategic placement is crucial; consider both your number and the potential numbers your opponent can create with the remaining digits.\n\n3. **Winning the Game**:\n\n   - After all digits have been placed, compare the final three-digit numbers.\n   - The player with the **higher number** **wins** the game.\n   - There is **no possibility of a draw**; since all digits are unique and used, the numbers will always differ.\n\n4. **Game End**:\n\n   - The game ends immediately after both players have filled all three places.\n   - The winner is declared based on the rules above.\n\n---\n\n## **Scoring**\n\n- **Victory**: The player with the higher three-digit number at the end of the game.\n- **No Points System**: This game does not use a points system; it's a win/lose outcome for each round.\n- **Match Play (Optional)**: Players can agree to play multiple rounds, keeping track of wins to determine an overall champion.\n\n---\n\n## **Examples**\n\n### **Example Game Play**\n\n**Initial Shared Digit Pool**:\n\n```\nDigits Available: 1, 2, 3, 4, 5, 6, 7, 8, 9\n```\n\n**Player Slots**:\n\n- **Player 1**: [ _ ] [ _ ] [ _ ]\n- **Player 2**: [ _ ] [ _ ] [ _ ]\n\n---\n\n**Turn 1**:\n\n- **Player 1**:\n  - **Selects Digit**: 9\n  - **Places in**: Hundreds Place\n  - **Player 1's Number**: [ 9 ] [ _ ] [ _ ]\n  - **Digits Available**: 1, 2, 3, 4, 5, 6, 7, 8\n\n---\n\n**Turn 2**:\n\n- **Player 2**:\n  - **Selects Digit**: 8\n  - **Places in**: Hundreds Place\n  - **Player 2's Number**: [ 8 ] [ _ ] [ _ ]\n  - **Digits Available**: 1, 2, 3, 4, 5, 6, 7\n\n---\n\n**Turn 3**:\n\n- **Player 1**:\n  - **Selects Digit**: 2\n  - **Places in**: Units Place\n  - **Player 1's Number**: [ 9 ] [ _ ] [ 2 ]\n  - **Digits Available**: 1, 3, 4, 5, 6, 7\n\n---\n\n**Turn 4**:\n\n- **Player 2**:\n  - **Selects Digit**: 7\n  - **Places in**: Tens Place\n  - **Player 2's Number**: [ 8 ] [ 7 ] [ _ ]\n  - **Digits Available**: 1, 3, 4, 5, 6\n\n---\n\n**Turn 5**:\n\n- **Player 1**:\n  - **Selects Digit**: 5\n  - **Places in**: Tens Place\n  - **Player 1's Number**: [ 9 ] [ 5 ] [ 2 ]\n  - **Digits Available**: 1, 3, 4, 6\n\n---\n\n**Turn 6**:\n\n- **Player 2**:\n  - **Selects Digit**: 6\n  - **Places in**: Units Place\n  - **Player 2's Number**: [ 8 ] [ 7 ] [ 6 ]\n  - **Digits Available**: 1, 3, 4\n\n---\n\n**Final Numbers**:\n\n- **Player 1**:  **9 5 2**\n- **Player 2**:  **8 7 6**\n\n---\n\n**Outcome**:\n\n- **Player 1's Number**: 952\n- **Player 2's Number**: 876\n- **Winner**: **Player 1** (952 > 876)\n\n---\n\n## **Strategic Considerations**\n\n- **Early High Placement**: Placing high digits in the Hundreds place early can put pressure on your opponent.\n- **Blocking**: Choose digits that your opponent may need to complete a high number.\n- **Flexibility**: Leave certain places open if anticipating better digit availability in subsequent turns.\n- **Opponent's Moves**: Pay attention to your opponent's choices to anticipate their potential final number.\n\n---\n\n## **Sample Command-Line Interaction**\n\nAssuming players input their choices in a command-line interface, the game may proceed as follows:\n\n```\nDigits Available: 1 2 3 4 5 6 7 8 9\n\nPlayer 1, it's your turn.\nAvailable Digits: 1 2 3 4 5 6 7 8 9\nEnter the digit you want to select: 9\nChoose position to place the digit (hundreds/tens/units): hundreds\n\nPlayer 1's Number: [9][ ][ ]\n\nDigits Available: 1 2 3 4 5 6 7 8\n\nPlayer 2, it's your turn.\nAvailable Digits: 1 2 3 4 5 6 7 8\nEnter the digit you want to select: 8\nChoose position to place the digit (hundreds/tens/units): hundreds\n\nPlayer 2's Number: [8][ ][ ]\n\n...\n\n(Continue until all places are filled.)\n\n...\n\nFinal Numbers:\nPlayer 1's Number: 952\nPlayer 2's Number: 876\n\nPlayer 1 wins!\n```\n\n---\n\n## **Conclusion**\n\n**Digit Duel** is a quick, strategic game that combines elements of luck and foresight. Each decision impacts not only your potential to create the highest number but also influences the options available to your opponent. By carefully selecting and placing digits, players engage in a battle of wits to outmaneuver each other and claim victory.\n\n---\n\nEnjoy the game, and may the highest number win!",
    "# Sum31 Game Rule Book\n\n## Objective\n\nSum31 is a two-player turn-based numerical strategy game played in a command-line interface. The primary goal is to be the player who reaches a cumulative total of **exactly 31** by strategically selecting numbers from a shared pool. Players take turns picking numbers, and the first to bring the shared total to 31 wins the game. If a player causes the total to exceed 31, they lose immediately. The game combines simple arithmetic with strategic planning, allowing skilled players to consistently outperform less experienced opponents.\n\n## Setup\n\n- **Starting Total**: The game begins with a cumulative total (`Total`) of **0**.\n- **Available Numbers**: A shared pool of numbers from **1 to 9** is available. Each number can be selected only once during the game.\n- **Player Order**: Players decide who will take the first turn. This can be determined randomly or by mutual agreement.\n\n## Game Components\n\n- **Shared Total (`Total`)**: An integer variable that holds the cumulative sum of the numbers selected by both players. It starts at 0 and changes as the game progresses.\n- **Available Numbers Pool**: A list containing numbers **1** through **9**. This pool is updated after each turn to remove numbers that have been selected.\n- **Player Inputs**: Each player will input their chosen number during their turn.\n\n## Turns\n\n- **Turn Order**: Players alternate turns throughout the game.\n- **Player Actions During a Turn**:\n  1. **View Game State**: At the start of their turn, the player is informed of the current `Total` and the list of `Available Numbers`.\n  2. **Select a Number**: The player selects one number from the `Available Numbers` pool.\n  3. **Update Total**: The selected number is added to the `Total`.\n  4. **Update Available Numbers**: The selected number is removed from the `Available Numbers` pool.\n  5. **End of Turn**: The turn ends, and control passes to the other player.\n\n## Rules and Mechanics\n\n- **Number Selection**:\n  - Players must select a number from the `Available Numbers` pool.\n  - Each number from 1 to 9 can be selected only once per game.\n- **Calculating the Total**:\n  - The selected number is added to the shared `Total`.\n  - If the `Total` after addition is exactly **31**, the player who made the selection wins the game.\n  - If the `Total` exceeds **31**, the player who made the selection loses the game immediately.\n- **Winning the Game**:\n  - **Victory Condition**: Be the player who brings the shared `Total` to exactly **31**.\n- **Losing the Game**:\n  - **Defeat Condition**: Select a number that causes the `Total` to exceed **31**.\n\n## Scoring\n\n- **Win/Loss Outcome**: The game outcome is binary—one player wins, and the other loses.\n- **No Points System**: There is no point scoring; the focus is on winning the game.\n- **Skill Recognition**: Over multiple games, skilled players will demonstrate superior strategic planning by consistently winning.\n\n## Examples\n\nBelow are example scenarios and command-line interactions to illustrate how the game is played.\n\n### Example Game Playthrough\n\n#### Start of Game\n- **Total**: 0\n- **Available Numbers**: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n#### Player 1's Turn\n- **Current Total**: 0\n- **Available Numbers**: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n- **Action**: Player 1 selects **5**.\n- **Updated Total**: 0 + 5 = **5**\n- **Available Numbers**: [1, 2, 3, 4, 6, 7, 8, 9]\n\n#### Player 2's Turn\n- **Current Total**: 5\n- **Available Numbers**: [1, 2, 3, 4, 6, 7, 8, 9]\n- **Action**: Player 2 selects **6**.\n- **Updated Total**: 5 + 6 = **11**\n- **Available Numbers**: [1, 2, 3, 4, 7, 8, 9]\n\n#### Player 1's Turn\n- **Current Total**: 11\n- **Available Numbers**: [1, 2, 3, 4, 7, 8, 9]\n- **Action**: Player 1 selects **9**.\n- **Updated Total**: 11 + 9 = **20**\n- **Available Numbers**: [1, 2, 3, 4, 7, 8]\n\n#### Player 2's Turn\n- **Current Total**: 20\n- **Available Numbers**: [1, 2, 3, 4, 7, 8]\n- **Action**: Player 2 selects **8**.\n- **Updated Total**: 20 + 8 = **28**\n- **Available Numbers**: [1, 2, 3, 4, 7]\n\n#### Player 1's Turn\n- **Current Total**: 28\n- **Available Numbers**: [1, 2, 3, 4, 7]\n- **Action**: Player 1 selects **3**.\n- **Updated Total**: 28 + 3 = **31**\n- **Available Numbers**: [1, 2, 4, 7]\n- **Outcome**: Player 1 wins by reaching exactly 31.\n\n### Command-Line Interaction Sample\n\n```\n--- Sum31 Game Start ---\nTotal: 0\nAvailable Numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nPlayer 1's Turn:\nEnter a number from the available numbers: 5\n\nTotal is now 5\nAvailable Numbers: [1, 2, 3, 4, 6, 7, 8, 9]\n\nPlayer 2's Turn:\nEnter a number from the available numbers: 6\n\nTotal is now 11\nAvailable Numbers: [1, 2, 3, 4, 7, 8, 9]\n\nPlayer 1's Turn:\nEnter a number from the available numbers: 9\n\nTotal is now 20\nAvailable Numbers: [1, 2, 3, 4, 7, 8]\n\nPlayer 2's Turn:\nEnter a number from the available numbers: 8\n\nTotal is now 28\nAvailable Numbers: [1, 2, 3, 4, 7]\n\nPlayer 1's Turn:\nEnter a number from the available numbers: 3\n\nTotal is now 31\nAvailable Numbers: [1, 2, 4, 7]\n\nPlayer 1 wins! The total is exactly 31.\n```\n\n### Strategic Considerations\n\n- **Planning Ahead**: Players should anticipate future moves, considering which numbers remain available and how they can reach 31 on their turn.\n- **Forced Moves**: A skilled player can control the game by forcing the opponent into a position where any move they make will cause the total to exceed 31.\n- **Number Selection**: Choosing higher or lower numbers strategically can help manipulate the total to your advantage.\n\n## Additional Notes\n\n- **Invalid Moves**: If a player selects a number not in the `Available Numbers` pool or inputs an invalid value (e.g., a number outside 1-9), they should be prompted to select again.\n- **Exceeding 31**: If a player's selection causes the `Total` to exceed 31, they lose immediately, emphasizing careful calculation.\n- **Game Repetition**: Sum31 is quick to play, allowing players to engage in multiple rounds and refine their strategies over time.\n\n---\n\nBy following this rulebook, players will have a clear understanding of how to play Sum31. The game's simplicity makes it easy to code and learn, while the strategic depth offers engaging gameplay where skill can triumph over chance.",
    "# Sequence Duel\n\n## Objective\n\nSequence Duel is a two-player, turn-based strategy game where players compete to be the first to create a numerical sequence following specific arithmetic rules. The primary goal is to be the first player to obtain three numbers that satisfy the condition: one number is the sum or difference of the other two. Players must strategically select numbers to build their sequence while blocking their opponent's attempts to do the same.\n\nVictory is achieved by being the first to form a valid sequence of three numbers **a**, **b**, and **c**, in any order, such that:\n\n- **a + b = c**, or\n- **a - b = c** (including negative results).\n\n## Setup\n\n1. **Number Pool**: The game uses a shared pool of numbers from **1** to **9**.\n2. **Player Hands**: Each player starts with an empty hand.\n3. **First Player**: Decide who goes first (e.g., by coin toss or mutual agreement).\n\n## Game Components\n\n- **Shared Number List**: A list of numbers from **1** to **9** available for selection. Each number can be selected only once.\n  \n  ```\n  Available Numbers: 1 2 3 4 5 6 7 8 9\n  ```\n\n- **Player Hands**: Records of numbers each player has selected.\n  - **Player 1 Hand**: Numbers selected by Player 1.\n  - **Player 2 Hand**: Numbers selected by Player 2.\n\n- **Command-Line Interface**: The game is played via text input and output.\n\n## Turns\n\n- Players alternate turns starting with the first player.\n- **On a Player's Turn**:\n  1. **Select a Number**: Choose one number from the available numbers in the shared number list.\n  2. **Update Hands**:\n     - Add the selected number to the player's hand.\n     - Remove the selected number from the shared number list.\n  3. **Check for Victory**:\n     - After each turn, check if the player has a sequence satisfying the victory condition.\n     - If victory is achieved, the game ends.\n  4. **Pass Turn**: The turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - On each turn, a player must select **one** available number from the shared number list.\n   - Numbers are selected by specifying the desired number.\n\n2. **Sequence Formation**:\n   - Players aim to collect three numbers that can form an equation of the form:\n     - **a + b = c** or **a - b = c**, where **a**, **b**, and **c** are any three numbers from the player's hand.\n   - The numbers can be used in any order.\n   - Equations must use **exactly three numbers** from the player's hand.\n   - All numbers in the equation must be from the player's hand; numbers from the opponent's hand or unselected numbers cannot be used.\n\n3. **Game End Conditions**:\n   - **Win**: A player wins immediately upon forming a valid sequence satisfying the victory condition.\n   - **Loss**: A player loses if the opponent forms a valid sequence first.\n   - **No Draws**: The game cannot end in a draw since a finite number of numbers ensures that eventually, one player will achieve the victory condition.\n\n4. **Invalid Moves**:\n   - If a player attempts to select a number that is not available, they must choose another number.\n   - Failure to select a valid number on a turn (e.g., due to inputting an invalid choice) results in losing that turn but does not incur additional penalties.\n\n5. **Strategy**:\n   - Players must balance between advancing their sequences and blocking the opponent.\n   - Observing the opponent's selections is crucial for anticipating and preventing their victory.\n\n## Scoring\n\n- **Winning**: The player who first forms a valid sequence according to the victory condition is declared the winner.\n- **Tracking Scores**:\n  - Although individual games result in a win or loss, players may keep a tally of wins over multiple games to determine overall performance.\n  - **Optional**: Assign points for wins to create a match (e.g., first to 3 wins).\n\n## Examples\n\n### Example Game Play\n\n#### Initial Setup\n\n```\nAvailable Numbers: 1 2 3 4 5 6 7 8 9\nPlayer 1 Hand: \nPlayer 2 Hand: \n```\n\n#### Turn 1: Player 1\n\n- **Action**: Player 1 selects **5**.\n- **Update**:\n  - Available Numbers: 1 2 3 4 6 7 8 9\n  - Player 1 Hand: 5\n  - Player 2 Hand: \n\n#### Turn 2: Player 2\n\n- **Action**: Player 2 selects **3**.\n- **Update**:\n  - Available Numbers: 1 2 4 6 7 8 9\n  - Player 1 Hand: 5\n  - Player 2 Hand: 3\n\n#### Turn 3: Player 1\n\n- **Action**: Player 1 selects **2**.\n- **Update**:\n  - Available Numbers: 1 4 6 7 8 9\n  - Player 1 Hand: 5 2\n  - Player 2 Hand: 3\n\n#### Turn 4: Player 2\n\n- **Action**: Player 2 selects **7**.\n- **Update**:\n  - Available Numbers: 1 4 6 8 9\n  - Player 1 Hand: 5 2\n  - Player 2 Hand: 3 7\n\n#### Turn 5: Player 1\n\n- **Action**: Player 1 selects **7** (Invalid move; 7 is not available).\n- **Correction**: Player 1 selects **4**.\n- **Update**:\n  - Available Numbers: 1 6 8 9\n  - Player 1 Hand: 5 2 4\n  - Player 2 Hand: 3 7\n\n- **Victory Check**:\n  - Player 1 has numbers **2**, **4**, **5**.\n  - Possible sequences:\n    - **2 + 4 = 6** (But 6 is not in Player 1's hand).\n    - **5 - 2 = 3** (3 is not in Player 1's hand).\n    - No valid sequence yet.\n\n#### Turn 6: Player 2\n\n- **Action**: Player 2 selects **2** (Invalid move; 2 is not available).\n- **Correction**: Player 2 selects **6**.\n- **Update**:\n  - Available Numbers: 1 8 9\n  - Player 1 Hand: 5 2 4\n  - Player 2 Hand: 3 7 6\n\n- **Victory Check**:\n  - Player 2 has numbers **3**, **6**, **7**.\n  - Possible sequences:\n    - **3 + 6 = 9** (9 is not in Player 2's hand).\n    - **7 - 3 = 4** (4 is not in Player 2's hand).\n    - No valid sequence yet.\n\n#### Turn 7: Player 1\n\n- **Action**: Player 1 selects **9**.\n- **Update**:\n  - Available Numbers: 1 8\n  - Player 1 Hand: 5 2 4 9\n  - Player 2 Hand: 3 7 6\n\n- **Victory Check**:\n  - Player 1 has numbers **2**, **4**, **5**, **9**.\n  - Possible sequences:\n    - **5 + 4 = 9** (All numbers are in Player 1's hand).\n  - **Player 1 wins!**\n\n### Command-Line Interaction Example\n\n```\nAvailable Numbers: 1 2 3 4 5 6 7 8 9\nPlayer 1 Hand: \nPlayer 2 Hand: \n\nPlayer 1's turn.\nSelect a number from the available numbers: 5\n\nAvailable Numbers: 1 2 3 4 6 7 8 9\nPlayer 1 Hand: 5\nPlayer 2 Hand: \n\nPlayer 2's turn.\nSelect a number from the available numbers: 3\n\nAvailable Numbers: 1 2 4 6 7 8 9\nPlayer 1 Hand: 5\nPlayer 2 Hand: 3\n\nPlayer 1's turn.\nSelect a number from the available numbers: 2\n\nAvailable Numbers: 1 4 6 7 8 9\nPlayer 1 Hand: 5 2\nPlayer 2 Hand: 3\n\nPlayer 2's turn.\nSelect a number from the available numbers: 7\n\nAvailable Numbers: 1 4 6 8 9\nPlayer 1 Hand: 5 2\nPlayer 2 Hand: 3 7\n\nPlayer 1's turn.\nSelect a number from the available numbers: 4\n\nAvailable Numbers: 1 6 8 9\nPlayer 1 Hand: 5 2 4\nPlayer 2 Hand: 3 7\n\nPlayer 1 has not yet formed a valid sequence.\n\nPlayer 2's turn.\nSelect a number from the available numbers: 6\n\nAvailable Numbers: 1 8 9\nPlayer 1 Hand: 5 2 4\nPlayer 2 Hand: 3 7 6\n\nPlayer 2 has not yet formed a valid sequence.\n\nPlayer 1's turn.\nSelect a number from the available numbers: 9\n\nAvailable Numbers: 1 8\nPlayer 1 Hand: 5 2 4 9\nPlayer 2 Hand: 3 7 6\n\nPlayer 1 has formed a valid sequence: 5 + 4 = 9\n\nPlayer 1 wins!\n```\n\n## Summary\n\nSequence Duel is a simple yet strategic game that challenges players to think ahead and anticipate their opponent's moves. With a finite set of numbers and clear rules, games are fast-paced and engaging, perfect for quick matches or longer sessions tracking multiple wins. Whether you're honing your arithmetic skills or enjoying competitive play, Sequence Duel offers an exciting experience in a minimalist format.",
    "# Bit Flip\n\n## Objective\n\n**Bit Flip** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to be the first player to reduce a shared binary number to zero by flipping bits according to the game rules. The player who changes the binary number to all zeros on their turn wins the game.\n\n## Setup\n\n1. **Initial Binary Number**: Agree on the length of the binary number (number of bits) to be used in the game. A recommended starting length is **8 bits** for a quick game, but any reasonable length (e.g., 5 to 16 bits) can be used.\n2. **Starting Configuration**: Initialize the binary number to all ones. For example, with 8 bits, the starting number is **11111111**.\n3. **Player Assignment**: Decide which player will be **Player 1** and **Player 2**. This can be done randomly or by mutual agreement.\n4. **First Turn**: Player 1 begins the game.\n\n## Game Components\n\n- **Binary Number**: A sequence of bits represented as ones (`1`) and zeros (`0`). It is shared between both players and displayed during each turn.\n- **Bit Positions**: Each bit in the binary number has a position index, starting from **1** on the leftmost bit to **N** on the rightmost bit, where **N** is the length of the binary number.\n- **Players**: Two participants designated as **Player 1** and **Player 2**.\n\n## Turns\n\n- The game proceeds in alternating turns, starting with Player 1.\n- During a turn, the active player performs one valid action to modify the shared binary number.\n- After the action, the updated binary number is displayed.\n- The turn then passes to the other player.\n- The game continues until one player wins according to the winning condition.\n\n## Rules and Mechanics\n\n### Actions on a Turn\n\nOn their turn, a player must perform one of the following actions:\n\n1. **Flip a Single Bit**:\n   - Choose any one bit that is currently set to `1`.\n   - Flip it to `0`.\n\n2. **Flip Two Adjacent Bits**:\n   - Choose two bits that are both currently set to `1` and are next to each other (adjacent).\n   - Flip both bits to `0`.\n\n### Restrictions\n\n- **Valid Moves**:\n  - A player can only flip bits that are currently set to `1`.\n  - When flipping two bits, they must be adjacent and both set to `1`.\n- **Mandatory Action**:\n  - A player must make a valid move on their turn. Skipping a turn or passing is not allowed.\n- **No Reversing**:\n  - Bits set to `0` cannot be changed back to `1`.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - The player who reduces the binary number to all zeros (`0`) on their turn immediately wins the game.\n- **No Valid Moves**:\n  - If a player has no valid moves on their turn (because all bits are `0`), they lose the game.\n\n## Scoring\n\n- **Win/Loss Outcome**:\n  - The game is won by the player who successfully reduces the binary number to zero on their turn.\n  - There is no point system or scoring beyond determining the winner of each game.\n- **Match Play (Optional)**:\n  - Players can agree to play multiple rounds, keeping track of wins to determine an overall champion.\n\n## Examples\n\n### Example Game Play\n\n**Starting Binary Number**: `11111` (5 bits)\n\n#### Turn 1: Player 1\n\n- **Action**: Flip a single bit at position **3**.\n- **Explanation**: Bit at position 3 (counting from the left) is flipped from `1` to `0`.\n- **Updated Binary Number**: `1 1 0 1 1`\n\n#### Turn 2: Player 2\n\n- **Action**: Flip two adjacent bits starting at position **4**.\n- **Explanation**: Bits at positions 4 and 5 are both `1` and adjacent. Both are flipped to `0`.\n- **Updated Binary Number**: `1 1 0 0 0`\n\n#### Turn 3: Player 1\n\n- **Action**: Flip two adjacent bits starting at position **1**.\n- **Explanation**: Bits at positions 1 and 2 are both `1` and adjacent. Both are flipped to `0`.\n- **Updated Binary Number**: `0 0 0 0 0`\n\n**Result**: Player 1 wins by reducing the binary number to all zeros.\n\n### Command-Line Interaction Example\n\nAssuming an 8-bit game starting with `11111111`:\n\n```\nWelcome to Bit Flip!\n\nStarting Binary Number: 1 1 1 1 1 1 1 1\n\n---\n\nPlayer 1's Turn\nCurrent Binary Number: 1 1 1 1 1 1 1 1\n\nChoose your action:\n1) Flip a single bit\n2) Flip two adjacent bits\nEnter choice (1 or 2): 2\n\nEnter the starting position of the first bit to flip (1-7): 5\n\nYou flipped bits at positions 5 and 6.\n\nUpdated Binary Number: 1 1 1 1 0 0 1 1\n\n---\n\nPlayer 2's Turn\nCurrent Binary Number: 1 1 1 1 0 0 1 1\n\nChoose your action:\n1) Flip a single bit\n2) Flip two adjacent bits\nEnter choice (1 or 2): 1\n\nEnter the position of the bit to flip (1-8): 3\n\nYou flipped bit at position 3.\n\nUpdated Binary Number: 1 1 0 1 0 0 1 1\n\n---\n\nPlayer 1's Turn\nCurrent Binary Number: 1 1 0 1 0 0 1 1\n\nChoose your action:\n1) Flip a single bit\n2) Flip two adjacent bits\nEnter choice (1 or 2): 2\n\nEnter the starting position of the first bit to flip (1-7): 1\n\nYou flipped bits at positions 1 and 2.\n\nUpdated Binary Number: 0 0 0 1 0 0 1 1\n\n---\n\nPlayer 2's Turn\nCurrent Binary Number: 0 0 0 1 0 0 1 1\n\nChoose your action:\n1) Flip a single bit\n2) Flip two adjacent bits\nEnter choice (1 or 2): 2\n\nEnter the starting position of the first bit to flip (1-7): 7\n\nYou flipped bits at positions 7 and 8.\n\nUpdated Binary Number: 0 0 0 1 0 0 0 0\n\n---\n\nPlayer 1's Turn\nCurrent Binary Number: 0 0 0 1 0 0 0 0\n\nChoose your action:\n1) Flip a single bit\n2) Flip two adjacent bits\nEnter choice (1 or 2): 1\n\nEnter the position of the bit to flip (1-8): 4\n\nYou flipped bit at position 4.\n\nUpdated Binary Number: 0 0 0 0 0 0 0 0\n\n---\n\nPlayer 1 has reduced the binary number to zero and wins the game!\n```\n\n**Explanation**:\n\n- Players take turns strategically flipping bits to force the opponent into a position with no winning moves.\n- Optimal play involves anticipating the opponent's responses and planning several moves ahead.\n\n---\n\nEnjoy playing Bit Flip, and may the most strategic player win!",
    "# Even-Odd Battle Rule Book\n\n## Objective\n\n**Even-Odd Battle** is a strategic two-player, turn-based game played in a command-line interface. The primary goal is to accumulate more points than your opponent by strategically adding numbers to a running total. Players earn points by turning the total into an even number or a multiple of 5. The game ends when the total reaches or exceeds 25, and the player with the highest score wins.\n\n## Setup\n\n- **Starting Total**: The game begins with a total of **0**.\n- **Player Scores**: Both players start with **0 points**.\n- **Turn Order**: Decide which player goes first (e.g., Player 1 and Player 2).\n\n## Game Components\n\n- **Running Total**: A single number that players will add to during the game. It starts at 0 and is updated each turn.\n- **Player Scores**: Each player has an individual score that accumulates points earned during the game.\n- **Number Choices**: On their turn, players can choose an integer between **1 and 5** (inclusive) to add to the running total.\n\n## Turns\n\n1. **Player's Action**: On their turn, a player chooses a number from **1 to 5** to add to the running total.\n2. **Updating Total**: The chosen number is added to the running total.\n3. **Scoring**: After the total is updated, check for scoring opportunities:\n   - If the new total is **even**, the player earns **1 point**.\n   - If the new total is a **multiple of 5**, the player earns **2 points**.\n   - If the total satisfies both conditions (e.g., it is both even and a multiple of 5), the player earns points for both conditions (total **3 points**).\n4. **Turn Progression**: The turn passes to the opponent.\n5. **Game End**: The game continues until the running total reaches or exceeds **25**.\n\n## Rules and Mechanics\n\n- **Number Selection**: Players must choose an integer between **1 and 5** (inclusive) on their turn.\n- **Valid Moves**: Any number within the allowed range can be chosen regardless of previous moves.\n- **Scoring Conditions**:\n  - **Even Total**: If the running total is divisible by 2, earn **1 point**.\n  - **Multiple of 5**: If the running total is divisible by 5, earn **2 points**.\n- **End of Game**: When the total reaches or exceeds 25 after a player's turn, the game ends immediately.\n- **Victory Condition**: The player with the **higher score** at the end of the game wins.\n- **No Draws**: If scores are tied at the end, the **last player to have taken a turn loses**.\n\n## Scoring\n\n- **Tracking Scores**: Players keep a cumulative score throughout the game based on the points earned each turn.\n- **Winning the Game**: Focus on maximizing your score while possibly limiting your opponent's scoring opportunities.\n\n## Examples\n\n### Sample Game Play\n\n**Starting the Game**\n\n- Running Total: 0\n- Player 1 Score: 0\n- Player 2 Score: 0\n\n---\n\n**Turn 1: Player 1**\n\n- Chooses to add **3**.\n- New Running Total: 0 + 3 = **3**\n- Scoring:\n  - 3 is **odd** (no point).\n  - Not a multiple of 5 (no point).\n- Player 1 Score: **0**\n- Running Total remains at **3**.\n\n---\n\n**Turn 2: Player 2**\n\n- Chooses to add **2**.\n- New Running Total: 3 + 2 = **5**\n- Scoring:\n  - 5 is **odd** (no point).\n  - 5 is a **multiple of 5** (earn **2 points**).\n- Player 2 Score: **2**\n- Running Total is now **5**.\n\n---\n\n**Turn 3: Player 1**\n\n- Chooses to add **5**.\n- New Running Total: 5 + 5 = **10**\n- Scoring:\n  - 10 is **even** (earn **1 point**).\n  - 10 is a **multiple of 5** (earn **2 points**).\n- Total Points Earned: 1 + 2 = **3 points**\n- Player 1 Score: **3**\n- Running Total is now **10**.\n\n---\n\n**Turn 4: Player 2**\n\n- Chooses to add **4**.\n- New Running Total: 10 + 4 = **14**\n- Scoring:\n  - 14 is **even** (earn **1 point**).\n  - Not a multiple of 5 (no point).\n- Player 2 Score: **3**\n- Running Total is now **14**.\n\n---\n\n**Turn 5: Player 1**\n\n- Chooses to add **1**.\n- New Running Total: 14 + 1 = **15**\n- Scoring:\n  - 15 is **odd** (no point).\n  - 15 is a **multiple of 5** (earn **2 points**).\n- Player 1 Score: **5**\n- Running Total is now **15**.\n\n---\n\n**Turn 6: Player 2**\n\n- Chooses to add **5**.\n- New Running Total: 15 + 5 = **20**\n- Scoring:\n  - 20 is **even** (earn **1 point**).\n  - 20 is a **multiple of 5** (earn **2 points**).\n- Total Points Earned: 1 + 2 = **3 points**\n- Player 2 Score: **6**\n- Running Total is now **20**.\n\n---\n\n**Turn 7: Player 1**\n\n- Chooses to add **5**.\n- New Running Total: 20 + 5 = **25**\n- Scoring:\n  - 25 is **odd** (no point).\n  - 25 is a **multiple of 5** (earn **2 points**).\n- Player 1 Score: **7**\n- Running Total is now **25**.\n- **Game Ends** (Total ≥ 25).\n\n---\n\n**Final Scores**\n\n- Player 1 Score: **7**\n- Player 2 Score: **6**\n- **Winner**: **Player 1**\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate the running total after your move to maximize your scoring opportunities.\n- **Defensive Play**: Consider moves that may limit your opponent's ability to score on their next turn.\n- **Balance Risks**: Weigh the benefits of scoring now versus setting up for higher points in subsequent turns.\n\n---\n\nEnjoy the game and may the best strategist win!",
    "# Number Bridge: A Two-Player Strategic Game\n\n## Objective\n\n**Primary Goal:**  \nBe the first player to construct a \"Number Bridge\" by collecting numbers that sum up exactly to **30**.\n\n**How to Achieve Victory:**  \n- Strategically select numbers from a shared pool to add to your collection.\n- Prevent your opponent from reaching the target sum by tactically choosing numbers they may need.\n- The first player whose collected numbers total exactly **30** wins the game.\n\n**Win Condition:**  \n- **Win:** Successfully accumulate numbers that sum to **30** before your opponent.\n- **Loss:** Your opponent reaches the sum of **30** before you do.\n\n---\n\n## Setup\n\n1. **Number Pool Initialization:**\n   - Create a shared pool containing numbers from **1** to **20**.\n   - All numbers are available at the start of the game.\n\n2. **Player Preparation:**\n   - Each player has an empty collection at the beginning.\n   - Decide who will take the first turn (can be random or by agreement).\n\n3. **Starting Conditions:**\n   - Both players begin with a total sum of **0** in their collections.\n   - The target sum to reach is **30**.\n\n---\n\n## Game Components\n\n1. **Shared Number Pool:**\n   - **Numbers:** Integers from **1** to **20**.\n   - **Availability:** Once a number is selected by a player, it is removed from the pool.\n\n2. **Player Collections:**\n   - Each player has their own collection where they accumulate selected numbers.\n   - The collection keeps track of the numbers chosen and the current total sum.\n\n3. **Sum Tracker:**\n   - **Function:** Keeps track of the total sum of numbers in each player's collection.\n   - **Visibility:** Both players can view each other's total sums, but not the individual numbers if secrecy is preferred.\n\n---\n\n## Turns\n\n1. **Turn Structure:**\n   - Players alternate turns throughout the game.\n   - On each turn, a player must perform the following actions:\n     - **Action Phase:** Select one available number from the shared pool.\n     - **Collection Update:** Add the selected number to their collection.\n     - **Pool Update:** Remove the selected number from the shared pool.\n\n2. **Turn Progression:**\n   - After a player completes their turn, the next player proceeds with their turn.\n   - The game continues in this alternating fashion until a win condition is met.\n\n3. **Turn Actions:**\n   - **Selection Constraints:**\n     - A player cannot select a number if adding it to their total sum would exceed **30**.\n     - If no valid numbers are available to select, the player must pass their turn.\n\n---\n\n## Rules and Mechanics\n\n1. **Number Selection:**\n   - **Valid Choices:** Players can choose any number from the shared pool that does not cause their total sum to exceed **30**.\n   - **Invalid Choices:** If adding all available numbers would exceed **30**, the player must pass.\n\n2. **Total Sum Calculation:**\n   - After each selection, the new total sum of the player's collection is calculated.\n   - The total sum is the accumulation of all numbers the player has selected.\n\n3. **Winning the Game:**\n   - **Exact Match Required:** A player must reach exactly **30** to win.\n   - **Overshooting Prohibited:** If a player's total sum exceeds **30**, they lose immediately.\n   - **No Draws:** The game cannot end in a draw due to the finite number of combinations to reach **30** within the constraints.\n\n4. **Blocking Mechanic:**\n   - Players can strategically select numbers that they anticipate the opponent may need.\n   - This adds a layer of strategy, allowing skilled players to control the flow of the game.\n\n5. **Passing a Turn:**\n   - If a player cannot make a valid move without exceeding **30**, they must pass.\n   - The opponent continues to play until they can reach **30** or also have to pass.\n\n6. **End of Game Conditions:**\n   - **Victory:** First player to reach a total sum of **30** wins.\n   - **Defeat by Overshooting:** If a player's total sum exceeds **30**, they lose immediately.\n   - **Forced Passing:** If both players must pass consecutively without reaching **30**, the player with the total sum closest to **30** wins.\n\n---\n\n## Scoring\n\n- **Winning Player:** Achieves a total sum of exactly **30** in their collection.\n- **Losing Player:** Fails to reach **30** before the opponent or exceeds **30**.\n- **No Points System:** The game is won by meeting the objective, not by accumulating points.\n- **Tracking Progress:** Players keep track of their total sums throughout the game to strategize their next moves.\n\n---\n\n## Examples\n\n### Example Game Playthrough\n\n**Initial Setup:**\n- Shared Number Pool: [1, 2, 3, 4, 5, ..., 20]\n- Both players' collections are empty.\n\n**Turn 1: Player 1**\n- **Action:** Selects **15**.\n- **Collection Update:** [15]\n- **Total Sum:** 15\n- **Pool:** Numbers 1-14, 16-20 remain.\n\n**Turn 2: Player 2**\n- **Action:** Selects **14**.\n- **Collection Update:** [14]\n- **Total Sum:** 14\n- **Pool:** Numbers 1-13, 15, 16-20 remain.\n\n**Turn 3: Player 1**\n- **Action:** Selects **10**.\n- **Collection Update:** [15, 10]\n- **Total Sum:** 25\n- **Pool:** Numbers 1-9, 11-13, 16-20 remain.\n\n**Turn 4: Player 2**\n- **Action:** Selects **16**.\n- **Collection Update:** [14, 16]\n- **Total Sum:** 30\n- **Outcome:** Player 2 wins by reaching exactly 30.\n\n### Command-Line Interaction Sample\n\n**Start of Game**\n\n```\nShared Pool: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\n\nPlayer 1's turn.\nYour total sum: 0\nSelect a number from the pool: 12\n\nPlayer 1 selects 12.\nPlayer 1's total sum is now 12.\nShared Pool: [1-11,13-20]\n\nPlayer 2's turn.\nYour total sum: 0\nSelect a number from the pool: 15\n\nPlayer 2 selects 15.\nPlayer 2's total sum is now 15.\nShared Pool: [1-11,13,14,16-20]\n\nPlayer 1's turn.\nYour total sum: 12\nSelect a number from the pool: 18\n\nError: Selecting 18 would exceed the total sum of 30.\nPlease select a valid number.\n\nSelect a number from the pool: 13\n\nPlayer 1 selects 13.\nPlayer 1's total sum is now 25.\nShared Pool: [1-11,14,16-20]\n\nPlayer 2's turn.\nYour total sum: 15\nSelect a number from the pool: 14\n\nPlayer 2 selects 14.\nPlayer 2's total sum is now 29.\nShared Pool: [1-11,16-20]\n\nPlayer 1's turn.\nYour total sum: 25\nSelect a number from the pool: 5\n\nPlayer 1 selects 5.\nPlayer 1's total sum is now 30.\nPlayer 1 wins!\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead:** Keep track of which numbers are available and how they can combine to reach **30**.\n- **Block Opponent:** Anticipate which numbers your opponent may need and consider selecting them first.\n- **Avoid Overshooting:** Be cautious not to exceed the total sum of **30**, which would result in an immediate loss.\n- **Force Passing:** If you can't make a move without exceeding **30**, consider which numbers to leave for your opponent.\n\n---\n\n## Conclusion\n\n**Number Bridge** is a simple yet strategic game that emphasizes planning and foresight. It's easy to code for a command-line interface and provides a quick gameplay experience where skill and strategy can consistently lead to victory. Enjoy building your number bridge!",
    "# Number Quest\n\n*An engaging two-player, turn-based strategy game played on the command line, where players race to reach the target number by strategically adding or multiplying numbers.*\n\n---\n\n## Objective\n\nThe primary goal of **Number Quest** is to be the first player to reach the **target number** exactly by strategically performing allowed mathematical operations on a shared **current number**. The player who manipulates the current number to match the target number wins the game.\n\n---\n\n## Setup\n\n1. **Determine the Target Number**: Decide on a target number to reach. This can be any positive integer (e.g., 20, 50, 100). For a quick game, a lower number like 20 is recommended.\n2. **Initialize the Current Number**: Start the game with the current number set to **1**.\n3. **Decide Turn Order**: Players decide who will take the first turn (e.g., by flipping a coin or mutual agreement).\n\n---\n\n## Game Components\n\n- **Target Number**: The agreed-upon number that players aim to reach (e.g., 20).\n- **Current Number**: The number that players manipulate during their turns, starting at 1.\n- **Operations**: Allowed mathematical operations—addition and multiplication.\n- **Command-Line Interface**: All interactions occur through the command line; no physical components are required.\n\n---\n\n## Turns\n\n- **Turn Structure**:\n  - Players alternate turns throughout the game.\n  - On each turn, a player must perform **one** operation on the current number.\n\n- **Player Actions During a Turn**:\n  1. **Select an Operation**:\n     - **Addition**: Add an integer from **1 to 5** (inclusive) to the current number.\n     - **Multiplication**: Multiply the current number by **2** or **3**.\n  2. **Apply the Operation**:\n     - Update the current number with the result of the operation.\n     - Announce the new current number.\n  3. **End of Turn**:\n     - Check for a win condition.\n     - If the target number is reached, the game ends.\n     - If not, the turn passes to the other player.\n\n---\n\n## Rules and Mechanics\n\n1. **Allowed Operations**:\n\n   - **Addition**:\n     - You may add an integer between **1 and 5** to the current number.\n     - Example: If the current number is 7, you can choose to add 3 to make it 10.\n   - **Multiplication**:\n     - You may multiply the current number by **2** or **3**.\n     - Example: If the current number is 4, you can multiply by 2 to make it 8.\n\n2. **Operation Restrictions**:\n\n   - **No Exceeding the Target**:\n     - The result of your operation **must not exceed** the target number.\n     - If all possible operations would exceed the target, you **lose your turn**.\n   - **Valid Moves Only**:\n     - You must choose an operation that results in a number **less than or equal to** the target number.\n\n3. **Winning the Game**:\n\n   - **Exact Match**:\n     - The first player to make the current number **exactly equal** to the target number **wins the game**.\n   - **Forced Loss**:\n     - If a player **cannot perform any valid operation** on their turn (all operations would exceed the target number), they lose **their turn**, and play passes back to the other player.\n     - If **both players cannot make a move**, the **last player who increased** the current number **loses the game**.\n\n4. **No Draws**:\n\n   - The game cannot end in a draw. There will always be a winner based on the above rules.\n\n---\n\n## Scoring\n\n- **Victory Condition**:\n  - No points are tracked; victory is achieved by being the first to reach the target number according to the game rules.\n- **No Ongoing Score**:\n  - The game is a single-round match with a clear winner at the end.\n\n---\n\n## Examples\n\n### Example Game Play with Target Number 20\n\n#### Starting the Game:\n\n- **Target Number**: 20\n- **Current Number**: 1\n- **Player 1** and **Player 2** decide that Player 1 will start.\n\n#### Turn 1 - Player 1:\n\n- **Current Number**: 1\n- **Available Operations**:\n  - Add 1-5\n  - Multiply by 2 or 3\n- **Player 1's Choice**: Add 5\n- **Calculation**: 1 + 5 = 6\n- **New Current Number**: 6\n- **Announcement**: \"Player 1 adds 5. Current Number is now 6.\"\n\n#### Turn 2 - Player 2:\n\n- **Current Number**: 6\n- **Available Operations**:\n  - Add 1-5\n  - Multiply by 2 or 3\n- **Player 2's Choice**: Multiply by 3\n- **Calculation**: 6 * 3 = 18\n- **New Current Number**: 18\n- **Announcement**: \"Player 2 multiplies by 3. Current Number is now 18.\"\n\n#### Turn 3 - Player 1:\n\n- **Current Number**: 18\n- **Available Operations**:\n  - Add 1 or 2 (adding more would exceed 20)\n- **Player 1's Choice**: Add 2\n- **Calculation**: 18 + 2 = 20\n- **New Current Number**: 20\n- **Announcement**: \"Player 1 adds 2. Current Number is now 20.\"\n- **Result**: Player 1 has reached the target number and **wins the game**.\n\n---\n\n## Command-Line Interaction Sample\n\n### Game Start:\n\n```\nWelcome to Number Quest!\nTarget Number: 20\nCurrent Number: 1\nPlayer 1, it's your turn.\n```\n\n### Player 1's Turn:\n\n```\nCurrent Number: 1\nChoose an operation:\n1. Add (1-5)\n2. Multiply (2 or 3)\nEnter operation (add/multiply): add\nEnter number to add (1-5): 5\nPlayer 1 adds 5. Current Number is now 6.\n```\n\n### Player 2's Turn:\n\n```\nCurrent Number: 6\nChoose an operation:\n1. Add (1-5)\n2. Multiply (2 or 3)\nEnter operation (add/multiply): multiply\nEnter multiplier (2 or 3): 3\nPlayer 2 multiplies by 3. Current Number is now 18.\n```\n\n### Player 1's Winning Turn:\n\n```\nCurrent Number: 18\nChoose an operation:\n1. Add (1-5)\n2. Multiply (2 or 3)\nEnter operation (add/multiply): add\nEnter number to add (1-5): 2\nPlayer 1 adds 2. Current Number is now 20.\nCongratulations, Player 1! You've reached the target number and won the game!\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**: Consider how your move will affect the current number and the options available to your opponent.\n- **Control the Flow**: Try to force the current number into ranges that limit your opponent's valid moves.\n- **Calculate Outcomes**: Before making a move, think about the possible responses from your opponent and choose the operation that maximizes your chance of winning.\n- **Avoid Overstepping**: Be cautious not to increase the current number too rapidly if it might give your opponent a direct path to win.\n\n---\n\nEnjoy playing **Number Quest**, and may the best strategist win!",
    "# Sum Quest: Race to 23\n\n## Objective\n\nSum Quest is a two-player turn-based game where the primary goal is to be the first player to reach a cumulative sum of **exactly 23** without exceeding it. Players take turns adding numbers to a shared cumulative sum, strategically selecting numbers to reach the target while limiting the opponent's options.\n\n## Setup\n\n- **Cumulative Sum**: Start at **0**.\n- **Available Numbers**: Digits from **1** to **9**.\n- **Starting Player**: Decide who goes first (e.g., coin toss, mutual agreement).\n\n## Game Components\n\n- **Cumulative Sum**: A shared total that both players contribute to during their turns.\n- **Numbers (1-9)**: The digits players can select on their turns. Each number can be chosen multiple times throughout the game.\n\n## Turns\n\n- Players alternate turns.\n- **During a Turn**:\n  - **Number Selection**: Choose a number between **1** and **9**, excluding the number your opponent selected on their **immediate previous turn**.\n  - **Update Sum**: Add the chosen number to the cumulative sum.\n  - **Announce Move**: Declare the chosen number and the new cumulative sum.\n\n## Rules and Mechanics\n\n1. **Number Selection Constraints**:\n   - You **cannot** choose the number your opponent selected on their **previous turn**.\n   - All other numbers between **1** and **9** are available, even if previously used.\n\n2. **Cumulative Sum Limit**:\n   - The cumulative sum must not exceed **23**.\n   - Selecting a number that causes the sum to exceed **23** results in an **immediate loss**.\n\n3. **Winning the Game**:\n   - The first player to bring the cumulative sum to **exactly 23** **wins**.\n   - If a player cannot make a valid move (no legal numbers to choose without exceeding 23), they **lose**.\n\n## Scoring\n\n- **Victory**: Achieved by reaching a cumulative sum of exactly **23** on your turn.\n- **Defeat**: Occurs if:\n  - You exceed a cumulative sum of **23**.\n  - You have no valid numbers to choose without exceeding **23**.\n\n## Examples\n\n### Example Game Play\n\n**Starting Cumulative Sum**: 0\n\n**Player 1's Turn**:\n- Opponent's Last Number: N/A\n- **Choice**: 5\n- **Cumulative Sum**: 0 + 5 = **5**\n- **Announcement**: \"I choose 5. Sum is now 5.\"\n\n**Player 2's Turn**:\n- Opponent's Last Number: 5\n- **Unavailable Number**: 5\n- **Choice**: 7\n- **Cumulative Sum**: 5 + 7 = **12**\n- **Announcement**: \"I choose 7. Sum is now 12.\"\n\n**Player 1's Turn**:\n- Opponent's Last Number: 7\n- **Unavailable Number**: 7\n- **Choice**: 6\n- **Cumulative Sum**: 12 + 6 = **18**\n- **Announcement**: \"I choose 6. Sum is now 18.\"\n\n**Player 2's Turn**:\n- Opponent's Last Number: 6\n- **Unavailable Number**: 6\n- **Choices**: 1-5, 7-9 (excluding 6)\n- **Choice**: 5\n- **Cumulative Sum**: 18 + 5 = **23**\n- **Announcement**: \"I choose 5. Sum is now 23.\"\n- **Result**: **Player 2 Wins!**\n\n### Invalid Move Example\n\n**Cumulative Sum**: 22\n\n**Player 1's Turn**:\n- Opponent's Last Number: 1\n- **Unavailable Number**: 1\n- **Available Numbers**: 2-9 (excluding 1)\n- **Options**:\n  - Choosing **2** (22 + 2 = 24) **exceeds 23**.\n  - Choosing **1** is not allowed.\n- **Result**: Player 1 has no valid moves that won't exceed 23.\n- **Outcome**: **Player 1 Loses!**\n\n## Command-Line Interaction Example\n\n```\nSystem: The current sum is 12. Player 1, it's your turn. Your opponent's last number was 5. Choose a number between 1 and 9, excluding 5.\nPlayer 1 Input: 7\nSystem: Player 1 chooses 7. The cumulative sum is now 19.\n\nSystem: The current sum is 19. Player 2, it's your turn. Your opponent's last number was 7. Choose a number between 1 and 9, excluding 7.\nPlayer 2 Input: 4\nSystem: Player 2 chooses 4. The cumulative sum is now 23.\nSystem: Player 2 reaches 23 and wins the game!\n```\n\n## Strategic Tips\n\n- **Plan Ahead**: Anticipate which numbers will be unavailable on your next turn.\n- **Control Key Numbers**: Try to force your opponent into a position where they cannot win without exceeding 23.\n- **Avoid High Sums Early**: Keep the cumulative sum low to maintain more number options later.\n- **Track Used Numbers**: Remember which numbers have been recently played to inform your strategy.\n\n## Summary\n\nSum Quest: Race to 23 is a simple yet strategic game where players race to reach a cumulative sum of 23 without exceeding it. By carefully selecting numbers and anticipating the opponent's moves, skilled players can consistently outperform their opponents. The game is easy to code and perfect for a command-line interface, ensuring quick and engaging gameplay without the possibility of a draw.\n\n---\n\nEnjoy playing Sum Quest and may the best strategist win!",
    "# Equation Duel: Rule Book\n\n## Objective\n\nEquation Duel is a two-player, turn-based game where players compete to create the highest possible numerical result using a shared set of digits and mathematical operations. By strategically placing digits into an equation template, players aim to outscore their opponent. The primary goal is to construct an equation that yields a higher result than your opponent's equation. The player with the higher result at the end of the game wins.\n\n## Setup\n\n1. **Equation Templates**: Determine the equation templates to be used in the game. Each player uses the same template. For simplicity, the default template is:\n\n   ```\n   __ + __ × __\n   ```\n\n   This template has three slots for digits.\n\n2. **Digit Pool**: Create a shared pool of digits from 1 to 9. Each digit can only be used once across both players.\n\n3. **Starting Player**: Decide who will take the first turn. This can be done by a coin toss, random selection, or mutual agreement.\n\n4. **Scoreboard**: Prepare a way to track the digits selected by each player and the resulting equations (optional but helpful).\n\n## Game Components\n\n- **Digits (1-9)**: The game uses the digits 1 through 9. These are shared between players and are removed from the pool once selected.\n- **Equation Template**: A predefined mathematical expression with empty slots for digits. The default template is `__ + __ × __`.\n- **Turn Tracker**: Keeps track of whose turn it is.\n- **Results Calculator**: Calculates the numerical result of the completed equations.\n\n## Turns\n\n- Players alternate turns, starting with the player chosen during the setup phase.\n- On each turn, a player performs the following actions:\n  1. **Select a Digit**: Choose an available digit from the shared digit pool.\n  2. **Place the Digit**: Assign the selected digit to any empty slot in **either** player's equation template.\n- Turns continue until all slots in both players' equations are filled.\n\n## Rules and Mechanics\n\n1. **Digit Selection**:\n   - Players can select any remaining digit from 1 to 9 that has not yet been chosen.\n   - Each digit can only be used once in the entire game.\n\n2. **Digit Placement**:\n   - Players can place the selected digit into **any** empty slot in **either** player's equation.\n   - Once placed, a digit cannot be moved or replaced.\n\n3. **Equation Completion**:\n   - The game ends when all slots in both equations are filled.\n   - Each player will have an equation in the format `A + B × C`, where `A`, `B`, and `C` are digits from the digit pool.\n\n4. **Calculation Order**:\n   - Follow standard mathematical order of operations (PEMDAS/BODMAS):\n     - Multiplication before Addition.\n     - Example: In the equation `2 + 3 × 4`, calculate `3 × 4` first to get `12`, then add `2` to get a result of `14`.\n\n5. **Winning Conditions**:\n   - The player whose equation yields the higher numerical result wins the game.\n   - If both equations result in the same value, the game is won by the **second** player (the one who did not start the game). This incentivizes the first player to avoid a tie.\n\n## Scoring\n\n- **Equation Result**: The numerical result of each player's equation is their score.\n- **Victory Determination**:\n  - **Higher Score Wins**: The player with the higher result from their equation wins the game.\n  - **Tie-breaker**: In case of a tie, the second player is declared the winner.\n\n## Examples\n\n### Example Game Walkthrough\n\n#### Initial Setup\n\n- **Digit Pool**: 1, 2, 3, 4, 5, 6, 7, 8, 9\n- **Equation Template for Both Players**: `__ + __ × __`\n- **Starting Player**: Player 1\n\n#### Turn-by-Turn Play\n\n1. **Player 1's Turn**:\n   - **Selects Digit**: 9\n   - **Places Digit**: Puts `9` in their own equation's first slot.\n   - **Equation States**:\n     - *Player 1*: `9 + __ × __`\n     - *Player 2*: `__ + __ × __`\n   - **Remaining Digits**: 1, 2, 3, 4, 5, 6, 7, 8\n\n2. **Player 2's Turn**:\n   - **Selects Digit**: 8\n   - **Places Digit**: Puts `8` in their own equation's first slot.\n   - **Equation States**:\n     - *Player 1*: `9 + __ × __`\n     - *Player 2*: `8 + __ × __`\n   - **Remaining Digits**: 1, 2, 3, 4, 5, 6, 7\n\n3. **Player 1's Turn**:\n   - **Selects Digit**: 7\n   - **Places Digit**: Places `7` in **Player 2's** multiplication slot.\n   - **Equation States**:\n     - *Player 1*: `9 + __ × __`\n     - *Player 2*: `8 + __ × 7`\n   - **Remaining Digits**: 1, 2, 3, 4, 5, 6\n\n4. **Player 2's Turn**:\n   - **Selects Digit**: 6\n   - **Places Digit**: Places `6` in **Player 1's** multiplication slot.\n   - **Equation States**:\n     - *Player 1*: `9 + __ × 6`\n     - *Player 2*: `8 + __ × 7`\n   - **Remaining Digits**: 1, 2, 3, 4, 5\n\n5. **Player 1's Turn**:\n   - **Selects Digit**: 5\n   - **Places Digit**: Places `5` in their own equation's addition slot.\n   - **Equation States**:\n     - *Player 1*: `9 + 5 × 6`\n     - *Player 2*: `8 + __ × 7`\n   - **Remaining Digits**: 1, 2, 3, 4\n\n6. **Player 2's Turn**:\n   - **Selects Digit**: 4\n   - **Places Digit**: Places `4` in their own equation's addition slot.\n   - **Equation States**:\n     - *Player 1*: `9 + 5 × 6`\n     - *Player 2*: `8 + 4 × 7`\n   - **Remaining Digits**: 1, 2, 3\n\n7. **Player 1's Turn**:\n   - **Selects Digit**: 3\n   - **Places Digit**: Places `3` in **Player 2's** multiplication slot (already filled). Since all slots are filled in both equations, the game moves to scoring.\n   - **Equation States**:\n     - *Player 1*: `9 + 5 × 6`\n     - *Player 2*: `8 + 4 × 7` (unchanged)\n   - **Remaining Digits**: 1, 2\n\n#### Calculation and Result\n\n- **Player 1's Equation**: `9 + 5 × 6`\n  - Calculate multiplication first: `5 × 6 = 30`\n  - Add: `9 + 30 = 39`\n- **Player 2's Equation**: `8 + 4 × 7`\n  - Calculate multiplication first: `4 × 7 = 28`\n  - Add: `8 + 28 = 36`\n\n- **Winner**: **Player 1**, because `39` (Player 1) > `36` (Player 2).\n\n### Sample Command-Line Interaction\n\n```\nWelcome to Equation Duel!\nAvailable digits: 1 2 3 4 5 6 7 8 9\n\nPlayer 1's equation: __ + __ × __\nPlayer 2's equation: __ + __ × __\n\nPlayer 1, it's your turn.\nAvailable digits: 1 2 3 4 5 6 7 8 9\nSelect a digit: 9\nChoose a slot to place the digit (e.g., P1 Slot 1, P2 Slot 2): P1 Slot 1\n\nPlayer 1's equation: 9 + __ × __\nPlayer 2's equation: __ + __ × __\n\nPlayer 2, it's your turn.\nAvailable digits: 1 2 3 4 5 6 7 8\nSelect a digit: 8\nChoose a slot to place the digit: P2 Slot 1\n\nPlayer 1's equation: 9 + __ × __\nPlayer 2's equation: 8 + __ × __\n\nPlayer 1, it's your turn.\nAvailable digits: 1 2 3 4 5 6 7\nSelect a digit: 7\nChoose a slot to place the digit: P2 Slot 3\n\nPlayer 1's equation: 9 + __ × __\nPlayer 2's equation: 8 + __ × 7\n\n...\n\n[Turns continue until all slots are filled]\n\nCalculating results...\nPlayer 1's result: 39\nPlayer 2's result: 36\n\nPlayer 1 wins!\n```\n\n## Additional Rules and Variations\n\n- **Equation Templates**:\n  - Players may agree to use different templates to increase variety and strategic depth. Examples include:\n    - `(__ + __) × __`\n    - `__ × __ - __`\n    - `__ × (__ + __)`\n  - Ensure both players use the same template.\n\n- **Advanced Digit Pool**:\n  - Include digits 0 through 9 for more options.\n  - Allow each digit to be used twice for longer equations.\n\n- **Operations**:\n  - Introduce additional operations such as division (`÷`) and subtraction (`-`).\n  - Be cautious of division by zero. Establish rules to handle invalid equations.\n\n- **Scoring Multiple Rounds**:\n  - Play multiple rounds, keeping a cumulative score.\n  - The first player to win a set number of rounds wins the match.\n\n- **Time Limits**:\n  - Implement a time limit per turn to increase the challenge.\n\n## Strategy Tips\n\n- **Blocking**:\n  - Place low digits in your opponent's high-impact slots (e.g., the multiplier) to lower their potential result.\n- **Maximizing Your Equation**:\n  - Save high digits for your own high-impact slots.\n  - Plan ahead to ensure you have the digits you need for your equation.\n- **Digit Denial**:\n  - Select digits your opponent may need, even if they don't immediately benefit you.\n- **Equation Balance**:\n  - Consider the impact of each slot. In `__ + __ × __`, the multiplication slot has a greater impact on the final result due to the order of operations.\n\n## Conclusion\n\nEquation Duel combines numerical strategy with competitive gameplay, offering depth and replayability in a simple, easy-to-code format suitable for a command-line interface. By carefully selecting and placing digits, players can outmaneuver their opponent and achieve victory through higher mathematical prowess.\n\nGood luck, and may the best mathematician win!",
    "# Function Duel\n\n## Objective\n\nBe the first player to reach or exceed the target number **100** by strategically applying mathematical functions to a running total. Use addition and multiplication wisely to outmaneuver your opponent and achieve victory.\n\n## Setup\n\n1. **Starting Number**: The game begins with a **current number** set to **1**.\n2. **Target Number**: The goal is to be the first to reach or exceed **100**.\n3. **Players**: Two players compete against each other.\n\n## Game Components\n\n- **Current Number**: A shared number that players manipulate on their turns. It starts at **1** and changes as players apply functions.\n- **Functions**:\n  - **Add 3**: Increases the current number by **3**.\n  - **Multiply by 2**: Multiplies the current number by **2**.\n\n## Turns\n\n- Players alternate turns, starting with Player 1.\n- **On a player's turn**:\n  - Choose one of the two functions (**Add 3** or **Multiply by 2**) to apply to the current number.\n  - Update the current number with the result of the function.\n  - Announce the chosen function and the new current number.\n- **Function Usage Constraint**:\n  - A player cannot use the same function more than **two times in a row**.\n    - After using a function twice consecutively, the player **must** use the other function on their next turn.\n\n## Rules and Mechanics\n\n1. **Applying Functions**:\n   - Only the specified functions (**Add 3** or **Multiply by 2**) can be used.\n   - Functions are applied to the current number to generate a new current number.\n2. **Function Usage Limitation**:\n   - Track your function usage to avoid exceeding the two-in-a-row limit.\n   - Failure to switch functions when required results in forfeiting your turn.\n3. **Winning the Game**:\n   - The first player to reach a current number of **100** or more wins the game.\n   - If a function application causes the current number to exceed **100**, the game still ends with that player winning.\n4. **Strategic Considerations**:\n   - Plan ahead to force your opponent into a position where they must increase the current number to your advantage.\n   - Balance between quick advancements and setting traps for your opponent.\n\n## Scoring\n\n- **Victory**: The game does not use a point system. Winning is achieved by reaching or exceeding the target number **100** first.\n\n## Examples\n\n### Example Game Play\n\n**Initial State**:\n- Current Number: 1\n\n**Turn Sequence**:\n\n1. **Player 1's Turn**:\n   - Chooses to **Multiply by 2**.\n   - Current Number: \\(1 \\times 2 = 2\\).\n   - Announces: \"Multiplied by 2; Current number is 2.\"\n\n2. **Player 2's Turn**:\n   - Chooses to **Add 3**.\n   - Current Number: \\(2 + 3 = 5\\).\n   - Announces: \"Added 3; Current number is 5.\"\n\n3. **Player 1's Turn**:\n   - Chooses to **Multiply by 2** (second consecutive use).\n   - Current Number: \\(5 \\times 2 = 10\\).\n   - Announces: \"Multiplied by 2; Current number is 10.\"\n   - Note: Player 1 has used \"Multiply by 2\" twice in a row and must use \"Add 3\" on their next turn.\n\n4. **Player 2's Turn**:\n   - Chooses to **Multiply by 2**.\n   - Current Number: \\(10 \\times 2 = 20\\).\n   - Announces: \"Multiplied by 2; Current number is 20.\"\n\n5. **Player 1's Turn**:\n   - Must use **Add 3** due to function usage constraint.\n   - Current Number: \\(20 + 3 = 23\\).\n   - Announces: \"Added 3; Current number is 23.\"\n\n6. **Player 2's Turn**:\n   - Chooses to **Add 3**.\n   - Current Number: \\(23 + 3 = 26\\).\n   - Announces: \"Added 3; Current number is 26.\"\n   - Note: Player 2 has now used \"Add 3\" once.\n\n7. **Player 1's Turn**:\n   - Function usage has reset; can choose any function.\n   - Chooses to **Multiply by 2**.\n   - Current Number: \\(26 \\times 2 = 52\\).\n   - Announces: \"Multiplied by 2; Current number is 52.\"\n\n8. **Player 2's Turn**:\n   - Chooses to **Add 3** (second consecutive use).\n   - Current Number: \\(52 + 3 = 55\\).\n   - Announces: \"Added 3; Current number is 55.\"\n   - Note: Player 2 must use \"Multiply by 2\" on their next turn.\n\n9. **Player 1's Turn**:\n   - Chooses to **Multiply by 2** (second consecutive use).\n   - Current Number: \\(55 \\times 2 = 110\\).\n   - Announces: \"Multiplied by 2; Current number is 110.\"\n   - **Player 1 wins** as the current number has reached 100 or more.\n\n### Command-Line Interaction Sample\n\nAssuming a simple command-line interface where players input their choices:\n\n```\nCurrent Number: 1\n\nPlayer 1, choose your function:\n1. Add 3\n2. Multiply by 2\n> 2\nPlayer 1 multiplied by 2.\nCurrent Number is now 2.\n\nPlayer 2, choose your function:\n1. Add 3\n2. Multiply by 2\n> 1\nPlayer 2 added 3.\nCurrent Number is now 5.\n\nPlayer 1, choose your function:\n1. Add 3\n2. Multiply by 2\n> 2\nPlayer 1 multiplied by 2.\nCurrent Number is now 10.\n\n(Note: Player 1 has used 'Multiply by 2' twice in a row and must use 'Add 3' next turn.)\n\nPlayer 2, choose your function:\n1. Add 3\n2. Multiply by 2\n> 2\nPlayer 2 multiplied by 2.\nCurrent Number is now 20.\n\nPlayer 1, you must use 'Add 3' this turn.\n> 1\nPlayer 1 added 3.\nCurrent Number is now 23.\n\n...\n\nPlayer 1 multiplied by 2.\nCurrent Number is now 110.\nPlayer 1 wins!\n```\n\n## Tips for Players\n\n- **Monitor Function Usage**: Keep track of both your own and your opponent's function usage to anticipate their next move.\n- **Plan Ahead**: Look several moves ahead to set up opportunities to force your opponent into a disadvantageous position.\n- **Balance Aggression and Caution**: Rapidly increasing the current number might seem advantageous but can backfire if it gives your opponent the chance to win.\n\n## Conclusion\n\nFunction Duel is a game of simple rules but deep strategic potential. By carefully choosing when to add or multiply, and by keeping track of function usage constraints, players can develop winning strategies. The game's simplicity makes it easy to code and perfect for command-line interfaces, while its strategic depth ensures that skillful play is rewarded.\n\nEnjoy the challenge and may the best mathematician win!",
    "# Accumulator\n\n## Objective\n\nAccumulator is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to be the first player to reach **exactly** the target total by adding numbers to a shared running total without exceeding it. Strategic selection of numbers and foresight are key to victory.\n\n---\n\n## Setup\n\n1. **Target Total**: Decide on a target total that players will aim to reach. For a quick game, a target total of **23** is recommended.\n\n2. **Starting Player**: Determine who will start first. This can be decided randomly or by mutual agreement.\n\n---\n\n## Game Components\n\n- **Numbers Available**: Integers from **1** to **9**.\n  - Players will use these numbers to increment the running total.\n  - Numbers can be reused any number of times by either player.\n\n- **Running Total**: A shared cumulative total that starts at **0**.\n  - This total increases as players add numbers during their turns.\n  - The running total must not exceed the target total.\n\n---\n\n## Turns\n\n- Players alternate turns throughout the game.\n- **Turn Structure**:\n  1. **Input**: The current player selects a number between **1** and **9**.\n  2. **Validation**: Ensure the chosen number does not cause the running total to exceed the target total.\n  3. **Update**: Add the chosen number to the running total.\n  4. **Display**: Show the updated running total to both players.\n  5. **Check for Win/Loss**: Determine if the game has been won or lost.\n\n---\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - On your turn, choose any integer between **1** and **9** (inclusive).\n   - Numbers can be reused; there are infinite supplies of each number.\n\n2. **Updating the Running Total**:\n   - Add your chosen number to the running total.\n   - If the running total equals the target total after your addition, you **win**.\n   - If the running total exceeds the target total, you **lose** immediately.\n\n3. **Strategic Play**:\n   - Anticipate future moves to force your opponent into a losing position.\n   - Keep track of the running total to plan your moves accordingly.\n\n---\n\n## Scoring\n\n- **Winning the Game**:\n  - Achieved by making the running total **exactly equal** to the target total on your turn.\n  \n- **Losing the Game**:\n  - Occurs if your chosen number causes the running total to **exceed** the target total.\n\n- There are no points; the game is a win-or-lose format.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Target Total**: 23\n\n1. **Starting the Game**:\n   - Running Total: 0\n   - Player 1 begins.\n\n2. **Player 1's Turn**:\n   - Chooses **5**.\n   - Running Total: 0 + 5 = **5**.\n\n3. **Player 2's Turn**:\n   - Chooses **3**.\n   - Running Total: 5 + 3 = **8**.\n\n4. **Player 1's Turn**:\n   - Chooses **7**.\n   - Running Total: 8 + 7 = **15**.\n\n5. **Player 2's Turn**:\n   - Chooses **5**.\n   - Running Total: 15 + 5 = **20**.\n\n6. **Player 1's Turn**:\n   - Chooses **3**.\n   - Running Total: 20 + 3 = **23**.\n\n   **Player 1 wins!**\n\n### Command-Line Interaction Sample\n\n```\nTarget Total is 23.\nRunning Total: 0\n\nPlayer 1's turn.\nChoose a number (1-9): 5\nYou chose 5.\nRunning Total: 5\n\nPlayer 2's turn.\nChoose a number (1-9): 3\nYou chose 3.\nRunning Total: 8\n\nPlayer 1's turn.\nChoose a number (1-9): 7\nYou chose 7.\nRunning Total: 15\n\nPlayer 2's turn.\nChoose a number (1-9): 5\nYou chose 5.\nRunning Total: 20\n\nPlayer 1's turn.\nChoose a number (1-9): 3\nYou chose 3.\nRunning Total: 23\n\nCongratulations! Player 1 wins!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**: Try to think several moves in advance to control the flow of the game.\n- **Control the Running Total**: Aim to reach cumulative totals that force your opponent into a position where any move they make could cause them to lose.\n- **Key Numbers**: Be aware of key running totals. For example, whatever total you want to force your opponent into, make sure you reach a cumulative total that is one less than a multiple of the number of options plus the target total.\n\n---\n\n## Summary\n\nAccumulator is a simple yet strategic game that requires players to carefully select numbers to reach a target total. With easy-to-understand rules and quick gameplay, it offers an engaging experience where skill and strategy determine the winner.\n\n---\n\nEnjoy the game and may the best strategist win!",
    "# Numbers War - Rule Book\n\n## Objective\n\n**Numbers War** is a strategic two-player turn-based game where players compete to accumulate the highest total score by selecting numbers from a shared list. The primary goal is to outscore your opponent by carefully choosing numbers and anticipating their moves. The player with the highest total at the end of the game wins.\n\n---\n\n## Setup\n\n1. **Number List Creation**:\n   - Use a predefined sequence of integers, typically numbers from `1` to `9`.\n   - Shuffle the numbers randomly to create an unpredictable arrangement.\n   - Example Starting List: `[3, 9, 1, 2, 4, 8]`.\n\n2. **Game Display**:\n   - Present the shuffled list in a single horizontal line visible to both players.\n   - Establish clear labels for the leftmost and rightmost ends.\n\n3. **Determine First Player**:\n   - Decide who takes the first turn through mutual agreement or a random method (e.g., coin toss).\n\n4. **Player Areas**:\n   - Each player has their own collection area to store the numbers they select during the game.\n\n---\n\n## Game Components\n\n- **Number List**:\n  - A central list of numbers shared between both players.\n  - Example: `[3, 9, 1, 2, 4, 8]`.\n\n- **Player Collections**:\n  - Individual areas (could be simply a list) where each player keeps their selected numbers.\n  - Initially empty for both players.\n\n- **Command-Line Interface**:\n  - The game is played through text-based commands.\n  - Prompts and messages guide the players through their turns.\n\n---\n\n## Turns\n\n- **Turn Structure**:\n  - Players take turns alternately.\n  - On each turn, a player must perform the following actions:\n    1. **Review Choices**:\n       - Observe the current number list and identify the leftmost and rightmost numbers available.\n    2. **Select a Number**:\n       - Choose **either** the leftmost **or** the rightmost number from the list.\n    3. **Update Collections**:\n       - Add the selected number to your personal collection.\n    4. **Update Number List**:\n       - Remove the selected number from the number list.\n\n- **Turn Progression**:\n  - The turn ends after a player has selected and removed a number.\n  - The next player then takes their turn following the same steps.\n\n---\n\n## Rules and Mechanics\n\n1. **Number Selection Rules**:\n   - Players may only choose from the two numbers at the ends of the number list.\n   - Skipping or selecting numbers from the middle of the list is not allowed.\n\n2. **Game Progression**:\n   - The game continues until all numbers have been selected and the number list is empty.\n   - Each player will have selected the same number of numbers by the end.\n\n3. **Strategic Considerations**:\n   - Players must anticipate future moves and consider the potential choices left for their opponent.\n   - Timing and selection can influence the final outcome significantly.\n\n4. **No Draw Mechanism**:\n   - In the event of a tie in total scores, the last player to have taken a number is declared the winner.\n   - This ensures that every game has a decisive outcome.\n\n---\n\n## Scoring\n\n- **Calculating Scores**:\n  - At the end of the game, each player sums the numbers in their collection.\n  - Example:\n    - **Player 1's Collection**: `[8, 3, 2]` → Total Score: `13`.\n    - **Player 2's Collection**: `[4, 9, 1]` → Total Score: `14`.\n\n- **Determining the Winner**:\n  - The player with the higher total score wins the game.\n  - If totals are equal, the player who made the last move wins.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Initial Number List**: `[3, 9, 1, 2, 4, 8]`\n\n**Turn-by-Turn Breakdown**:\n\n1. **Turn 1 - Player 1**:\n   - **Choices**: `Left - 3`, `Right - 8`.\n   - **Decision**: Chooses `8` (Right).\n   - **Player 1's Collection**: `[8]`.\n   - **Updated Number List**: `[3, 9, 1, 2, 4]`.\n\n2. **Turn 2 - Player 2**:\n   - **Choices**: `Left - 3`, `Right - 4`.\n   - **Decision**: Chooses `4` (Right).\n   - **Player 2's Collection**: `[4]`.\n   - **Updated Number List**: `[3, 9, 1, 2]`.\n\n3. **Turn 3 - Player 1**:\n   - **Choices**: `Left - 3`, `Right - 2`.\n   - **Decision**: Chooses `3` (Left).\n   - **Player 1's Collection**: `[8, 3]`.\n   - **Updated Number List**: `[9, 1, 2]`.\n\n4. **Turn 4 - Player 2**:\n   - **Choices**: `Left - 9`, `Right - 2`.\n   - **Decision**: Chooses `9` (Left).\n   - **Player 2's Collection**: `[4, 9]`.\n   - **Updated Number List**: `[1, 2]`.\n\n5. **Turn 5 - Player 1**:\n   - **Choices**: `Left - 1`, `Right - 2`.\n   - **Decision**: Chooses `2` (Right).\n   - **Player 1's Collection**: `[8, 3, 2]`.\n   - **Updated Number List**: `[1]`.\n\n6. **Turn 6 - Player 2**:\n   - **Only Choice**: `1`.\n   - **Decision**: Chooses `1`.\n   - **Player 2's Collection**: `[4, 9, 1]`.\n   - **Number List**: `[]` (Empty).\n\n**Final Scores**:\n\n- **Player 1**: `8 + 3 + 2 = 13`.\n- **Player 2**: `4 + 9 + 1 = 14`.\n\n**Winner**: **Player 2** wins with a total score of `14`.\n\n---\n\n### Command-Line Interaction Example\n\n```\nGame Start!\nNumber List: [3, 9, 1, 2, 4, 8]\n\nPlayer 1's Turn:\nAvailable choices - Left: 3, Right: 8\nEnter 'L' to pick the left number or 'R' to pick the right number: R\nYou picked 8.\nPlayer 1's Collection: [8]\nUpdated Number List: [3, 9, 1, 2, 4]\n\nPlayer 2's Turn:\nAvailable choices - Left: 3, Right: 4\nEnter 'L' to pick the left number or 'R' to pick the right number: R\nYou picked 4.\nPlayer 2's Collection: [4]\nUpdated Number List: [3, 9, 1, 2]\n\nPlayer 1's Turn:\nAvailable choices - Left: 3, Right: 2\nEnter 'L' to pick the left number or 'R' to pick the right number: L\nYou picked 3.\nPlayer 1's Collection: [8, 3]\nUpdated Number List: [9, 1, 2]\n\nPlayer 2's Turn:\nAvailable choices - Left: 9, Right: 2\nEnter 'L' to pick the left number or 'R' to pick the right number: L\nYou picked 9.\nPlayer 2's Collection: [4, 9]\nUpdated Number List: [1, 2]\n\nPlayer 1's Turn:\nAvailable choices - Left: 1, Right: 2\nEnter 'L' to pick the left number or 'R' to pick the right number: R\nYou picked 2.\nPlayer 1's Collection: [8, 3, 2]\nUpdated Number List: [1]\n\nPlayer 2's Turn:\nOnly one choice available.\nYou picked 1.\nPlayer 2's Collection: [4, 9, 1]\nNumber List is now empty.\n\nCalculating final scores...\nPlayer 1's Total Score: 13\nPlayer 2's Total Score: 14\n\nPlayer 2 wins the game!\n```\n\n---\n\n## Ensure Fair Play and Strategy\n\n- Players should not reveal their strategies or intended future moves.\n- Consider the implications of each selection, not just the immediate gain.\n- Pay attention to the remaining numbers to anticipate the opponent's options.\n\n---\n\n## Conclusion\n\n**Numbers War** is a unique and engaging game that combines simplicity with strategic depth. Its straightforward mechanics make it easy to code and play within a command-line interface. The game progresses quickly, with a clear winner determined at the end, ensuring an enjoyable and competitive experience where skillful play is rewarded.\n\nBy carefully selecting numbers and anticipating the opponent's moves, a skilled player can consistently outperform an unskilled one. The absence of a draw mechanism guarantees that every game reaches a decisive conclusion, adding to the competitive thrill.\n\nEnjoy battling it out in the **Numbers War**!",
    "# Number Line Duel Rule Book\n\n## Objective\n\n**Number Line Duel** is a strategic two-player game where the primary goal is to force your opponent into a position where they cannot make a valid move. Players take turns crossing out numbers on a shared number line. The player who makes the last valid move wins the game.\n\n---\n\n## Setup\n\n1. **Number Line Creation**:\n   - The game is played with a number line containing the integers from **1 to 10**, arranged sequentially.\n   - Initially, none of the numbers are crossed out.\n\n2. **Player Assignment**:\n   - Two players are needed: **Player 1** and **Player 2**.\n   - Decide who will be Player 1 and Player 2 (e.g., by coin toss or mutual agreement).\n\n3. **Starting the Game**:\n   - The game begins with Player 1 taking the first turn.\n\n---\n\n## Game Components\n\n1. **Number Line**:\n   - A shared linear arrangement of numbers from **1** to **10**.\n   - Example of the initial number line:\n\n     ```\n     1 2 3 4 5 6 7 8 9 10\n     ```\n\n2. **Markers**:\n   - A way to indicate crossed-out numbers (e.g., replacing the number with an `X` or enclosing it in brackets).\n\n3. **Players**:\n   - **Player 1** and **Player 2**, who will alternate turns.\n\n4. **Interface**:\n   - A command-line interface where players input their moves and see the updated number line after each turn.\n\n---\n\n## Turns\n\n1. **Turn Order**:\n   - Players alternate turns starting with **Player 1**.\n\n2. **Player Actions**:\n   - On their turn, a player must perform one of the following actions:\n     - **Cross out one single number**.\n     - **Cross out two consecutive numbers** (numbers that are next to each other on the number line and neither is crossed out).\n\n3. **Move Input**:\n   - Players input the number or numbers they wish to cross out.\n   - Input should be in the form of the number(s), e.g., `5` or `5 6`.\n\n4. **Validation**:\n   - The game validates the player's input to ensure the move is legal according to the game rules.\n\n5. **Turn Completion**:\n   - After a valid move, the game updates the number line and displays it to both players.\n   - If a player cannot make a valid move on their turn, the game ends.\n\n---\n\n## Rules and Mechanics\n\n1. **Crossing Out Numbers**:\n   - **Single Number**:\n     - A player may cross out any **one** number that is not already crossed out.\n   - **Two Consecutive Numbers**:\n     - A player may cross out any **two numbers** that are adjacent on the number line, provided neither number is already crossed out.\n     - Consecutive numbers are numbers that are next to each other in the sequence (e.g., `3` and `4`).\n\n2. **Valid Moves**:\n   - A move is valid if:\n     - At least one number is crossed out.\n     - For crossing out two numbers, they must be consecutive and both unmarked.\n   - Players **must** make a valid move if possible; skipping a turn is not allowed.\n\n3. **Winning Condition**:\n   - The game ends when a player cannot make any valid move on their turn.\n   - The player who made the **last valid move** wins the game.\n\n4. **Illegal Moves**:\n   - Attempting to cross out numbers that are already crossed out.\n   - Attempting to cross out two numbers that are not consecutive.\n   - If an illegal move is attempted, the player will be prompted to try again.\n\n---\n\n## Scoring\n\n- **Winning the Game**:\n  - The player who forces their opponent into a position with no valid moves is declared the **winner**.\n- **No Point System**:\n  - There is no point accumulation; the game outcome is a win or loss.\n- **Game End**:\n  - The game ends immediately when a player cannot make a valid move.\n\n---\n\n## Examples\n\n### Example Scenario\n\n**Initial Number Line**:\n\n```\n1 2 3 4 5 6 7 8 9 10\n```\n\n**Gameplay**:\n\n1. **Turn 1 - Player 1**:\n   - Player 1 decides to cross out numbers **5** and **6**.\n   - Numbers 5 and 6 are consecutive and unmarked.\n   - **Updated Number Line**:\n\n     ```\n     1 2 3 4 X X 7 8 9 10\n     ```\n\n2. **Turn 2 - Player 2**:\n   - Player 2 crosses out number **8**.\n   - **Updated Number Line**:\n\n     ```\n     1 2 3 4 X X 7 X 9 10\n     ```\n\n3. **Turn 3 - Player 1**:\n   - Player 1 crosses out numbers **9** and **10**.\n   - **Updated Number Line**:\n\n     ```\n     1 2 3 4 X X 7 X X X\n     ```\n\n4. **Turn 4 - Player 2**:\n   - Player 2 crosses out numbers **1** and **2**.\n   - **Updated Number Line**:\n\n     ```\n     X X 3 4 X X 7 X X X\n     ```\n\n5. **Turn 5 - Player 1**:\n   - Player 1 crosses out number **3**.\n   - **Updated Number Line**:\n\n     ```\n     X X X 4 X X 7 X X X\n     ```\n\n6. **Turn 6 - Player 2**:\n   - Player 2 crosses out number **4**.\n   - **Updated Number Line**:\n\n     ```\n     X X X X X X 7 X X X\n     ```\n\n7. **Turn 7 - Player 1**:\n   - Player 1 crosses out number **7**.\n   - **Updated Number Line**:\n\n     ```\n     X X X X X X X X X X\n     ```\n\n8. **Game End**:\n   - All numbers are crossed out.\n   - Player 1 made the last valid move.\n   - **Player 1 wins the game**.\n\n### Command-Line Interaction Example\n\nBelow is how a sample game might look in a command-line interface.\n\n**Game Start**:\n\n```\nWelcome to Number Line Duel!\nNumber Line: 1 2 3 4 5 6 7 8 9 10\n\nPlayer 1's turn.\nEnter numbers to cross out (e.g., '5' or '5 6'):\n```\n\n**Player 1 Enters**:\n\n```\n5 6\n```\n\n**System Response**:\n\n```\nPlayer 1 crossed out: 5 6\nUpdated Number Line: 1 2 3 4 X X 7 8 9 10\n\nPlayer 2's turn.\nEnter numbers to cross out:\n```\n\n**Player 2 Enters**:\n\n```\n8\n```\n\n**System Response**:\n\n```\nPlayer 2 crossed out: 8\nUpdated Number Line: 1 2 3 4 X X 7 X 9 10\n\nPlayer 1's turn.\nEnter numbers to cross out:\n```\n\n*...and so on until the game concludes as in the example above.*\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**: Think about the consequences of your moves on future turns.\n- **Control Key Numbers**: Crossing out numbers that limit your opponent's options can be advantageous.\n- **Force Moves**: Try to force your opponent into a position where only one move is available.\n- **Pay Attention**: Always be aware of the remaining numbers and possible consecutive pairs.\n\n---\n\nEnjoy playing **Number Line Duel**! May the best strategist win.",
    "# Number Stack Attack Rule Book\n\n## Objective\n\n**Number Stack Attack** is a strategic two-player, turn-based game where players compete to be the first to reach a stack total of exactly **21** without exceeding it. Players take turns adding numbered tokens to their personal stack, planning their moves carefully to achieve the target total while preventing their opponent from doing the same.\n\n## Setup\n\n1. **Game Start**: Determine which player goes first (Player 1 and Player 2). This can be decided randomly or by mutual agreement.\n2. **Stacks**: Each player begins with an empty stack.\n3. **Number Tokens**: A shared pool of number tokens ranging from **1** to **9** is available. Each number token is available in unlimited quantity, so players do not need to worry about depleting a particular number.\n\n## Game Components\n\n- **Number Tokens (1-9)**:\n  - Each token displays a number from **1** to **9**.\n  - Tokens are identical except for their numeric value.\n  - Tokens have no special attributes beyond their number.\n\n- **Player Stacks**:\n  - Each player has their own stack where they place number tokens during the game.\n  - The stack total is the sum of all numbers in the player's stack.\n\n- **Command-Line Interface**:\n  - Players interact with the game via text inputs and outputs in the command-line interface.\n  - The interface displays the current stack totals, available numbers, and prompts for player actions.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with Player 1.\n- **Player Actions**:\n  - On their turn, a player must select one number token from **1** to **9** and add it to their stack.\n  - Players input their chosen number via the command-line interface.\n- **Turn Progression**:\n  - After a player adds a number to their stack, the turn passes to the other player.\n  - The game continues until a win condition is met.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Adding Numbers**:\n   - Players can choose any number from **1** to **9** on their turn.\n   - Numbers are not depleted; each number can be chosen multiple times by both players.\n\n2. **Stack Total**:\n   - A player's stack total is the sum of all numbers in their stack.\n   - Players must ensure their stack total does not exceed **21**.\n   - If adding a number would cause the stack total to exceed **21**, the player must skip their turn.\n\n3. **Winning the Game**:\n   - **Exact Total Victory**: The first player to reach a stack total of exactly **21** wins the game.\n   - **Stand Off Victory**:\n     - If both players are unable to make a move without exceeding **21**, the player with the stack total closest to **21** wins.\n     - If both players have the same total, the player who reached that total first wins.\n\n4. **Forced Pass**:\n   - If a player cannot add any number without exceeding **21**, they must pass their turn.\n   - The opposing player continues to take turns if they can make legal moves.\n\n### Strategic Considerations\n\n- **Planning Ahead**:\n  - Players should anticipate how their number selections affect future turns.\n  - Consideration of both players' stack totals is crucial.\n\n- **Defensive Play**:\n  - Players can choose numbers that limit the opponent's options on their next turn.\n  - For example, leaving the opponent with only numbers that would cause them to exceed **21**.\n\n- **Risk Management**:\n  - Balancing the desire to reach **21** quickly against the risk of limiting one's own future options is key.\n\n## Scoring\n\n- **No Point System**:\n  - The game does not use a point system.\n  - Victory is achieved by meeting the win conditions outlined above.\n\n- **Victory Conditions**:\n  - **Primary Victory**: Reaching a stack total of exactly **21**.\n  - **Secondary Victory**: Having the highest stack total below **21** when both players cannot make a legal move.\n\n## Examples\n\n### Example Scenario\n\n**Initial State**:\n- Player 1 Stack Total: 0\n- Player 2 Stack Total: 0\n- Available Numbers: 1-9 (unlimited supply)\n\n---\n\n**Turn 1 - Player 1**:\n- Chooses number **9**.\n- Player 1 Stack Total: 9\n\n**Command-Line Interaction**:\n```\nPlayer 1 Turn:\nYour current stack total is 0.\nEnter a number between 1 and 9 to add to your stack: 9\nYou added 9 to your stack.\nYour new stack total is 9.\n```\n\n---\n\n**Turn 2 - Player 2**:\n- Chooses number **8**.\n- Player 2 Stack Total: 8\n\n**Command-Line Interaction**:\n```\nPlayer 2 Turn:\nYour current stack total is 0.\nEnter a number between 1 and 9 to add to your stack: 8\nYou added 8 to your stack.\nYour new stack total is 8.\n```\n\n---\n\n**Turn 3 - Player 1**:\n- Chooses number **7**.\n- Player 1 Stack Total: 16 (9 + 7)\n\n**Command-Line Interaction**:\n```\nPlayer 1 Turn:\nYour current stack total is 9.\nEnter a number between 1 and 9 to add to your stack: 7\nYou added 7 to your stack.\nYour new stack total is 16.\n```\n\n---\n\n**Turn 4 - Player 2**:\n- Chooses number **9**.\n- Player 2 Stack Total: 17 (8 + 9)\n\n**Command-Line Interaction**:\n```\nPlayer 2 Turn:\nYour current stack total is 8.\nEnter a number between 1 and 9 to add to your stack: 9\nYou added 9 to your stack.\nYour new stack total is 17.\n```\n\n---\n\n**Turn 5 - Player 1**:\n- Must choose a number that does not cause the stack total to exceed **21**.\n- Options are numbers **1** to **5** (since 16 + 6 = 22).\n- Chooses number **5**.\n- Player 1 Stack Total: 21 (16 + 5)\n- Player 1 wins by reaching **21** exactly.\n\n**Command-Line Interaction**:\n```\nPlayer 1 Turn:\nYour current stack total is 16.\nEnter a number between 1 and 5 to add to your stack: 5\nYou added 5 to your stack.\nYour new stack total is 21.\nCongratulations, you have reached 21 and won the game!\n```\n\n---\n\n**Game End**:\n- Player 1 wins.\n- Player 2 had a stack total of 17.\n\n## Additional Examples\n\n### Scenario Where Both Players Must Pass\n\n**Late Game State**:\n- Player 1 Stack Total: 19\n- Player 2 Stack Total: 18\n\n**Player 1 Turn**:\n- Cannot add numbers **1** to **9** without exceeding **21**.\n- Must pass.\n\n**Player 2 Turn**:\n- Only number **1** can be added without exceeding **21** (18 + 1 = 19).\n- Chooses number **1**.\n- Player 2 Stack Total: 19\n\n**Player 1 Turn**:\n- Stack Total: 19\n- Cannot add any number without exceeding **21**.\n- Must pass.\n\n**Player 2 Turn**:\n- Stack Total: 19\n- Cannot add any number without exceeding **21**.\n- Must pass.\n\n**Result**:\n- Both players cannot make a move.\n- Both players have a stack total of **19**.\n- Player 2 wins because they reached **19** after Player 1, and in the case of a tie, the player who achieved the highest total first loses.\n\n## Strategies\n\n- **Monitor Both Stacks**: Keep track of not only your own stack total but also your opponent's. This awareness allows you to make informed decisions that can limit your opponent's options.\n\n- **Control the Pace**: By choosing certain numbers, you can control the progression of both stack totals, potentially forcing your opponent into a position where they cannot make a legal move.\n\n- **Avoid Early High Totals**: Jumping to a high stack total early in the game can limit your options in later turns. Balance your number selections to maintain flexibility.\n\n- **Force a Pass**: Aim to leave your opponent in a position where any available number would cause them to exceed **21**, forcing them to pass and giving you an opportunity to reach **21**.\n\n## Conclusion\n\n**Number Stack Attack** combines simple arithmetic with strategic planning, offering depth and replayability in a game that's quick to play and easy to code for a command-line interface. Mastery comes from anticipating your opponent's moves, managing your stack total carefully, and making calculated decisions to reach the target total before your opponent.\n\nEnjoy the game, and may the best strategist win!",
    "# Elemental Clash\n\n## Objective\n\n**Elemental Clash** is a strategic two-player turn-based game where each player takes on the role of a powerful mage. The primary goal is to reduce your opponent's Health Points (HP) to zero by casting elemental spells. Utilize your spell elements wisely to overcome your opponent's defenses and emerge victorious.\n\n## Setup\n\n1. **Health Points:**\n   - Each player starts the game with **10 Health Points (HP)**.\n\n2. **Spell Elements:**\n   - Each player has a set of **four spell elements**:\n     - **Fire**\n     - **Water**\n     - **Earth**\n     - **Air**\n   - These spell elements are available at the beginning of the game and can **only be used once**.\n\n3. **Determine Turn Order:**\n   - Decide who will go first (e.g., by coin toss or mutual agreement).\n\n4. **Game Interface:**\n   - The game is played via a command-line interface where players input their choices when prompted.\n\n## Game Components\n\n### Health Points (HP)\n\n- **Representation:** Numerical value starting at 10 for each player.\n- **Functionality:** Represents the player's vitality. HP decreases based on the outcome of spell clashes.\n- **Unique Attribute:** Cannot exceed 10 or go below 0.\n\n### Spell Elements\n\n1. **Fire**\n   - **Strengths:** Beats Earth and Air.\n   - **Weaknesses:** Loses to Water.\n   - **Appearance:** Represented as `\"Fire\"` in the game.\n\n2. **Water**\n   - **Strengths:** Beats Fire and Earth.\n   - **Weaknesses:** Loses to Air.\n   - **Appearance:** Represented as `\"Water\"` in the game.\n\n3. **Earth**\n   - **Strengths:** Beats Air and Water.\n   - **Weaknesses:** Loses to Fire.\n   - **Appearance:** Represented as `\"Earth\"` in the game.\n\n4. **Air**\n   - **Strengths:** Beats Water and Fire.\n   - **Weaknesses:** Loses to Earth.\n   - **Appearance:** Represented as `\"Air\"` in the game.\n\n**Functionality:**\n\n- Each spell element is used to attack or defend during a player's turn.\n- Once a spell element is used, it is **discarded** and cannot be used again.\n\n### Spell Interaction Chart\n\nThis chart determines the outcome of spell clashes:\n\n| Attacker \\ Defender | Fire        | Water       | Earth       | Air         |\n|---------------------|-------------|-------------|-------------|-------------|\n| **Fire**            | Tie         | Loses       | Wins        | Wins        |\n| **Water**           | Wins        | Tie         | Wins        | Loses       |\n| **Earth**           | Loses       | Loses       | Tie         | Wins        |\n| **Air**             | Loses       | Wins        | Loses       | Tie         |\n\n## Turns\n\n### Turn Structure\n\n1. **Attack Phase:**\n   - The active player (attacker) selects one of their **remaining spell elements** to cast as an attack.\n   - The chosen spell is declared openly (e.g., `\"Player 1 attacks with Fire\"`).\n\n2. **Defense Phase:**\n   - The defending player selects one of their **remaining spell elements** to defend.\n   - The defense spell is declared after the attack spell is known (e.g., `\"Player 2 defends with Water\"`).\n\n3. **Resolution Phase:**\n   - Determine the outcome using the **Spell Interaction Chart**.\n   - Adjust HP based on the result:\n     - **Attacker Wins:** Defender loses **2 HP**.\n     - **Defender Wins:** Attacker loses **1 HP**.\n     - **Tie:** Both players lose **1 HP**.\n\n4. **Discard Used Spells:**\n   - Both used spell elements are discarded and cannot be used again.\n\n5. **Check for Victory:**\n   - If a player's HP is reduced to **0 or below**, the game ends, and the other player wins.\n   - If both players' HP reach **0** simultaneously, the attacker wins.\n\n6. **Next Turn:**\n   - If no victory condition is met, the roles switch, and the next player becomes the attacker.\n\n## Rules and Mechanics\n\n1. **Spell Usage:**\n   - Each spell element can be used **only once per game**.\n   - Players must manage their spells strategically.\n\n2. **Elemental Strengths and Weaknesses:**\n   - Use the **Spell Interaction Chart** to determine outcomes.\n   - The chart is based on traditional elemental relationships (e.g., Water extinguishes Fire).\n\n3. **Health Points Adjustment:**\n   - HP is adjusted **immediately** after each Resolution Phase.\n   - Players cannot have negative HP; if HP drops below 0, it is considered 0.\n\n4. **Victory Conditions:**\n   - A player wins when their opponent's HP reaches **0**.\n   - **No Draws:** The game cannot end in a draw; it continues until one player wins.\n\n5. **Element Availability:**\n   - Keep track of your remaining spell elements.\n   - You cannot select a spell that has already been used.\n\n6. **Game Continuation:**\n   - If a player has no remaining spell elements, they automatically lose on their next turn when they cannot perform an action.\n\n## Scoring\n\n- **Health Points (HP):**\n  - Represents the player's score during the game.\n  - The objective is to reduce your opponent's HP to **0** while maintaining your own.\n- **No Additional Scoring:**\n  - There are no points beyond HP, and no tie-breakers; the game is won by depleting the opponent's HP.\n\n## Examples\n\n### Example Game Flow\n\n**Starting Status:**\n\n- **Player 1:**\n  - HP: 10\n  - Available Spells: Fire, Water, Earth, Air\n- **Player 2:**\n  - HP: 10\n  - Available Spells: Fire, Water, Earth, Air\n\n---\n\n**Turn 1:**\n\n- **Player 1's Attack Phase:**\n  - Chooses to attack with **Fire**.\n  - Declares: `\"Player 1 attacks with Fire.\"`\n- **Player 2's Defense Phase:**\n  - Chooses to defend with **Earth**.\n  - Declares: `\"Player 2 defends with Earth.\"`\n- **Resolution:**\n  - **Fire beats Earth** (Attacker Wins).\n  - **Player 2 loses 2 HP.**\n- **Discard Used Spells:**\n  - Both players discard **Fire** (Player 1) and **Earth** (Player 2).\n- **Post-Turn Status:**\n  - **Player 1 HP:** 10\n  - **Player 2 HP:** 8\n\n---\n\n**Turn 2:**\n\n- **Player 2's Attack Phase:**\n  - Chooses to attack with **Water**.\n  - Declares: `\"Player 2 attacks with Water.\"`\n- **Player 1's Defense Phase:**\n  - Chooses to defend with **Air**.\n  - Declares: `\"Player 1 defends with Air.\"`\n- **Resolution:**\n  - **Air beats Water** (Defender Wins).\n  - **Player 2 loses 1 HP.**\n- **Discard Used Spells:**\n  - Both players discard **Water** (Player 2) and **Air** (Player 1).\n- **Post-Turn Status:**\n  - **Player 1 HP:** 10\n  - **Player 2 HP:** 7\n\n---\n\n**Turn 3:**\n\n- **Player 1's Attack Phase:**\n  - Chooses to attack with **Earth**.\n  - Declares: `\"Player 1 attacks with Earth.\"`\n- **Player 2's Defense Phase:**\n  - Only **Air** remains.\n  - Declares: `\"Player 2 defends with Air.\"`\n- **Resolution:**\n  - **Earth beats Air** (Attacker Wins).\n  - **Player 2 loses 2 HP.**\n- **Discard Used Spells:**\n  - Both players discard **Earth** (Player 1) and **Air** (Player 2).\n- **Post-Turn Status:**\n  - **Player 1 HP:** 10\n  - **Player 2 HP:** 5\n\n---\n\n**Turn 4:**\n\n- **Player 2's Attack Phase:**\n  - Only **Fire** remains.\n  - Declares: `\"Player 2 attacks with Fire.\"`\n- **Player 1's Defense Phase:**\n  - Only **Water** remains.\n  - Declares: `\"Player 1 defends with Water.\"`\n- **Resolution:**\n  - **Water beats Fire** (Defender Wins).\n  - **Player 2 loses 1 HP.**\n- **Discard Used Spells:**\n  - Both players discard **Fire** (Player 2) and **Water** (Player 1).\n- **Post-Turn Status:**\n  - **Player 1 HP:** 10\n  - **Player 2 HP:** 4\n\n---\n\n**Turn 5:**\n\n- **Player 1's Attack Phase:**\n  - No spells remaining (has used Fire, Earth, Air, Water).\n  - Cannot perform an attack.\n- **Outcome:**\n  - **Player 1 cannot attack and loses the game.**\n- **Winner:** Player 2 wins due to Player 1's inability to perform an action.\n\n### Command-Line Interaction Example\n\n```\nPlayer 1 HP: 10 | Available Spells: Fire, Water, Earth, Air\nPlayer 2 HP: 10 | Available Spells: Fire, Water, Earth, Air\n\nIt's Player 1's turn to attack.\nSelect your spell to attack:\n> Fire\n\nPlayer 1 attacks with Fire.\n\nPlayer 2, select your spell to defend:\nAvailable Spells: Fire, Water, Earth, Air\n> Earth\n\nPlayer 2 defends with Earth.\n\nOutcome: Fire beats Earth.\nPlayer 2 loses 2 HP.\n\nPlayer 1 HP: 10\nPlayer 2 HP: 8\n\nUsed Spells:\nPlayer 1 has used: Fire\nPlayer 2 has used: Earth\n```\n\n## Strategy Tips\n\n- **Spell Tracking:** Keep note of which spells have been used by both you and your opponent.\n- **Predict Opponent Moves:** Anticipate your opponent's choices based on their remaining spells.\n- **Element Strengths:** Use spells that counter the likely defense spells of your opponent.\n- **Resource Management:** Save certain spells for when they will be most effective.\n- **Risk Assessment:** Decide when to use a strong spell or when to bait your opponent with a weaker one.\n\n## Additional Notes\n\n- **Game Continuation with No Spells:**\n  - If both players have no spells remaining, the game ends. The player with higher HP wins.\n  - If both players have the same HP, the attacker is declared the winner.\n\n- **Fair Play:**\n  - Players should not reveal their remaining spells until they are used.\n  - Honesty is expected in a command-line environment.\n\n- **Game Tracking:**\n  - It is helpful to write down or otherwise keep track of spells used during the game.\n\n- **Extensions:**\n  - For longer gameplay, players can agree to start with more HP or more spell elements.\n  - Custom elements and interaction rules can be added by mutual agreement before the game starts.\n\n---\n\nEnjoy your battle in **Elemental Clash**, where strategy and foresight lead to victory!",
    "# Divide and Conquer: A Strategic Two-Player Game\n\n## Objective\n\n**\"Divide and Conquer\"** is a strategic two-player, turn-based game played in a command-line interface. The primary goal is to be the last player able to make a valid move. Players take turns dividing piles of stones into two unequal smaller piles. The player who makes the last valid split wins the game, thereby conquering the board.\n\n## Setup\n\n1. **Initial Pile**: The game starts with a single pile containing a prime number of stones. By default, this number is **13**, but players can agree on any prime number to begin with (e.g., 7, 11, 17).\n\n2. **Player Assignment**: Decide which player goes first. This can be determined randomly or by mutual agreement.\n\n3. **Command-Line Interface**: Ensure that the game is set up in a command-line environment where players can input commands and view the game's status.\n\n## Game Components\n\n- **Stones**: Represented numerically as counts within piles. There are no physical stones; counts are tracked within the program.\n  \n- **Piles**: A list of integers representing the number of stones in each pile. The initial setup has one pile with the starting number of stones (e.g., `[13]`).\n\n- **Players**: Two participants taking turns in the game, referred to as **Player 1** and **Player 2**.\n\n## Turns\n\n- **Turn Order**: Players alternate turns. The player designated to go first begins the game.\n\n- **Player Actions During a Turn**:\n  1. **Select a Pile**: Choose one of the existing piles that has at least **3** stones.\n  2. **Divide the Pile**: Split the selected pile into two **unequal** smaller integer piles (e.g., splitting a pile of 7 into piles of 5 and 2).\n\n- **Turn Progression**: After a player completes their move, the turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Valid Splits**:\n   - **Minimum Pile Size for Splitting**: Only piles with **3 or more** stones can be split.\n   - **Unequal Piles**: When splitting, the two new piles must contain a different number of stones. Splitting a pile of 6 into 3 and 3 is **not allowed**.\n   - **Integer Stones**: Stones are indivisible; splits must result in whole numbers.\n\n2. **Piles of Size 1 or 2**:\n   - Piles containing **1 or 2** stones cannot be split further and remain on the board until the game's end.\n\n3. **No Skipping**:\n   - Players must make a valid move on their turn if possible. Skipping a turn is not allowed.\n\n4. **Game End Condition**:\n   - The game ends when a player cannot make a valid move because there are no piles of size 3 or greater to split.\n   - The **last player** who made a valid move **wins** the game.\n\n## Scoring\n\n- **Winning the Game**: Victory is achieved by being the player to make the last valid split.\n- **No Point System**: There is no point tracking; the outcome is a win or loss.\n- **Match Play**: Players can decide to play multiple rounds, keeping track of wins to determine an overall champion.\n\n## Example Gameplay\n\n### Initial Setup\n\n- Starting pile: `[13]`\n- Players: Player 1 and Player 2\n\n### Sample Turns\n\n**Turn 1**: *Player 1*\n\n- **Piles Available**: `[13]`\n- **Action**: Select pile with 13 stones.\n- **Split**: 13 into 8 and 5.\n- **New Piles**: `[8, 5]`\n\n**Turn 2**: *Player 2*\n\n- **Piles Available**: `[8, 5]`\n- **Action**: Select pile with 8 stones.\n- **Split**: 8 into 5 and 3.\n- **New Piles**: `[5, 5, 3]`\n\n**Turn 3**: *Player 1*\n\n- **Piles Available**: `[5, 5, 3]`\n- **Action**: Select pile with 5 stones.\n- **Split**: 5 into 3 and 2.\n- **New Piles**: `[5, 3, 3, 2]`\n\n**Turn 4**: *Player 2*\n\n- **Piles Available**: `[5, 3, 3, 2]`\n- **Action**: Select pile with 5 stones.\n- **Split**: 5 into 4 and 1.\n- **New Piles**: `[4, 3, 3, 2, 1]`\n\n**Turn 5**: *Player 1*\n\n- **Piles Available**: `[4, 3, 3, 2, 1]`\n- **Action**: Select pile with 4 stones.\n- **Split**: 4 into 3 and 1.\n- **New Piles**: `[3, 3, 3, 2, 1, 1]`\n\n**Turn 6**: *Player 2*\n\n- **Piles Available**: `[3, 3, 3, 2, 1, 1]`\n- **Action**: Select pile with 3 stones.\n- **Split**: 3 into 2 and 1.\n- **New Piles**: `[3, 3, 2, 2, 1, 1, 1]`\n\n**Turn 7**: *Player 1*\n\n- **Piles Available**: `[3, 3, 2, 2, 1, 1, 1]`\n- **Action**: Select pile with 3 stones.\n- **Split**: 3 into 2 and 1.\n- **New Piles**: `[3, 2, 2, 2, 1, 1, 1, 1]`\n\n**Turn 8**: *Player 2*\n\n- **Piles Available**: `[3, 2, 2, 2, 1, 1, 1, 1]`\n- **Action**: Select pile with 3 stones.\n- **Split**: 3 into 2 and 1.\n- **New Piles**: `[2, 2, 2, 2, 2, 1, 1, 1, 1]`\n\n**Turn 9**: *Player 1*\n\n- **Piles Available**: `[2, 2, 2, 2, 2, 1, 1, 1, 1]`\n- **No Valid Moves**: There are no piles with 3 or more stones.\n- **Outcome**: Player 1 cannot make a valid move and loses the game.\n- **Winner**: Player 2\n\n### Command-Line Interaction Example\n\n**Game Start**\n\n```\nStarting Divide and Conquer!\nInitial pile: [13]\nPlayer 1's turn.\nAvailable piles: [13]\nSelect a pile to split: 13\nEnter two unequal integers that sum to 13: 8 5\nPiles after split: [8, 5]\n```\n\n**Subsequent Turns**\n\n```\nPlayer 2's turn.\nAvailable piles: [8, 5]\nSelect a pile to split: 8\nEnter two unequal integers that sum to 8: 5 3\nPiles after split: [5, 5, 3]\n\nPlayer 1's turn.\nAvailable piles: [5, 5, 3]\nSelect a pile to split: 5\nEnter two unequal integers that sum to 5: 3 2\nPiles after split: [5, 3, 3, 2]\n\n...\n\nPlayer 1's turn.\nAvailable piles: [2, 2, 2, 2, 2, 1, 1, 1, 1]\nNo valid moves available.\nPlayer 1 cannot make a move.\nPlayer 2 wins the game!\n```\n\n## Strategic Depth\n\n- **Plan Ahead**: Anticipate future moves by considering how splits will leave options for your opponent.\n- **Control the Game**: Aim to force your opponent into a position where they have no valid moves.\n- **Pile Selection**: Choose which piles to split carefully to minimize your opponent's opportunities.\n\n## Conclusion\n\n\"Divide and Conquer\" is a simple yet strategic game that challenges players to think ahead and outmaneuver their opponent. With easy-to-understand rules and quick gameplay, it's perfect for a command-line interface and can be enjoyed by both novice and experienced players looking for a mental challenge.\n\nEnjoy the battle of wits, and may the best strategist win!",
    "# Target Sum - Rule Book\n\n---\n\n## Objective\n\n**\"Target Sum\"** is a two-player, turn-based game where the goal is to be the first player to reach an exact total sum of **25** by selecting numbers from a shared pool. Players take turns picking numbers and adding them to their personal total. The first player to reach **exactly 25** wins. If a player's total exceeds **25**, they lose immediately. If all numbers are exhausted and neither player has reached **25**, the player with the higher total wins.\n\n---\n\n## Setup\n\n1. **Number Pool Initialization**:\n   - Create a common pool of numbers from **1** to **10**.\n   - All numbers are available for selection at the start of the game.\n\n2. **Player Totals**:\n   - Both players begin with a personal total sum of **0**.\n\n---\n\n## Game Components\n\n- **Number Pool**:\n  - A set of integers from **1** to **10**.\n  - Represents the numbers available for selection.\n  \n- **Player Totals**:\n  - Each player maintains their personal total sum.\n  - Starts at **0** and increases as numbers are selected.\n\n---\n\n## Turns\n\n- The game is turn-based, with players alternating turns.\n- **Player 1** starts the game.\n- On each turn:\n  - The current player selects one number from the available pool.\n  - The selected number is added to their personal total sum.\n  - The selected number is then removed from the pool.\n\n---\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - On your turn, you **must** select one number from the remaining numbers in the pool.\n   - You cannot skip your turn or pass.\n\n2. **Updating Total Sum**:\n   - Add the selected number to your personal total sum.\n   - Keep track of your total sum after each selection.\n\n3. **Winning the Game**:\n   - If, after your turn, your total sum is **exactly 25**, you win the game immediately.\n\n4. **Exceeding 25**:\n   - If your total sum **exceeds 25** after adding the selected number, you lose the game immediately.\n   - The game ends, and your opponent wins.\n\n5. **End of Number Pool**:\n   - If all numbers have been selected and neither player has reached **25**:\n     - The player with the **higher total sum** wins the game.\n     - There are no ties; since the total sum of numbers from 1 to 10 is **55**, and both players cannot have the same total unless they reach 25.\n\n6. **No Draws**:\n   - The game cannot end in a draw due to the mechanics of number selection and total sums.\n\n---\n\n## Scoring\n\n- **Winning**:\n  - Reach an exact total of **25** points before your opponent.\n  - Or have the higher total when all numbers are exhausted.\n\n- **Losing**:\n  - Exceed a total of **25** points.\n  - Have a lower total when all numbers are exhausted.\n\n- **Tracking**:\n  - Each player keeps a personal tally of their total sum.\n  - The number pool is updated after each turn.\n\n---\n\n## Example Gameplay\n\n### Initial State:\n\n- **Number Pool**: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n- **Player Totals**:\n  - Player 1: 0\n  - Player 2: 0\n\n### Turn Sequence:\n\n1. **Player 1's Turn**:\n   - Selects **8**.\n   - Player 1's total: 0 + 8 = **8**.\n   - Number Pool: 1, 2, 3, 4, 5, 6, 7, 9, 10\n\n2. **Player 2's Turn**:\n   - Selects **9**.\n   - Player 2's total: 0 + 9 = **9**.\n   - Number Pool: 1, 2, 3, 4, 5, 6, 7, 10\n\n3. **Player 1's Turn**:\n   - Selects **7**.\n   - Player 1's total: 8 + 7 = **15**.\n   - Number Pool: 1, 2, 3, 4, 5, 6, 10\n\n4. **Player 2's Turn**:\n   - Selects **10**.\n   - Player 2's total: 9 + 10 = **19**.\n   - Number Pool: 1, 2, 3, 4, 5, 6\n\n5. **Player 1's Turn**:\n   - Selects **6**.\n   - Player 1's total: 15 + 6 = **21**.\n   - Number Pool: 1, 2, 3, 4, 5\n\n6. **Player 2's Turn**:\n   - Selects **5**.\n   - Player 2's total: 19 + 5 = **24**.\n   - Number Pool: 1, 2, 3, 4\n\n7. **Player 1's Turn**:\n   - Selects **4**.\n   - Player 1's total: 21 + 4 = **25**.\n   - **Player 1 wins** by reaching exactly 25.\n\n---\n\n## Command-Line Interaction Example\n\n**Game Start**\n\n```\nWelcome to Target Sum!\n\nNumbers available: 1,2,3,4,5,6,7,8,9,10\n\nPlayer 1 total: 0\n\nPlayer 2 total: 0\n```\n\n**Turn 1 - Player 1**\n\n```\nPlayer 1, select a number from the available pool: 8\n\nYou selected 8.\n\nYour total sum is now 8.\n\nNumbers remaining: 1,2,3,4,5,6,7,9,10\n```\n\n**Turn 2 - Player 2**\n\n```\nPlayer 2, select a number from the available pool: 9\n\nYou selected 9.\n\nYour total sum is now 9.\n\nNumbers remaining: 1,2,3,4,5,6,7,10\n```\n\n*(Gameplay continues in this manner until a player wins or loses.)*\n\n---\n\n## Strategic Considerations\n\n- **Planning Ahead**:\n  - Keep track of which numbers remain in the pool.\n  - Calculate future totals to determine which numbers you'll need.\n\n- **Blocking Opponent**:\n  - Anticipate which numbers your opponent needs and select them first.\n  - Force your opponent into a position where they must exceed 25 or cannot reach 25.\n\n- **Resource Management**:\n  - Balance taking high-value numbers to reach 25 quickly with not exceeding the limit.\n  - Consider leaving specific numbers in the pool to create opportunities for yourself later.\n\n---\n\n## Examples of Strategy\n\n- If your total is **15**, you need a combination of numbers that add up to **10** to reach 25.\n  - Potential combinations: 6+4, 7+3, 5+5.\n  - If key numbers are still available, plan to acquire them in future turns.\n\n- If your opponent's total is **19**, they need a **6** to reach 25.\n  - If the **6** is still in the pool, consider taking it to prevent their win.\n\n---\n\n## Ensuring No Draws\n\n- Since the total sum of all numbers from 1 to 10 is **55**, and both players start from **0**, it's impossible for both players to reach 25 simultaneously.\n- If both players cannot reach 25, the one with the higher total when all numbers are exhausted wins.\n\n---\n\n## Conclusion\n\n**\"Target Sum\"** is a strategic numerical game that combines elements of planning, anticipation, and mathematical calculation. Its simple rules make it easy to code and play in a command-line interface, while the depth of strategy ensures engaging and competitive gameplay. With quick turns and definitive outcomes, players can enjoy multiple rounds and develop skills to consistently outperform less experienced opponents.\n\n---\n\nEnjoy playing **\"Target Sum\"** and may the best strategist win!",
    "# Divisor Duel: Rule Book\n\n## Objective\n\n**Divisor Duel** is a two-player, turn-based mathematical strategy game. The primary goal is to force your opponent into a position where they cannot make a valid move. Players take turns selecting divisors of a shared number and reducing that number until one player is unable to perform a valid action, thereby losing the game.\n\n## Setup\n\n- **Starting Number**: The game begins with a shared positive integer, referred to as the **Current Number**. The default starting number is **60**.\n- **Players**: Two players, referred to as **Player 1** and **Player 2**.\n\n## Game Components\n\n- **Current Number**: A positive integer that is manipulated throughout the game.\n- **Divisors**: Numbers that divide the Current Number evenly (without leaving a remainder), excluding **1** and the Current Number itself.\n  \n  For example, if the Current Number is 60, its divisors (excluding 1 and 60) are:\n\n  ```\n  2, 3, 4, 5, 6, 10, 12, 15, 20, 30\n  ```\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with **Player 1**.\n- **Player Actions**: On their turn, a player must:\n  1. **Select a Divisor**: Choose any valid divisor of the Current Number (excluding 1 and the number itself).\n  2. **Subtract the Divisor**: Subtract the chosen divisor from the Current Number to create a **New Current Number**.\n- **Passing the Turn**: The New Current Number becomes the Current Number for the next player's turn.\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - Players must select a divisor of the Current Number excluding 1 and the Current Number itself.\n   - The chosen divisor must be less than the Current Number.\n2. **Calculating Divisors**:\n   - Divisors are positive integers that divide the Current Number evenly.\n   - Divisors must satisfy:\n\n     ```\n     Current Number % Divisor == 0\n     ```\n3. **Updating the Current Number**:\n   - Subtract the chosen divisor from the Current Number:\n\n     ```\n     New Current Number = Current Number - Divisor\n     ```\n   - The New Current Number must remain a positive integer.\n4. **Invalid Moves**:\n   - If a player cannot find a valid divisor (i.e., when the Current Number is a prime number or 2), they lose their turn and the game.\n5. **Winning the Game**:\n   - The player who forces their opponent into a position where no valid moves are possible wins the game.\n\n## Scoring\n\n- **Victory Condition**: Victory is achieved by creating a situation where the opponent has no valid moves on their turn.\n- **No Point System**: There is no point or scoring system; the game is won solely through strategic play leading to the opponent's loss.\n\n## Examples\n\n### Example Game Play\n\n#### Initial Setup\n\n- **Current Number**: 60\n- **Player 1** and **Player 2** decide who goes first (default is Player 1).\n\n---\n\n#### Turn 1: Player 1\n\n- **Current Number**: 60\n- **Divisors of 60** (excluding 1 and 60): 2, 3, 4, 5, 6, 10, 12, 15, 20, 30\n- **Player 1's Choice**: Chooses divisor **15**.\n- **Calculation**:\n  ```\n  New Current Number = 60 - 15 = 45\n  ```\n- **Pass Turn**: Current Number is now **45** for Player 2.\n\n---\n\n#### Turn 2: Player 2\n\n- **Current Number**: 45\n- **Divisors of 45** (excluding 1 and 45): 3, 5, 9, 15\n- **Player 2's Choice**: Chooses divisor **15**.\n- **Calculation**:\n  ```\n  New Current Number = 45 - 15 = 30\n  ```\n- **Pass Turn**: Current Number is now **30** for Player 1.\n\n---\n\n#### Turn 3: Player 1\n\n- **Current Number**: 30\n- **Divisors of 30** (excluding 1 and 30): 2, 3, 5, 6, 10, 15\n- **Player 1's Choice**: Chooses divisor **10**.\n- **Calculation**:\n  ```\n  New Current Number = 30 - 10 = 20\n  ```\n- **Pass Turn**: Current Number is now **20** for Player 2.\n\n---\n\n#### Turn 4: Player 2\n\n- **Current Number**: 20\n- **Divisors of 20** (excluding 1 and 20): 2, 4, 5, 10\n- **Player 2's Choice**: Chooses divisor **5**.\n- **Calculation**:\n  ```\n  New Current Number = 20 - 5 = 15\n  ```\n- **Pass Turn**: Current Number is now **15** for Player 1.\n\n---\n\n#### Turn 5: Player 1\n\n- **Current Number**: 15\n- **Divisors of 15** (excluding 1 and 15): 3, 5\n- **Player 1's Choice**: Chooses divisor **5**.\n- **Calculation**:\n  ```\n  New Current Number = 15 - 5 = 10\n  ```\n- **Pass Turn**: Current Number is now **10** for Player 2.\n\n---\n\n#### Turn 6: Player 2\n\n- **Current Number**: 10\n- **Divisors of 10** (excluding 1 and 10): 2, 5\n- **Player 2's Choice**: Chooses divisor **2**.\n- **Calculation**:\n  ```\n  New Current Number = 10 - 2 = 8\n  ```\n- **Pass Turn**: Current Number is now **8** for Player 1.\n\n---\n\n#### Turn 7: Player 1\n\n- **Current Number**: 8\n- **Divisors of 8** (excluding 1 and 8): 2, 4\n- **Player 1's Choice**: Chooses divisor **4**.\n- **Calculation**:\n  ```\n  New Current Number = 8 - 4 = 4\n  ```\n- **Pass Turn**: Current Number is now **4** for Player 2.\n\n---\n\n#### Turn 8: Player 2\n\n- **Current Number**: 4\n- **Divisors of 4** (excluding 1 and 4): 2\n- **Player 2's Choice**: Chooses divisor **2**.\n- **Calculation**:\n  ```\n  New Current Number = 4 - 2 = 2\n  ```\n- **Pass Turn**: Current Number is now **2** for Player 1.\n\n---\n\n#### Turn 9: Player 1\n\n- **Current Number**: 2\n- **Divisors of 2** (excluding 1 and 2): None\n- **Player 1** has no valid moves and **loses** the game.\n- **Player 2** **wins**!\n\n## Command-Line Interaction Example\n\nBelow is an example of how the game might proceed in a command-line interface:\n\n```\n----------------------------------------\nWelcome to Divisor Duel!\n\nStarting Number: 60\n\nPlayer 1's Turn\nCurrent Number: 60\nDivisors available: [2, 3, 4, 5, 6, 10, 12, 15, 20, 30]\nEnter your chosen divisor: 15\nNew Current Number is 45\n\nPlayer 2's Turn\nCurrent Number: 45\nDivisors available: [3, 5, 9, 15]\nEnter your chosen divisor: 15\nNew Current Number is 30\n\nPlayer 1's Turn\nCurrent Number: 30\nDivisors available: [2, 3, 5, 6, 10, 15]\nEnter your chosen divisor: 10\nNew Current Number is 20\n\nPlayer 2's Turn\nCurrent Number: 20\nDivisors available: [2, 4, 5, 10]\nEnter your chosen divisor: 5\nNew Current Number is 15\n\nPlayer 1's Turn\nCurrent Number: 15\nDivisors available: [3, 5]\nEnter your chosen divisor: 5\nNew Current Number is 10\n\nPlayer 2's Turn\nCurrent Number: 10\nDivisors available: [2, 5]\nEnter your chosen divisor: 2\nNew Current Number is 8\n\nPlayer 1's Turn\nCurrent Number: 8\nDivisors available: [2, 4]\nEnter your chosen divisor: 4\nNew Current Number is 4\n\nPlayer 2's Turn\nCurrent Number: 4\nDivisors available: [2]\nEnter your chosen divisor: 2\nNew Current Number is 2\n\nPlayer 1's Turn\nCurrent Number: 2\nDivisors available: []\nNo valid moves available!\nPlayer 2 wins the game!\n----------------------------------------\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's possible moves based on the Current Number you pass to them.\n- **Avoid Prime Numbers**: Try not to reduce the Current Number to a prime number on your turn unless it forces a win.\n- **Control Divisors**: Select divisors that leave your opponent with fewer options.\n- **Mathematical Familiarity**: Being quick with factoring numbers can provide a strategic advantage.\n\n---\n\nEnjoy playing **Divisor Duel**, and may the most strategic player win!",
    "# Numerical Duel\n\n## Objective\n\nBe the first player to reduce the shared total to **exactly zero** by strategically subtracting numbers. The player who achieves this goal on their turn wins the game.\n\n## Setup\n\n- **Starting Total**: The game begins with a shared total number, typically **23**.\n- **Decide Turn Order**: Players decide who goes first (e.g., by coin toss).\n\n## Game Components\n\n- **Shared Total Number**: An integer representing the current total, starting at 23.\n- **Allowed Numbers**: The integers **1**, **2**, **3**, and **4** are the only numbers that can be subtracted from the total.\n\n## Turns\n\n- Players take turns alternately.\n- On each turn, a player must subtract one of the allowed numbers from the current total.\n\n## Rules and Mechanics\n\n1. **Subtracting Numbers**: On your turn, choose a number between **1** and **4** (inclusive) to subtract from the current total.\n\n2. **Valid Moves**:\n   - You **cannot** subtract a number that would reduce the total below zero.\n   - If no valid moves are available (all allowed numbers are greater than the current total), you **lose your turn**.\n\n3. **Winning the Game**: The player who reduces the total to **exactly zero** on their turn **wins the game**.\n\n4. **No Draws**: The game cannot end in a draw since the total can only reach zero through a player's valid move.\n\n5. **Strategic Play**: Plan ahead to force your opponent into positions where they have limited options, paving the way for your victory.\n\n## Scoring\n\n- **Winning**: The player who reduces the total to zero wins.\n- **No Additional Scoring**: There are no points; the game is won by meeting the objective.\n\n## Examples\n\n### Example Gameplay\n\n**Starting Total**: 23\n\n- **Turn 1**: Player 1 subtracts **3**.\n  - **Total**: 20\n- **Turn 2**: Player 2 subtracts **2**.\n  - **Total**: 18\n- **Turn 3**: Player 1 subtracts **4**.\n  - **Total**: 14\n- **Turn 4**: Player 2 subtracts **1**.\n  - **Total**: 13\n- **Turn 5**: Player 1 subtracts **3**.\n  - **Total**: 10\n- **Turn 6**: Player 2 subtracts **2**.\n  - **Total**: 8\n- **Turn 7**: Player 1 subtracts **3**.\n  - **Total**: 5\n- **Turn 8**: Player 2 subtracts **1**.\n  - **Total**: 4\n- **Turn 9**: Player 1 subtracts **4**.\n  - **Total**: **0**\n- **Result**: Player 1 wins!\n\n### Command-Line Interaction Sample\n\n```\nWelcome to Numerical Duel!\nStarting total is 23.\n\nPlayer 1's turn.\nChoose a number to subtract (1-4): 3\nTotal is now 20.\n\nPlayer 2's turn.\nChoose a number to subtract (1-4): 2\nTotal is now 18.\n\nPlayer 1's turn.\nChoose a number to subtract (1-4): 4\nTotal is now 14.\n\n...\n\nPlayer 1's turn.\nChoose a number to subtract (1-4): 4\nTotal is now 0.\n\nPlayer 1 wins!\n```\n\n## Strategic Tips\n\n- **Target Numbers**: Aim to leave the total at **multiples of 5** (i.e., 5, 10, 15, 20). This strategy can force your opponent into positions where they cannot win.\n\n- **Anticipate Opponent's Moves**: Consider the possible numbers your opponent can subtract and plan your moves to limit their options.\n\n- **Control the Game Flow**: By carefully choosing your subtractions, you can control the pace of the game and steer it towards a win.\n\n## Conclusion\n\n**Numerical Duel** is a simple yet strategic game that challenges players to think ahead and make calculated moves. With straightforward rules and quick gameplay, it provides an engaging experience where skillful play is rewarded.\n\n---\n\nEnjoy the game, and may the best strategist win!",
    "# Number Slide: A Two-Player Command-Line Game\n\n## Objective\n\n**Number Slide** is a strategic two-player, turn-based game played in a command-line interface. The primary goal is to be the first player to reach a total score of exactly **15** by strategically adding or subtracting numbers from a shared sequence. Players must carefully choose numbers and operations to manipulate their total score while anticipating their opponent's moves. The game ends when a player successfully reaches the target score of 15.\n\n## Setup\n\n1. **Shared Sequence**: Create a shared sequence of numbers arranged in a single row. The sequence consists of the digits from **1** to **9** arranged in ascending order:\n\n   ```\n   [1] [2] [3] [4] [5] [6] [7] [8] [9]\n   ```\n\n2. **Player Totals**: Both players start with a **total score of 0**.\n\n3. **Player Order**: Decide who will take the first turn. This can be determined randomly or by mutual agreement.\n\n## Game Components\n\n- **Shared Sequence**: The central element of the game is the sequence of numbers from 1 to 9. These numbers are accessible to both players and form the pool from which numbers are selected during the game.\n\n- **Player Totals**: Each player maintains their own total score, starting at 0. This total is updated each turn based on the number selected and the operation performed.\n\n- **Operations**: Players can choose to **add** or **subtract** the selected number to or from their total score.\n\n## Turns\n\n- **Turn Structure**:\n  1. **Select a Number**: On your turn, choose a number from **either end** (the first or last number) of the shared sequence.\n  2. **Choose an Operation**: Decide whether to **add** or **subtract** the chosen number to/from your total score.\n  3. **Update the Sequence**: Remove the selected number from the shared sequence.\n  4. **Update Total Score**: Apply the operation and adjust your total score accordingly.\n  5. **Announce Move**: Declare your chosen number, operation, and new total score.\n  6. **Check for Win Condition**: If your total score is exactly 15, you win the game.\n\n- **Turn Progression**: Players alternate turns until the game ends. Ensure that each player's actions are clearly communicated to maintain game flow.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - You may only select a number from either **end** of the shared sequence (i.e., the first or last remaining number).\n   - Once a number is selected and removed, it is no longer available for either player.\n\n2. **Operations**:\n   - After selecting a number, you must choose to **add** or **subtract** it from your current total score.\n   - Your total score can be **positive**, **negative**, or **zero** during the game.\n\n3. **Winning the Game**:\n   - The **first player** to reach a total score of **exactly 15** wins the game.\n   - If both players reach 15 on the same round, the game continues until a player reaches 15 while the opponent does not.\n\n4. **Invalid Moves**:\n   - If a player cannot make a valid move (e.g., no numbers remain in the sequence), the game continues until a win condition is met.\n   - Players **cannot skip** their turn; a number must be selected if available.\n\n5. **End of the Sequence**:\n   - The game can continue even if all numbers have been used, as the win condition depends solely on reaching a total score of 15.\n   - If neither player reaches 15 after all numbers have been used, the game ends in a **loss for both players**.\n\n## Scoring\n\n- **Tracking Scores**:\n  - Each player keeps a running total of their score after each turn.\n  - Scores are updated based on the selected number and chosen operation.\n\n- **Victory Condition**:\n  - The **sole scoring objective** is to reach a total score of **exactly 15**.\n  - There are no additional points or scoring mechanisms.\n\n## Examples\n\n### Example Game Playthrough\n\n**Initial Setup**:\n\n- Shared Sequence:\n\n  ```\n  [1] [2] [3] [4] [5] [6] [7] [8] [9]\n  ```\n\n- Player Totals:\n  - Player 1 Total: 0\n  - Player 2 Total: 0\n\n---\n\n**Turn 1**:\n- **Player 1** selects **9** from the end of the sequence.\n- Chooses to **add** 9 to their total.\n- **Player 1 Total**: 0 + 9 = **9**\n- Updated Sequence:\n\n  ```\n  [1] [2] [3] [4] [5] [6] [7] [8]\n  ```\n\n---\n\n**Turn 2**:\n- **Player 2** selects **1** from the start of the sequence.\n- Chooses to **add** 1 to their total.\n- **Player 2 Total**: 0 + 1 = **1**\n- Updated Sequence:\n\n  ```\n  [2] [3] [4] [5] [6] [7] [8]\n  ```\n\n---\n\n**Turn 3**:\n- **Player 1** selects **8** from the end.\n- Chooses to **add** 8 to their total.\n- **Player 1 Total**: 9 + 8 = **17**\n- Updated Sequence:\n\n  ```\n  [2] [3] [4] [5] [6] [7]\n  ```\n\n---\n\n**Turn 4**:\n- **Player 2** selects **2** from the start.\n- Chooses to **subtract** 2 from their total.\n- **Player 2 Total**: 1 - 2 = **-1**\n- Updated Sequence:\n\n  ```\n  [3] [4] [5] [6] [7]\n  ```\n\n---\n\n**Turn 5**:\n- **Player 1** selects **7** from the end.\n- Chooses to **subtract** 7 from their total.\n- **Player 1 Total**: 17 - 7 = **10**\n- Updated Sequence:\n\n  ```\n  [3] [4] [5] [6]\n  ```\n\n---\n\n**Turn 6**:\n- **Player 2** selects **3** from the start.\n- Chooses to **add** 3 to their total.\n- **Player 2 Total**: -1 + 3 = **2**\n- Updated Sequence:\n\n  ```\n  [4] [5] [6]\n  ```\n\n---\n\n**Turn 7**:\n- **Player 1** selects **6** from the end.\n- Chooses to **add** 6 to their total.\n- **Player 1 Total**: 10 + 6 = **16**\n- Updated Sequence:\n\n  ```\n  [4] [5]\n  ```\n\n---\n\n**Turn 8**:\n- **Player 2** selects **4** from the start.\n- Chooses to **add** 4 to their total.\n- **Player 2 Total**: 2 + 4 = **6**\n- Updated Sequence:\n\n  ```\n  [5]\n  ```\n\n---\n\n**Turn 9**:\n- **Player 1** selects **5**, the only remaining number.\n- Chooses to **subtract** 5 from their total.\n- **Player 1 Total**: 16 - 5 = **11**\n- Updated Sequence:\n\n  ```\n  []\n  ```\n\n---\n\n**End of Game**:\n\n- All numbers have been used.\n- Neither player has reached a total score of 15.\n- **Result**: Loss for both players as the win condition was not met.\n\n---\n\n## Command-Line Interaction Example\n\nBelow is an example of how the game could be played in a command-line interface.\n\n---\n\n**Initial Prompt**:\n\n```\nWelcome to Number Slide!\n\nInitial Sequence: [1] [2] [3] [4] [5] [6] [7] [8] [9]\n\nPlayer 1 Total: 0\nPlayer 2 Total: 0\n\nPlayer 1, it's your turn.\nChoose a number from the ends: 1 or 9\n```\n\n**Player 1 Input**:\n\n```\nI choose 9 and will add it to my total.\n```\n\n**Output**:\n\n```\nPlayer 1 selected 9 and added it to their total.\nPlayer 1 Total: 9\n\nUpdated Sequence: [1] [2] [3] [4] [5] [6] [7] [8]\n\nPlayer 2, it's your turn.\nChoose a number from the ends: 1 or 8\n```\n\n**Player 2 Input**:\n\n```\nI choose 1 and will add it to my total.\n```\n\n_(Continue the game following the same pattern...)_\n\n---\n\n## Strategy Tips\n\n- **Balance Addition and Subtraction**: Consider both adding and subtracting numbers to reach the target score of 15 efficiently.\n\n- **Anticipate Opponent's Moves**: Pay attention to the sequence and strategize to limit your opponent's options or force them into undesirable moves.\n\n- **Sequence Control**: By choosing certain numbers, you can manipulate the sequence to your advantage, potentially controlling which numbers will be available on your next turn.\n\n- **Avoid Overshooting**: Be cautious about increasing your total score too quickly, as it may limit your options in later turns.\n\n---\n\n## Conclusion\n\n**Number Slide** is a simple yet strategic game that combines numerical operations with foresight and planning. It is easy to code and ideal for a command-line interface. The game is designed to end quickly, with no possibility of a draw, ensuring an engaging experience where a skilled player can consistently outmaneuver an unskilled opponent. Enjoy honing your strategic thinking and may the best player win!",
    "# Reach 27: A Two-Player Turn-Based Game\n\n## Objective\n\n**Reach 27** is a strategic two-player game where the primary goal is to be the player who brings the cumulative total to **exactly 27**. Players take turns adding numbers to a running total, and the game demands foresight and planning to outmaneuver the opponent. A player wins by making the total exactly 27 on their turn. If a player causes the total to exceed 27, they lose immediately.\n\n---\n\n## Setup\n\n1. **Initial Total**: The game begins with a cumulative total of **0**.\n2. **Player Order**: Decide who takes the first turn. This can be determined by mutual agreement or by a random method such as a coin toss.\n3. **Starting Conditions**: No physical components are required; the game is played through command-line inputs and outputs.\n\n---\n\n## Game Components\n\n- **Cumulative Total**: A running total that starts at 0 and increases as players add numbers.\n- **Number Selection**:\n  - Players choose numbers from **1** to **9** (inclusive) on their turn.\n  - Numbers can be used multiple times; there is no removal from a pool.\n- **Command-Line Interface**: Players input their chosen numbers, and the interface displays the cumulative total and game status.\n\n---\n\n## Turns\n\n1. **Turn Order**: Players alternate turns throughout the game.\n2. **Player Actions During a Turn**:\n   - **Select a Number**: Choose a whole number between 1 and 9.\n   - **Update Total**: Add the chosen number to the cumulative total.\n   - **Announce Move**: Input the selected number and receive feedback on the new total.\n3. **Progression of Turns**: The game continues with players alternating turns until one player wins or loses according to the game rules.\n\n---\n\n## Rules and Mechanics\n\n### Number Selection\n\n- **Valid Choices**: On their turn, a player must select an integer between **1** and **9** inclusive.\n- **Cumulative Total Limit**: Players may not choose a number that causes the cumulative total to exceed **27**.\n- **Invalid Move**: Attempting to select an invalid number results in an immediate loss.\n\n### Winning the Game\n\n- **Exact Total of 27**: A player wins if they bring the cumulative total to **exactly 27** on their turn.\n- **Forcing a Win**: Strategic selection of numbers can force the opponent into a losing position.\n\n### Losing the Game\n\n- **Exceeding 27**: A player loses immediately if their chosen number causes the cumulative total to exceed **27**.\n- **Invalid Input**: Selecting a number outside the allowed range (less than 1 or greater than 9) results in a loss.\n\n### Strategic Considerations\n\n- **Planning Ahead**: Players should anticipate future moves to avoid exceeding the total and to force the opponent into a difficult position.\n- **Control the Total**: Keeping track of the cumulative total and calculating the potential outcomes is key to winning.\n\n---\n\n## Scoring\n\n- **Win/Loss**: The game outcome is binary—one player wins, and one player loses.\n- **Match Play**: For extended play, players can compete in multiple rounds and keep score of wins to determine an overall champion.\n\n---\n\n## Examples\n\n### Sample Game Play\n\n**Starting the Game**:\n\n- Player 1 and Player 2 agree that Player 1 will begin.\n- The cumulative total is **0**.\n\n**Turn 1**:\n\n- **Player 1** selects **5**.\n- Cumulative total: 0 + 5 = **5**.\n- **Command-Line Interaction**:\n  ```\n  Player 1, enter a number between 1 and 9: 5\n  Cumulative total is now 5.\n  ```\n\n**Turn 2**:\n\n- **Player 2** selects **7**.\n- Cumulative total: 5 + 7 = **12**.\n- **Command-Line Interaction**:\n  ```\n  Player 2, enter a number between 1 and 9: 7\n  Cumulative total is now 12.\n  ```\n\n**Turn 3**:\n\n- **Player 1** selects **9**.\n- Cumulative total: 12 + 9 = **21**.\n- **Command-Line Interaction**:\n  ```\n  Player 1, enter a number between 1 and 9: 9\n  Cumulative total is now 21.\n  ```\n\n**Turn 4**:\n\n- **Player 2** must be cautious. The maximum number they can choose without exceeding 27 is **6** (since 21 + 6 = 27).\n- **Player 2** selects **6**, reaching exactly 27.\n- **Player 2 wins the game**.\n- **Command-Line Interaction**:\n  ```\n  Player 2, enter a number between 1 and 6: 6\n  Cumulative total is now 27.\n  Player 2 has reached 27 and wins the game!\n  ```\n\n### Alternate Ending\n\nIf **Player 2** had not calculated correctly and selected **7**:\n\n- Cumulative total: 21 + 7 = **28**.\n- **Player 2** exceeds 27 and loses the game.\n- **Command-Line Interaction**:\n  ```\n  Player 2, enter a number between 1 and 6: 7\n  Cumulative total is now 28.\n  Cumulative total exceeds 27.\n  Player 2 loses the game!\n  ```\n\n**Strategy Note**: In this game, careful calculation and control of the cumulative total are essential. Players should aim to set up the total so that they can reach exactly 27 on their turn or force their opponent into a position where any move would cause them to exceed 27.\n\n---\n\n## Command-Line Interaction Tips\n\n- **Input Validation**: Ensure the entered number is within the valid range and does not cause the total to exceed 27.\n- **Displaying Information**: After each turn, display the cumulative total and any important game status updates.\n- **Handling Errors**: If a player attempts an invalid move, inform them of the error and declare the opponent as the winner.\n- **User Prompts**: Clearly prompt each player for their input, specifying the allowed range based on the current total.\n\n---\n\n## Conclusion\n\n**Reach 27** is a simple yet strategic game that can be easily played through a command-line interface. With straightforward rules and quick gameplay, it offers engaging competition where skillful calculation and planning can consistently lead a player to victory. Enjoy challenging your friends and honing your strategic thinking with this exciting numerical duel!",
    "# Duel of Wits\n\n## Objective\n\n**Duel of Wits** is a strategic two-player turn-based game designed for play in a command-line interface. The primary goal is to be the first player to reach a cumulative total of exactly **50** by strategically choosing actions that increase the total without exceeding it. Players must outmaneuver their opponent by anticipating moves and planning ahead.\n\n## Setup\n\n- **Cumulative Total**: The game starts with a shared cumulative total set to **0**.\n- **Player Roles**: Two players, Player 1 and Player 2, decide who takes the first turn (e.g., by coin toss).\n\n## Game Components\n\n- **Cumulative Total**: A shared numeric value that both players can view and modify through their actions.\n- **Actions**: Two possible actions for each player on their turn:\n  - **Add**: Add an integer between **1** and **10** (inclusive) to the cumulative total.\n  - **Multiply**: Multiply the cumulative total by **2**, provided the result does not exceed **50**.\n\n## Turns\n\n- Players take turns alternately, starting with the player who was chosen to go first.\n- On each turn, a player **must** perform one of the two available actions:\n  1. **Add** a number to the cumulative total.\n  2. **Multiply** the cumulative total by 2.\n\n## Rules and Mechanics\n\n### 1. Adding Numbers\n\n- **Action**: Add any integer from **1** to **10** (inclusive) to the cumulative total.\n- **Restriction**: The cumulative total **must not exceed 50** after the addition.\n- **Procedure**:\n  - Player announces the number they wish to add.\n  - The number is added to the cumulative total immediately.\n\n### 2. Multiplying the Total\n\n- **Action**: Multiply the cumulative total by **2**.\n- **Restriction**: The result of the multiplication **must not exceed 50**.\n- **Procedure**:\n  - Player declares their intention to multiply.\n  - The cumulative total is multiplied by 2 immediately.\n\n### 3. Exceeding 50\n\n- If a player's chosen action would cause the cumulative total to exceed **50**, that action is **not allowed**.\n- If a player has **no legal moves** (i.e., all possible actions would exceed 50), the player **loses the game**.\n\n### 4. Winning the Game\n\n- The player who brings the cumulative total to **exactly 50** **wins** the game.\n- Players must plan their moves to force the cumulative total to 50 on their turn.\n\n### 5. Mandatory Actions\n\n- Players **cannot skip** their turn.\n- If a player has at least one legal action, they **must** perform one.\n- If **no legal actions** are available, the player **loses**, and the opponent wins.\n\n## Scoring\n\n- **Winning**: Achieved by reaching a cumulative total of exactly **50**.\n- **Losing**: Occurs if a player cannot make a legal move on their turn.\n\n## Examples\n\n### Example 1: Strategic Play\n\n**Starting Cumulative Total**: 0\n\n- **Player 1's Turn**:\n  - Chooses to **Add 7**.\n  - Cumulative Total: 0 + 7 = **7**.\n- **Player 2's Turn**:\n  - Chooses to **Add 8**.\n  - Cumulative Total: 7 + 8 = **15**.\n- **Player 1's Turn**:\n  - Chooses to **Multiply**.\n  - Cumulative Total: 15 × 2 = **30**.\n- **Player 2's Turn**:\n  - Chooses to **Add 10**.\n  - Cumulative Total: 30 + 10 = **40**.\n- **Player 1's Turn**:\n  - Multiplying would result in 80 (not allowed).\n  - Chooses to **Add 10**.\n  - Cumulative Total: 40 + 10 = **50**.\n- **Outcome**: **Player 1 wins** by reaching exactly 50.\n\n### Example 2: Forcing a Win\n\n**Starting Cumulative Total**: 0\n\n- **Player 1's Turn**:\n  - Chooses to **Add 1**.\n  - Cumulative Total: 0 + 1 = **1**.\n- **Player 2's Turn**:\n  - Chooses to **Multiply**.\n  - Cumulative Total: 1 × 2 = **2**.\n- **Player 1's Turn**:\n  - Chooses to **Add 3**.\n  - Cumulative Total: 2 + 3 = **5**.\n- **Player 2's Turn**:\n  - Chooses to **Multiply**.\n  - Cumulative Total: 5 × 2 = **10**.\n- **Player 1's Turn**:\n  - Chooses to **Add 10**.\n  - Cumulative Total: 10 + 10 = **20**.\n- **Player 2's Turn**:\n  - Chooses to **Multiply**.\n  - Cumulative Total: 20 × 2 = **40**.\n- **Player 1's Turn**:\n  - Cannot multiply (would be 80).\n  - Chooses to **Add 9**.\n  - Cumulative Total: 40 + 9 = **49**.\n- **Player 2's Turn**:\n  - Cannot multiply (would be 98).\n  - Must add between 1 and 1 (since any higher exceeds 50).\n  - Chooses to **Add 1**.\n  - Cumulative Total: 49 + 1 = **50**.\n- **Outcome**: **Player 2 wins** by reaching exactly 50.\n\n### Command-Line Interaction Example\n\nBelow is a sample command-line interaction to illustrate how the game might proceed.\n\n```\nGame Start! Cumulative Total is 0.\n\nPlayer 1's Turn:\nChoose Action - (1) Add or (2) Multiply: 1\nEnter a number to add (1-10): 6\nCumulative Total is now 6.\n\nPlayer 2's Turn:\nChoose Action - (1) Add or (2) Multiply: 2\nCumulative Total is now 12.\n\nPlayer 1's Turn:\nChoose Action - (1) Add or (2) Multiply: 2\nCumulative Total is now 24.\n\nPlayer 2's Turn:\nChoose Action - (1) Add or (2) Multiply: 1\nEnter a number to add (1-10): 10\nCumulative Total is now 34.\n\nPlayer 1's Turn:\nChoose Action - (1) Add or (2) Multiply: 2\nAction not allowed. Multiplying would exceed 50.\nChoose Action - (1) Add or (2) Multiply: 1\nEnter a number to add (1-10): 10\nCumulative Total is now 44.\n\nPlayer 2's Turn:\nChoose Action - (1) Add or (2) Multiply: 1\nEnter a number to add (1-6): 6\nCumulative Total is now 50.\n\nPlayer 2 wins by reaching exactly 50!\n```\n\n*Note*: In the final turn, Player 2 could only add a maximum of 6, as adding more would exceed 50.\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate the results of both adding and multiplying to control the cumulative total.\n- **Force Moves**: Try to leave the cumulative total at a number where your opponent has limited options.\n- **Avoid High Totals Early**: Keeping the cumulative total lower gives you more flexibility in later moves.\n- **Watch Multiplication**: Multiplying can quickly increase the total but can also reduce your options.\n\n---\n\n**Duel of Wits** combines simple arithmetic operations with strategic planning. The game is easy to learn but offers depth for players who like to think ahead and outsmart their opponents. Enjoy testing your wit and strategy in this engaging numerical showdown!",
    "# Number Duel Rule Book\n\n## Objective\n\n**Number Duel** is a two-player turn-based game where the goal is to strategically reduce your opponent's Life Points (LP) from 20 to **zero** before they do the same to you. Players draw numbers and decide whether to attack their opponent or heal themselves, making tactical choices to outmaneuver their opponent and claim victory.\n\n---\n\n## Setup\n\n1. **Life Points**:\n   - Each player starts with **20 Life Points (LP)**.\n\n2. **Number Deck**:\n   - Create a deck containing numbers from **1 to 10**, with each number appearing only once.\n   - **Shuffle** the deck thoroughly to ensure randomness.\n\n3. **Discard Pile**:\n   - Initialize an empty discard pile next to the deck to hold used numbers.\n\n---\n\n## Game Components\n\n- **Life Points (LP)**:\n  - Represents each player's health status.\n  - Both players start with **20 LP**.\n  - LP cannot exceed **20 LP** at any time.\n\n- **Number Deck**:\n  - A set of cards numbered **1** through **10**.\n  - Used for drawing numbers during the game.\n\n- **Discard Pile**:\n  - A place to store numbers that have been used.\n  - When the deck is depleted, shuffle the discard pile to form a new deck.\n\n---\n\n## Turns\n\n### Turn Order\n\n- Players decide who takes the first turn (e.g., by coin toss).\n- Turns alternate between Player 1 and Player 2.\n\n### Turn Structure\n\n1. **Draw Phase**:\n   - The active player draws the top number from the number deck.\n\n2. **Action Phase**:\n   - The player chooses to either:\n     - **Attack** the opponent.\n     - **Heal** themselves.\n   - The drawn number is used to execute the chosen action.\n\n3. **Discard Phase**:\n   - Place the used number into the discard pile.\n\n4. **End Phase**:\n   - Check for a win condition.\n   - If no player has won, the turn passes to the opponent.\n\n---\n\n## Rules and Mechanics\n\n### Drawing Numbers\n\n- At the beginning of each turn, the player must draw one number from the top of the deck.\n- If the deck is empty:\n  - Shuffle the discard pile to form a new deck.\n  - Continue drawing from the new deck.\n\n### Actions\n\n#### Attack\n\n- Reduces the opponent's LP by the **full value** of the drawn number.\n- Example:\n  - If you draw a **7** and choose to attack, your opponent loses **7 LP**.\n\n#### Heal\n\n- Increases your own LP by **half** of the drawn number's value, rounded down.\n- Example:\n  - If you draw a **5** and choose to heal, you gain **2 LP** (since 5 / 2 = 2.5, rounded down to 2).\n\n### Life Points Management\n\n- A player's LP cannot exceed **20 LP**.\n- If a player's LP falls to **0 LP** or below, they lose the game immediately.\n\n### Game End Conditions\n\n- **Victory**:\n  - Achieved when the opponent's LP is reduced to **0 LP** or below.\n- **No Draws**:\n  - The game continues until one player wins; there are no conditions for a draw.\n\n### Restrictions\n\n- Players **must** choose to either attack or heal each turn.\n- **Skipping a turn** is not allowed.\n\n---\n\n## Scoring\n\n- **Win/Loss Outcome**:\n  - The game is won by reducing your opponent's LP to zero or below.\n  - The game is lost if your own LP is reduced to zero or below.\n- **No Point System**:\n  - There are no cumulative points; the focus is solely on each player's current LP.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Initial Setup\n\n- **Player 1 LP**: 20\n- **Player 2 LP**: 20\n- **Deck**: Numbers 1 through 10, shuffled.\n\n---\n\n#### Turn 1: Player 1\n\n- **Draws**: **7**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **7 LP** (20 LP → **13 LP**).\n- **Discard**: Place **7** into the discard pile.\n\n#### Turn 2: Player 2\n\n- **Draws**: **4**\n- **Action**: Chooses to **Heal**.\n- **Effect**:\n  - Player 2 gains **2 LP** (half of 4), up to a maximum of **15 LP**.\n- **Discard**: Place **4** into the discard pile.\n\n#### Turn 3: Player 1\n\n- **Draws**: **9**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **9 LP** (15 LP → **6 LP**).\n- **Discard**: Place **9** into the discard pile.\n\n#### Turn 4: Player 2\n\n- **Draws**: **5**\n- **Action**: Chooses to **Heal**.\n- **Effect**:\n  - Player 2 gains **2 LP** (half of 5), for a total of **8 LP**.\n- **Discard**: Place **5** into the discard pile.\n\n#### Turn 5: Player 1\n\n- **Draws**: **3**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **3 LP** (8 LP → **5 LP**).\n- **Discard**: Place **3** into the discard pile.\n\n#### Turn 6: Player 2\n\n- **Draws**: **10**\n- **Action**: Chooses to **Heal**.\n- **Effect**:\n  - Player 2 gains **5 LP** (half of 10), up to a total of **10 LP**.\n- **Discard**: Place **10** into the discard pile.\n\n#### Turn 7: Player 1\n\n- **Draws**: **2**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **2 LP** (10 LP → **8 LP**).\n- **Discard**: Place **2** into the discard pile.\n\n#### Turn 8: Player 2\n\n- **Draws**: **6**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 1 loses **6 LP** (20 LP → **14 LP**).\n- **Discard**: Place **6** into the discard pile.\n\n#### Turn 9: Player 1\n\n- **Draws**: **1**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **1 LP** (8 LP → **7 LP**).\n- **Discard**: Place **1** into the discard pile.\n\n#### Turn 10: Player 2\n\n- **Draws**: **8**\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 1 loses **8 LP** (14 LP → **6 LP**).\n- **Discard**: Place **8** into the discard pile.\n\n#### Turn 11: Player 1\n\n- **Draws**: **Remaining number is 9** (since all other numbers have been drawn)\n- **Action**: Chooses to **Attack**.\n- **Effect**:\n  - Player 2 loses **9 LP** (7 LP → **-2 LP**).\n- **Discard**: Place **9** into the discard pile.\n\n**Game End**: Player 2's LP is below zero. **Player 1 wins the game!**\n\n---\n\n## Command-Line Interaction Example\n\n*Below is a sample of how the game might proceed in a command-line interface.*\n\n---\n\n**[Start of Game]**\n\n**Player 1's Turn**\n\n- **System**: \"Press Enter to draw a number.\"\n- **Player 1 presses Enter**.\n- **System**: \"You drew a **7**.\"\n- **System**: \"Do you want to (A)ttack or (H)eal?\"\n- **Player 1 inputs**: `A`\n- **System**: \"You chose to Attack.\"\n- **System**: \"Player 2 loses 7 LP (20 LP → 13 LP).\"\n\n---\n\n**Player 2's Turn**\n\n- **System**: \"Press Enter to draw a number.\"\n- **Player 2 presses Enter**.\n- **System**: \"You drew a **4**.\"\n- **System**: \"Do you want to (A)ttack or (H)eal?\"\n- **Player 2 inputs**: `H`\n- **System**: \"You chose to Heal.\"\n- **System**: \"You gain 2 LP (13 LP → 15 LP).\"\n\n---\n\n*...game continues with similar prompts and updates until a player wins.*\n\n---\n\n## Strategy Tips\n\n- **Attack vs. Heal**:\n  - **Early Game**: Attacking can quickly lower your opponent's LP, putting you ahead.\n  - **Low LP**: Healing can keep you in the game longer, providing opportunities for a comeback.\n- **Number Value**:\n  - **High Numbers**: More impactful when used to attack.\n  - **Low Numbers**: May be more beneficial when used to heal, conserving high numbers for attacks.\n- **Predict Opponent's Moves**:\n  - Anticipate whether your opponent might heal or attack, and adjust your strategy accordingly.\n\n---\n\n## Final Notes\n\n**Number Duel** is designed to be quick to play and simple to code in a command-line interface. The game balances luck and strategy, allowing skilled players to make tactical decisions that can consistently lead to victory over less experienced opponents. With straightforward rules and a clear win condition, the game ensures engaging and decisive matches without the possibility of a draw.\n\nEnjoy the duel and may the best strategist win!",
    "# Double or Nothing\n\n## Objective\n\nBe the first player to reach **exactly 10 points** by strategically choosing to either add to or multiply your current score without exceeding the target score.\n\n## Setup\n\n- **Target Score**: 10 points.\n- **Starting Score**: Both players begin with 0 points.\n- **Player Order**: Decide who goes first by mutual agreement or a coin toss.\n  \nNo physical components are needed; players track scores mentally or write them down. The game is played in a command-line interface where players enter their choices each turn.\n\n## Game Components\n\n- **Player Scores**: Numerical values starting at 0 for each player.\n- **Actions**: On each turn, players choose one of the following actions:\n  - `Add 1`: Increment your current score by 1 point.\n  - `Double`: Multiply your current score by 2.\n  \nThese actions allow players to strategically increase their scores to reach the target.\n\n## Turns\n\n- Players take **alternate turns** starting with the first player.\n- On their turn, a player must choose one of the two actions:\n  - **Add 1** to their current score.\n  - **Double** their current score.\n- After performing the action, the player's new score is updated.\n- The game continues with turns alternating between players.\n\n## Rules and Mechanics\n\n1. **Choosing Actions**:\n   - **Add 1**:\n     - Increases the player's score by 1 point.\n   - **Double**:\n     - Multiplies the player's current score by 2.\n     - If doubling would result in a score **exceeding 10**, this action is **not allowed**, and the player must choose `Add 1` instead.\n     \n2. **Winning the Game**:\n   - The first player to reach **exactly 10 points** wins the game.\n   \n3. **Exceeding the Target Score**:\n   - Players **cannot** perform an action that would cause their score to exceed 10.\n   - If both actions would cause the player's score to exceed 10, the player **loses their turn**, and play passes to the opponent.\n   \n4. **No Further Moves**:\n   - If **both players** are unable to make a valid move on their respective turns (i.e., any action would exceed 10), the **player whose turn it is next loses the game**. This ensures the game cannot end in a draw.\n\n## Scoring\n\n- **Win Condition**: Achieve a score of exactly 10 points.\n- **No Points System**: The game does not use a point-based scoring system beyond reaching the target score.\n- **Victory**: Declared when a player reaches 10 points.\n\n## Examples\n\n### Example Game Play\n\n**Starting Scores**:\n- Player A: 0 points\n- Player B: 0 points\n\n#### Turn 1:\n- **Player A's Turn**:\n  - Chooses to `Add 1`.\n  - New score: 0 + 1 = **1**\n  \n#### Turn 2:\n- **Player B's Turn**:\n  - Chooses to `Double`.\n  - New score: 0 * 2 = **0** (Doubling zero remains zero)\n  \n#### Turn 3:\n- **Player A's Turn**:\n  - Chooses to `Double`.\n  - New score: 1 * 2 = **2**\n  \n#### Turn 4:\n- **Player B's Turn**:\n  - Chooses to `Add 1`.\n  - New score: 0 + 1 = **1**\n  \n#### Turn 5:\n- **Player A's Turn**:\n  - Chooses to `Double`.\n  - New score: 2 * 2 = **4**\n  \n#### Turn 6:\n- **Player B's Turn**:\n  - Chooses to `Double`.\n  - New score: 1 * 2 = **2**\n  \n#### Turn 7:\n- **Player A's Turn**:\n  - Chooses to `Double`.\n  - New score: 4 * 2 = **8**\n  \n#### Turn 8:\n- **Player B's Turn**:\n  - Chooses to `Add 1`.\n  - New score: 2 + 1 = **3**\n  \n#### Turn 9:\n- **Player A's Turn**:\n  - Cannot `Double` (8 * 2 = 16 exceeds 10)\n  - Chooses to `Add 1`.\n  - New score: 8 + 1 = **9**\n  \n#### Turn 10:\n- **Player B's Turn**:\n  - Chooses to `Double`.\n  - New score: 3 * 2 = **6**\n  \n#### Turn 11:\n- **Player A's Turn**:\n  - Cannot `Double` (9 * 2 = 18 exceeds 10)\n  - Chooses to `Add 1`.\n  - New score: 9 + 1 = **10**\n  - **Player A wins!**\n\n### Strategic Considerations\n\n- **Planning Ahead**: Players should anticipate future moves to avoid being unable to act.\n- **Balancing Actions**: Deciding when to `Double` for rapid progress and when to `Add 1` to avoid overshooting the target is crucial.\n- **Forcing Opponent's Hand**: Players can make moves that limit the opponent's options on their next turn.\n\n## Command-Line Interaction Example\n\nHere is how the game might look in a command-line interface:\n\n```\nGame Start! Target Score: 10\nPlayer A's Turn:\n- Current Score: 0\nChoose your action: (1) Add 1 or (2) Double\n> 1\nPlayer A adds 1. New Score: 1\n\nPlayer B's Turn:\n- Current Score: 0\nChoose your action: (1) Add 1 or (2) Double\n> 2\nPlayer B doubles their score. New Score: 0\n\nPlayer A's Turn:\n- Current Score: 1\nChoose your action: (1) Add 1 or (2) Double\n> 2\nPlayer A doubles their score. New Score: 2\n\nPlayer B's Turn:\n- Current Score: 0\nChoose your action: (1) Add 1 or (2) Double\n> 1\nPlayer B adds 1. New Score: 1\n\n... [Game continues as in the example above] ...\n\nPlayer A's Turn:\n- Current Score: 9\nChoose your action: (1) Add 1 or (2) Double\n> 1\nPlayer A adds 1. New Score: 10\nCongratulations, Player A! You reached 10 and won the game!\n```\n\n## Conclusion\n\n**Double or Nothing** is a simple yet strategic game that involves mathematical planning and foresight. It is easy to learn and quick to play, making it ideal for a command-line interface. Players must carefully choose when to `Add 1` or `Double` their score to reach the target before their opponent.\n\nEnjoy the game and may the best strategist win!",
    "# Game Name: Pattern Builder\n\n## Objective\n\nBe the first player to collect a set of four numbers that can form an arithmetic progression. Players must strategically select numbers to build their sequences while preventing their opponent from completing theirs. An arithmetic progression is a sequence of numbers such that the difference between consecutive terms is constant.\n\n## Setup\n\n1. **Available Numbers**: A shared pool of numbers ranging from 1 to 9.\n2. **Player Sequences**: Each player has their own sequence (initially empty) to which they will add numbers during the game.\n3. **Starting Player**: Decide who goes first (e.g., coin toss, random selection).\n\n## Game Components\n\n- **Numbers Pool**: The integers from 1 to 9, each number can only be selected once per game.\n- **Player Sequences**: Lists where players record their selected numbers.\n- **Turn Indicator**: Keeps track of whose turn it is.\n\n## Turns\n\n1. **Turn Order**: Players alternate turns starting with the designated first player.\n2. **Actions During a Turn**:\n   - **Select a Number**: Choose any remaining number from the available pool.\n   - **Update Sequence**: Add the selected number to your sequence.\n3. **Turn Progression**: After a player completes their action, the turn passes to the opponent.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - On your turn, you must select one number from the available pool.\n   - You cannot select a number that has already been chosen by either player.\n2. **Building Sequences**:\n   - Add the selected number to your sequence.\n   - Your sequence can be rearranged at any time to form potential arithmetic progressions.\n3. **Winning the Game**:\n   - The first player to have four numbers in their sequence that can be arranged into an arithmetic progression wins.\n   - An arithmetic progression must have a common difference between consecutive numbers (e.g., 2, 4, 6, 8 with a common difference of 2).\n4. **Preventing Opponent's Progression**:\n   - Players may strategically select numbers to block their opponent from forming an arithmetic progression.\n5. **No Draws**:\n   - There is always a winner; the game continues until one player forms a valid arithmetic progression of four numbers.\n\n## Scoring\n\n- **Winning**: The player who first creates a valid arithmetic progression of four numbers wins the game.\n- **No Point System**: There is no point tracking; the focus is on achieving the objective before the opponent.\n\n## Examples\n\n### Example Game Play\n\n**Available Numbers at Start**: 1, 2, 3, 4, 5, 6, 7, 8, 9\n\n#### Turn 1:\n- **Player 1** selects **5**.\n  - **Player 1's Sequence**: [5]\n  - **Available Numbers**: 1, 2, 3, 4, 6, 7, 8, 9\n\n#### Turn 2:\n- **Player 2** selects **3**.\n  - **Player 2's Sequence**: [3]\n  - **Available Numbers**: 1, 2, 4, 6, 7, 8, 9\n\n#### Turn 3:\n- **Player 1** selects **7**.\n  - **Player 1's Sequence**: [5, 7]\n  - **Available Numbers**: 1, 2, 4, 6, 8, 9\n\n#### Turn 4:\n- **Player 2** selects **1**.\n  - **Player 2's Sequence**: [3, 1]\n  - **Available Numbers**: 2, 4, 6, 8, 9\n\n#### Turn 5:\n- **Player 1** selects **9**.\n  - **Player 1's Sequence**: [5, 7, 9]\n  - **Available Numbers**: 2, 4, 6, 8\n\n#### Turn 6:\n- **Player 2** selects **4**.\n  - **Player 2's Sequence**: [3, 1, 4]\n  - **Available Numbers**: 2, 6, 8\n\n#### Turn 7:\n- **Player 1** selects **3**.\n  - **Invalid Move**: **3** has already been selected by **Player 2**.\n  - **Corrected Action**: **Player 1** selects **2** instead.\n  - **Player 1's Sequence**: [5, 7, 9, 2]\n  - **Available Numbers**: 6, 8\n\n#### Checking for Win:\n- **Player 1's Sequence**: [2, 5, 7, 9]\n  - Rearranged to [2, 5, 8, 11] is invalid because 8 and 11 are not in the pool.\n  - Correct rearrangement: [2, 5, 7, 9]\n    - Differences: 5-2=3, 7-5=2, 9-7=2 (Not consistent)\n- **No win yet**.\n\n#### Turn 8:\n- **Player 2** selects **6**.\n  - **Player 2's Sequence**: [3, 1, 4, 6]\n  - **Available Numbers**: 8\n\n#### Checking for Win:\n- **Player 2's Sequence**: [1, 3, 4, 6]\n  - Rearranged to [1, 3, 4, 6]\n    - Differences: 3-1=2, 4-3=1, 6-4=2 (Not consistent)\n- **No win yet**.\n\n#### Turn 9:\n- **Player 1** selects **8**.\n  - **Player 1's Sequence**: [5, 7, 9, 2, 8]\n  - **Available Numbers**: None\n\n#### Checking for Win:\n- **Player 1's Sequence**: [2, 5, 8, 11]\n  - Since 11 is not available, try another combination.\n- Try [2, 5, 8, 9]\n  - Differences: 5-2=3, 8-5=3, 9-8=1 (Not consistent)\n- Try [5, 7, 9, 2]\n  - Rearranged to [2, 5, 7, 9]\n    - Differences: 5-2=3, 7-5=2, 9-7=2 (Not consistent)\n- **No win yet**.\n\n#### Turn 10:\n- **Player 2** cannot select any more numbers.\n\n#### End of Game:\n- Since all numbers have been selected and neither player has formed an arithmetic progression of four numbers, the game continues into a tie-breaker round or sudden death based on predefined agreements (e.g., using the sequences built to form the longest possible arithmetic progression).\n\n## Command-Line Interaction Sample\n\n### Start of Game\n```\nAvailable Numbers: 1 2 3 4 5 6 7 8 9\nPlayer 1's Sequence: []\nPlayer 2's Sequence: []\n```\n\n### Player Turns\n\n**Player 1's Turn**\n```\nPlayer 1, select a number: 5\nAvailable Numbers after selection: 1 2 3 4 6 7 8 9\nPlayer 1's Sequence: [5]\n```\n\n**Player 2's Turn**\n```\nPlayer 2, select a number: 3\nAvailable Numbers after selection: 1 2 4 6 7 8 9\nPlayer 2's Sequence: [3]\n```\n\n*(Subsequent turns continue in this pattern)*\n\nWhen a player forms an arithmetic progression:\n\n**Player Announcement**\n```\nPlayer 1 has formed an arithmetic progression: [3, 5, 7, 9]\nPlayer 1 wins the game!\n```\n\n## Strategic Tips\n\n- **Plan Ahead**: Keep track of which numbers are available and which ones your opponent is collecting.\n- **Blocking**: If you notice your opponent is close to completing an arithmetic progression, consider selecting numbers they need.\n- **Multiple Options**: Try to collect numbers that give you multiple ways to form an arithmetic progression.\n- **Flexibility**: Remember you can rearrange your sequence to find a valid progression.\n\n## Conclusion\n\n\"Pattern Builder\" is a simple yet strategic game that challenges players to think ahead and anticipate their opponent's moves. Its straightforward rules make it easy to learn and play in a command-line interface, while the strategic depth ensures engaging and competitive gameplay.\n\n---\n\nEnjoy playing \"Pattern Builder\" and may the best strategist win!",
    "# Dual Digits: Rule Book\n\n## Objective\n\n**Dual Digits** is a two-player, turn-based strategy game. The primary goal is to be the first player to reduce the shared number exactly to zero by strategically subtracting numbers while adhering to the game rules. Victory is achieved by forcing the opponent into a position where they cannot make a valid move without causing the shared number to go below zero.\n\n---\n\n## Setup\n\n1. **Shared Number Initialization**: The game starts with a shared number set to **25**.\n2. **Player Selection**: Decide which player will take the first turn (Player 1 and Player 2). This can be determined randomly or by mutual agreement.\n\n---\n\n## Game Components\n\n- **Shared Number**: A single integer value that both players manipulate. It starts at **25** and is displayed prominently after each turn.\n- **Valid Subtraction Numbers**: Integers **1**, **2**, **3**, and **4**. Players use these numbers to subtract from the shared number.\n\n---\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with Player 1.\n- **Turn Actions**:\n  1. **Choose a Number to Subtract**: On your turn, select a valid number (1-4) to subtract from the shared number.\n  2. **Apply the Subtraction**: Subtract the chosen number from the shared number.\n  3. **Update and Announce**: Update the shared number and announce the new value to your opponent.\n- **Restrictions**:\n  - **Forbidden Number**: You cannot choose the same number that your opponent chose on their immediately previous turn.\n\n---\n\n## Rules and Mechanics\n\n1. **Valid Numbers**: On each turn, you may subtract **only one** of the numbers **1**, **2**, **3**, or **4**.\n2. **Forbidden Number Rule**: \n   - You **cannot** subtract the same number your opponent subtracted on their last turn.\n   - Example: If your opponent subtracted **3** on their last turn, you cannot subtract **3** on your current turn.\n3. **Winning the Game**:\n   - **Exact Zero**: The shared number must be reduced to **exactly zero** to win.\n   - **Avoid Negative Numbers**: If subtracting your chosen number would cause the shared number to go below zero, you **cannot** make that move.\n   - **Forced Loss**: If no valid moves are possible (all allowable numbers would cause the shared number to go below zero or are forbidden), the player **loses** the game.\n4. **Allowed and Forbidden Moves**:\n   - **Allowed Moves**: Any valid number (1-4) that wasn't forbidden by the opponent's last move and that doesn't reduce the shared number below zero.\n   - **Forbidden Moves**: Choosing the same number your opponent chose on their last turn or any move that would reduce the shared number below zero.\n\n---\n\n## Scoring\n\n- **Victory**: The player who reduces the shared number to exactly zero wins the game.\n- **Defeat**: A player loses if:\n  - They cannot make a valid move on their turn.\n  - They cause the shared number to go below zero.\n\n---\n\n## Examples\n\nBelow are example scenarios illustrating how the game is played in a command-line interface.\n\n### Example Game Play\n\n**Starting Shared Number**: 25\n\n#### Turn 1:\n- **Player 1's Turn**:\n  - **Previous Opponent's Number**: None (first turn).\n  - **Allowed Numbers**: 1, 2, 3, 4.\n  - **Player 1 Chooses**: 3.\n  - **Calculation**: 25 - 3 = 22.\n  - **Announce**: \"I subtract 3. The new shared number is 22.\"\n\n#### Turn 2:\n- **Player 2's Turn**:\n  - **Previous Opponent's Number**: 3.\n  - **Forbidden Number**: 3.\n  - **Allowed Numbers**: 1, 2, 4.\n  - **Player 2 Chooses**: 2.\n  - **Calculation**: 22 - 2 = 20.\n  - **Announce**: \"I subtract 2. The new shared number is 20.\"\n\n#### Turn 3:\n- **Player 1's Turn**:\n  - **Previous Opponent's Number**: 2.\n  - **Forbidden Number**: 2.\n  - **Allowed Numbers**: 1, 3, 4.\n  - **Player 1 Chooses**: 4.\n  - **Calculation**: 20 - 4 = 16.\n  - **Announce**: \"I subtract 4. The new shared number is 16.\"\n\n#### Turn 4:\n- **Player 2's Turn**:\n  - **Previous Opponent's Number**: 4.\n  - **Forbidden Number**: 4.\n  - **Allowed Numbers**: 1, 2, 3.\n  - **Player 2 Chooses**: 3.\n  - **Calculation**: 16 - 3 = 13.\n  - **Announce**: \"I subtract 3. The new shared number is 13.\"\n\n#### Turn 5:\n- **Player 1's Turn**:\n  - **Previous Opponent's Number**: 3.\n  - **Forbidden Number**: 3.\n  - **Allowed Numbers**: 1, 2, 4.\n  - **Player 1 Chooses**: 2.\n  - **Calculation**: 13 - 2 = 11.\n  - **Announce**: \"I subtract 2. The new shared number is 11.\"\n\n#### Turn 6:\n- **Player 2's Turn**:\n  - **Previous Opponent's Number**: 2.\n  - **Forbidden Number**: 2.\n  - **Allowed Numbers**: 1, 3, 4.\n  - **Player 2 Chooses**: 4.\n  - **Calculation**: 11 - 4 = 7.\n  - **Announce**: \"I subtract 4. The new shared number is 7.\"\n\n#### Turn 7:\n- **Player 1's Turn**:\n  - **Previous Opponent's Number**: 4.\n  - **Forbidden Number**: 4.\n  - **Allowed Numbers**: 1, 2, 3.\n  - **Player 1 Chooses**: 3.\n  - **Calculation**: 7 - 3 = 4.\n  - **Announce**: \"I subtract 3. The new shared number is 4.\"\n\n#### Turn 8:\n- **Player 2's Turn**:\n  - **Previous Opponent's Number**: 3.\n  - **Forbidden Number**: 3.\n  - **Allowed Numbers**: 1, 2, 4.\n  - **Player 2 Chooses**: 1.\n  - **Calculation**: 4 - 1 = 3.\n  - **Announce**: \"I subtract 1. The new shared number is 3.\"\n\n#### Turn 9:\n- **Player 1's Turn**:\n  - **Previous Opponent's Number**: 1.\n  - **Forbidden Number**: 1.\n  - **Allowed Numbers**: 2, 3, 4.\n  - **Player 1 Chooses**: 2.\n  - **Calculation**: 3 - 2 = 1.\n  - **Announce**: \"I subtract 2. The new shared number is 1.\"\n\n#### Turn 10:\n- **Player 2's Turn**:\n  - **Previous Opponent's Number**: 2.\n  - **Forbidden Number**: 2.\n  - **Allowed Numbers**: 1, 3, 4.\n  - **Possible Moves**:\n    - **Subtract 1**: 1 - 1 = 0 (Valid, game continues).\n    - **Subtract 3 or 4**: Would cause shared number to go below zero (Invalid).\n  - **Player 2 Chooses**: 1.\n  - **Calculation**: 1 - 1 = 0.\n  - **Announce**: \"I subtract 1. The new shared number is 0.\"\n  - **Result**: Player 2 wins by reducing the shared number to exactly zero.\n\n---\n\n## Strategic Tips\n\n- **Anticipate Opponent's Options**: Keep track of which numbers you are forbidding your opponent from using, and plan your moves to limit their options.\n- **Control the Forbidden Number**: By wisely choosing which number to subtract, you can force your opponent into a position where they have fewer advantageous moves.\n- **Avoid Reducing to Unfavorable Numbers**: Be cautious not to leave the shared number at a value that allows your opponent to win on their next turn.\n\n---\n\n## Command-Line Interaction Sample\n\nHere's how the game might look in a command-line interface:\n\n```plaintext\n=== Dual Digits ===\nStarting Shared Number: 25\n\nPlayer 1's Turn:\nPrevious Opponent's Number: None\nAllowed Numbers to Subtract: 1, 2, 3, 4\nEnter the number you wish to subtract: 3\nYou subtracted 3. New Shared Number: 22\n\nPlayer 2's Turn:\nPrevious Opponent's Number: 3\nAllowed Numbers to Subtract: 1, 2, 4\nEnter the number you wish to subtract: 2\nYou subtracted 2. New Shared Number: 20\n\n...\n\nPlayer 2's Turn:\nPrevious Opponent's Number: 2\nAllowed Numbers to Subtract: 1, 3, 4\nEnter the number you wish to subtract: 1\nYou subtracted 1. New Shared Number: 0\nCongratulations! Player 2 wins!\n```\n\n---\n\n## Conclusion\n\n**Dual Digits** is a simple yet strategically deep game that tests players' foresight and planning abilities. By carefully choosing which numbers to subtract and which numbers to forbid, skilled players can control the flow of the game and outmaneuver their opponents. Enjoy the challenge and may the best strategist win!",
    "# Non-Consecutive\n\n## Objective\n\nBe the last player able to select a number from the list while following the adjacency rule. The game is won by forcing your opponent into a position where they have no valid moves remaining.\n\n## Setup\n\n- **Players**: Two players.\n- **Number List**: Create a list of numbers from **1** to **20** arranged in ascending order.\n\n## Game Components\n\n- **Number List**: A sequential list of integers from **1** to **20**. Each number can be selected only once and has the following attributes:\n  - **Value**: The integer itself (1-20).\n  - **Status**: `Available` or `Selected`. Initially, all numbers are `Available`.\n\n## Turns\n\n- **Turn Order**: Players decide who goes first (e.g., by coin toss). Turns alternate between players.\n- **Actions Per Turn**:\n  1. **Select a Number**: Choose an `Available` number from the list, following the adjacency rule.\n  2. **Update Status**: Mark the chosen number as `Selected`.\n  3. **Update Adjacent Numbers**: Identify numbers adjacent (numerically consecutive) to the selected number and remove them from future play (they become `Unavailable`).\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **First Move**: The first player can select any number from **1** to **20**.\n2. **Adjacency Rule**:\n   - A number is considered **adjacent** if it is exactly one more or one less than any number that has been `Selected` by either player.\n   - `Unavailable` numbers cannot be selected.\n3. **Selecting Numbers**:\n   - On your turn, you must select an `Available` number that is **not adjacent** to any `Selected` numbers.\n   - If no such number exists, you lose your turn and the game.\n4. **Winning the Game**:\n   - If a player cannot make a valid move on their turn, they lose.\n   - The opposing player is declared the winner.\n\n### Example of Adjacency\n\n- If the number **7** is `Selected`, numbers **6** and **8** become `Unavailable`.\n- If both **7** and **10** are `Selected`, numbers **6**, **8**, **9**, and **11** are `Unavailable`.\n\n## Scoring\n\n- **Winning**: The winner is the player who successfully forces their opponent into a position with no valid moves.\n- **No Points System**: The game does not use a points system; it is a win/loss outcome based on strategic play.\n\n## Examples\n\n### Sample Game Play\n\n#### Initial Setup\n\n- **Available Numbers**: 1 through 20.\n\n#### Turn 1: Player 1\n\n- **Action**: Selects **10**.\n- **Update**:\n  - **Selected Numbers**: 10.\n  - **Unavailable Numbers**: 9 and 11 (adjacent to 10).\n- **Remaining Available Numbers**: 1-8, 12-20 (excluding 9 and 11).\n\n#### Turn 2: Player 2\n\n- **Action**: Selects **5**.\n- **Update**:\n  - **Selected Numbers**: 5, 10.\n  - **Unavailable Numbers**: 4 and 6 (adjacent to 5), 9 and 11.\n- **Remaining Available Numbers**: 1-3, 7-8, 12-20 (excluding 4, 6, 9, 11).\n\n#### Turn 3: Player 1\n\n- **Action**: Selects **14**.\n- **Update**:\n  - **Selected Numbers**: 5, 10, 14.\n  - **Unavailable Numbers**: 4, 6, 9, 11, **13** and **15** (adjacent to 14).\n- **Remaining Available Numbers**: 1-3, 7-8, 12, 16-20.\n\n#### Turn 4: Player 2\n\n- **Action**: Selects **2**.\n- **Update**:\n  - **Selected Numbers**: 2, 5, 10, 14.\n  - **Unavailable Numbers**: **1** and **3** (adjacent to 2), 4, 6, 9, 11, 13, 15.\n- **Remaining Available Numbers**: 7-8, 12, 16-20.\n\n#### Turn 5: Player 1\n\n- **Action**: Selects **18**.\n- **Update**:\n  - **Selected Numbers**: 2, 5, 10, 14, 18.\n  - **Unavailable Numbers**: 1, 3, 4, 6, 9, 11, 13, 15, **17**, **19** (adjacent to 18).\n- **Remaining Available Numbers**: 7-8, 12, 16, 20.\n\n#### Turn 6: Player 2\n\n- **Action**: Selects **8**.\n- **Update**:\n  - **Selected Numbers**: 2, 5, 8, 10, 14, 18.\n  - **Unavailable Numbers**: 1, 3, 4, 6, **7**, **9**, 11, 13, 15, 17, 19.\n- **Remaining Available Numbers**: 12, 16, 20.\n\n#### Turn 7: Player 1\n\n- **Action**: Selects **12**.\n- **Update**:\n  - **Selected Numbers**: 2, 5, 8, 10, 12, 14, 18.\n  - **Unavailable Numbers**: 1, 3, 4, 6, 7, 9, **11**, **13**, 15, 17, 19.\n- **Remaining Available Numbers**: 16, 20.\n\n#### Turn 8: Player 2\n\n- **Action**: Selects **16**.\n- **Update**:\n  - **Selected Numbers**: 2, 5, 8, 10, 12, 14, 16, 18.\n  - **Unavailable Numbers**: 1, 3, 4, 6, 7, 9, 11, 13, **15**, **17**, 19.\n- **Remaining Available Number**: 20.\n\n#### Turn 9: Player 1\n\n- **Action**: Selects **20**.\n- **Update**:\n  - **Selected Numbers**: All numbers `Selected` or `Unavailable`.\n- **Remaining Available Numbers**: None.\n\n#### Result\n\n- **Player 2** has no valid moves.\n- **Player 1** wins the game.\n\n## Command-Line Interaction Example\n\n### Game Start\n\n```\nAvailable Numbers: 1-20\n\nPlayer 1's turn.\nEnter a number to select: 10\n\nPlayer 1 selected 10.\nNumbers 9 and 11 are now unavailable.\n```\n\n### Subsequent Turns\n\n```\nAvailable Numbers: 1-8, 12-20 (excluding 9 and 11)\n\nPlayer 2's turn.\nEnter a number to select: 5\n\nPlayer 2 selected 5.\nNumbers 4 and 6 are now unavailable.\n```\n\n### Game End\n\n```\nAvailable Numbers: 16, 20\n\nPlayer 1's turn.\nEnter a number to select: 20\n\nPlayer 1 selected 20.\nNumbers 19 and 21 are now unavailable (21 is beyond our list).\n\nNo numbers remaining.\nPlayer 2 has no valid moves.\n\nPlayer 1 wins the game!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Think several moves in advance to block your opponent's options.\n- **Control the Center**: Choosing central numbers can eliminate more of your opponent's potential moves.\n- **Avoid Early Traps**: Be cautious of selecting numbers that limit your own future options.\n\n## Summary\n\n\"Non-Consecutive\" is a simple yet strategic game that requires players to think ahead and carefully choose numbers to limit their opponent's choices while maximizing their own. With easy-to-understand rules and minimal components, it's perfect for quick and engaging gameplay in a command-line interface.\n\nHappy gaming!",
    "# Blockade: Rule Book\n\n## Objective\n\n**Blockade** is a strategic two-player, turn-based game played on a grid. The primary goal is to be the last player able to make a valid move. Players alternately place their blocks on the grid following specific placement rules. The player who forces their opponent into a position where they cannot place a block on their turn wins the game.\n\n---\n\n## Setup\n\n- **Game Board**: A 5x5 grid, consisting of 25 empty cells.\n- **Players**: Two players, designated as **Player 1** and **Player 2**.\n- **Starting Conditions**: The grid is empty at the start of the game. Players decide who goes first (e.g., by coin toss).\n\n---\n\n## Game Components\n\n- **Grid Cells**: Each cell can be empty or contain a player's block.\n- **Player Blocks**: Each player has an unlimited supply of their own blocks for placement:\n  - **Player 1** uses `X` to represent their blocks.\n  - **Player 2** uses `O` to represent their blocks.\n\n---\n\n## Turns\n\n- **Turn Order**: Players take turns alternately. The player designated to go first begins the game.\n- **Actions per Turn**: On their turn, a player must place one block (`X` or `O`) on an empty cell of the grid, adhering to the placement rules.\n- **Progression**: Turns continue until a player cannot make a valid move on their turn.\n\n---\n\n## Rules and Mechanics\n\n### Placement Rules\n\n1. **Empty Cell Requirement**: Blocks can only be placed on empty cells.\n2. **Adjacency Restriction**: A block **cannot** be placed on a cell that is adjacent (horizontally, vertically, or diagonally) to an opponent's block.\n   - **Adjacency** includes all eight surrounding cells around a given cell.\n3. **Own Blocks**: Blocks can be placed adjacent to the player's own blocks, provided they do not violate rule 2.\n\n### Game End Conditions\n\n- **Winning the Game**: A player wins if their opponent cannot place a block on their turn due to no valid cells being available.\n- **Losing the Game**: A player loses if they are unable to make a valid move on their turn.\n- **No Draws**: The game cannot end in a draw; play continues until one player wins.\n\n---\n\n## Scoring\n\n- **Single-Game Victory**: The winner is the player who forces their opponent into a position where they cannot make a valid move.\n- **Match Play (Optional)**:\n  - Players may agree to play multiple rounds.\n  - Keep track of victories, and the player with the most wins after a set number of rounds is the overall winner.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Initial Grid\n\nAll cells are empty at the start.\n\n```\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n```\n\n#### Turn 1: Player 1 (`X`)\n\n- **Action**: Places an `X` in the center cell (row 3, column 3).\n\n```\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n```\n\n#### Turn 2: Player 2 (`O`)\n\n- **Invalid Adjacent Cells**: Cannot place next to `X` at (3,3).\n- **Action**: Places an `O` at (1,1).\n\n```\n[O][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n```\n\n#### Turn 3: Player 1 (`X`)\n\n- **Invalid Cells**: Cannot place adjacent to `O` at (1,1).\n- **Action**: Places an `X` at (2,2), which is adjacent to their own block at (3,3).\n\n```\n[O][ ][ ][ ][ ]\n[ ][X][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n```\n\n#### Turn 4: Player 2 (`O`)\n\n- **Invalid Cells**: Cannot place adjacent to `X` blocks at (2,2) and (3,3).\n- **Action**: Places an `O` at (5,5).\n\n```\n[O][ ][ ][ ][ ]\n[ ][X][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][O]\n```\n\n#### Continuing the Game\n\nPlayers continue to alternate turns, placing their blocks while adhering to the placement rules. They must avoid cells adjacent to the opponent's blocks and strategically position their own to limit the opponent's options.\n\n#### End Game Scenario\n\nSuppose the grid reaches a state where Player 2 cannot make a valid move.\n\n- **Player 1's Last Move**:\n\n  - Places an `X` at (4,3).\n\n```\n[O][ ][ ][ ][ ]\n[ ][X][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][O]\n```\n\n- **Player 2's Turn**:\n\n  - No valid cells remain where `O` can be placed without being adjacent to an `X`.\n  - **Result**: Player 2 cannot make a move and loses the game.\n  - **Winner**: Player 1 (`X`).\n\n---\n\n## Command-Line Interaction Example\n\n### Game Start\n\n```\nWelcome to Blockade!\n\nPlayer 1 is 'X'\nPlayer 2 is 'O'\n\nPlayer 1 goes first.\n```\n\n### Turn Structure\n\n#### Player 1's Turn\n\n```\nCurrent Grid:\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n\nPlayer 1 ('X'), enter your move (row and column): 3 3\n\nPlaced 'X' at (3,3)\n```\n\n#### Player 2's Turn\n\n```\nCurrent Grid:\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][X][ ][ ]\n[ ][ ][ ][ ][ ]\n[ ][ ][ ][ ][ ]\n\nInvalid positions are adjacent to opponent's blocks.\n\nPlayer 2 ('O'), enter your move (row and column): 1 1\n\nPlaced 'O' at (1,1)\n```\n\n### Detecting Invalid Moves\n\nIf a player attempts to place a block in an invalid position:\n\n```\nPlayer 1 ('X'), enter your move (row and column): 1 2\n\nInvalid move! You cannot place next to an opponent's block.\n\nPlease choose a different position.\n```\n\n### Game Over\n\n```\nPlayer 2 ('O'), no valid moves remaining.\n\nPlayer 1 ('X') wins the game!\n\nGame Over.\n```\n\n---\n\n## Strategy Tips\n\n- **Control the Center**: Placing your blocks strategically can limit your opponent's options.\n- **Avoid Isolation**: Keep your blocks connected when possible to maximize your placement options.\n- **Block Opponent's Moves**: Position your blocks to create zones that restrict where your opponent can play.\n- **Plan Ahead**: Anticipate your opponent's potential moves and plan your placements to counter them.\n\n---\n\nEnjoy playing **Blockade** and may the best strategist win!",
    "# Secret Sum: A Two-Player Strategic Bidding Game\n\n## Objective\n\n**Secret Sum** is a turn-based bidding game where players compete over five rounds to win the most rounds by secretly selecting and revealing numbers. The primary goal is to outbid your opponent in each round without exceeding the limitations of your number set. The player who wins the most rounds emerges victorious. In the event of a tie in rounds won, the player with the lower total sum of chosen numbers wins the game. There are no possibilities for a draw.\n\n---\n\n## Setup\n\n1. **Rounds**: The game consists of **five rounds**.\n2. **Number Set**: Each player has a personal set of numbers from **1 to 5**. Each number can be used **only once** during the game.\n3. **Starting Condition**: Both players begin with their full set of numbers and zero rounds won.\n\n---\n\n## Game Components\n\n- **Number Sets**:\n  - **Player Number Sets**: Each player possesses the numbers **1**, **2**, **3**, **4**, and **5**.\n  - **Usage**: Numbers are used for bidding in each round and are removed from the player's set once used.\n\n- **Round Tracker**:\n  - Keeps track of the current round number from **1 to 5**.\n\n- **Scoreboard**:\n  - Records the number of rounds won by each player.\n  - Tracks the total sum of numbers each player has used.\n\n---\n\n## Turns\n\n- **Simultaneous Play**:\n  - Both players act concurrently in each round.\n  - There are no individual turns within a round; instead, each round consists of both players making their choices simultaneously.\n\n- **Round Structure**:\n  1. **Selection Phase**:\n     - Each player **secretly selects** a number from their remaining number set.\n  2. **Reveal Phase**:\n     - Both players **simultaneously reveal** their chosen number.\n  3. **Resolution Phase**:\n     - Determine the round winner based on the revealed numbers.\n     - Update the scoreboard and remove the used numbers from each player's set.\n\n- **Progression**:\n  - The game progresses to the next round after the Resolution Phase.\n  - This process repeats until all five rounds are completed.\n\n---\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Number Selection**:\n   - Players must choose a number from **1 to 5** that they have not used in previous rounds.\n   - Once a number is used, it cannot be selected again in subsequent rounds.\n\n2. **Winning a Round**:\n   - The player who reveals the **higher number** wins the round.\n   - If both players reveal the **same number**, the round is a **draw**, and neither player wins the round.\n\n3. **Scoring Rounds**:\n   - **Winning a Round**: The player earns **one point** for winning the round.\n   - **Drawn Rounds**: No points are awarded.\n\n4. **Game Victory Conditions**:\n   - **Primary Victory**: The player who wins the **most rounds** after all five rounds are completed wins the game.\n   - **Tie-Breaker**:\n     - If both players have won an equal number of rounds, the player with the **lower total sum** of their chosen numbers wins.\n     - If the total sums are also equal (extremely rare), proceed to a **sudden death round** using any remaining numbers.\n\n### Additional Mechanics\n\n- **Sudden Death Round** (Only if both rounds won and total sums are equal):\n  - Players select from any unused numbers.\n  - Normal rules apply.\n  - Continue until the tie is broken.\n\n- **Strategic Considerations**:\n  - Players must balance the use of high numbers (to win rounds) against the risk of having a higher total sum in the event of a tie.\n  - Anticipating the opponent's choices is crucial for optimal play.\n\n---\n\n## Scoring\n\n- **Rounds Won**:\n  - Tracked individually for each player.\n  - Determines the primary winner.\n\n- **Total Sum of Chosen Numbers**:\n  - Calculated by adding up the numbers a player has used throughout the game.\n  - Used as a tie-breaker if necessary.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Players**: Alice and Bob\n\n**Initial Number Sets**:\n- Alice: {1, 2, 3, 4, 5}\n- Bob: {1, 2, 3, 4, 5}\n\n---\n\n**Round 1**:\n\n- **Selection**:\n  - Alice selects **4**\n  - Bob selects **5**\n\n- **Reveal**:\n  - Alice reveals **4**\n  - Bob reveals **5**\n\n- **Resolution**:\n  - Bob wins the round (5 > 4)\n  - Used numbers are removed:\n    - Alice's remaining numbers: {1, 2, 3, 5}\n    - Bob's remaining numbers: {1, 2, 3, 4}\n\n- **Scoreboard**:\n  - Alice: 0 rounds won, sum of numbers used: 4\n  - Bob: 1 round won, sum of numbers used: 5\n\n---\n\n**Round 2**:\n\n- **Selection**:\n  - Alice selects **5**\n  - Bob selects **4**\n\n- **Reveal**:\n  - Alice reveals **5**\n  - Bob reveals **4**\n\n- **Resolution**:\n  - Alice wins the round (5 > 4)\n  - Used numbers are removed:\n    - Alice's remaining numbers: {1, 2, 3}\n    - Bob's remaining numbers: {1, 2, 3}\n\n- **Scoreboard**:\n  - Alice: 1 round won, sum of numbers used: 9\n  - Bob: 1 round won, sum of numbers used: 9\n\n---\n\n**Round 3**:\n\n- **Selection**:\n  - Alice selects **3**\n  - Bob selects **3**\n\n- **Reveal**:\n  - Both reveal **3**\n\n- **Resolution**:\n  - Round is a draw (3 = 3)\n  - Used numbers are removed:\n    - Alice's remaining numbers: {1, 2}\n    - Bob's remaining numbers: {1, 2}\n\n- **Scoreboard**:\n  - Alice: 1 round won, sum of numbers used: 12\n  - Bob: 1 round won, sum of numbers used: 12\n\n---\n\n**Round 4**:\n\n- **Selection**:\n  - Alice selects **2**\n  - Bob selects **1**\n\n- **Reveal**:\n  - Alice reveals **2**\n  - Bob reveals **1**\n\n- **Resolution**:\n  - Alice wins the round (2 > 1)\n  - Used numbers are removed:\n    - Alice's remaining number: {1}\n    - Bob's remaining number: {2}\n\n- **Scoreboard**:\n  - Alice: 2 rounds won, sum of numbers used: 14\n  - Bob: 1 round won, sum of numbers used: 13\n\n---\n\n**Round 5**:\n\n- **Selection**:\n  - Alice selects **1**\n  - Bob selects **2**\n\n- **Reveal**:\n  - Alice reveals **1**\n  - Bob reveals **2**\n\n- **Resolution**:\n  - Bob wins the round (2 > 1)\n  - Used numbers are removed:\n    - Alice's remaining numbers: { }\n    - Bob's remaining numbers: { }\n\n- **Scoreboard**:\n  - Alice: 2 rounds won, sum of numbers used: 15\n  - Bob: 2 rounds won, sum of numbers used: 15\n\n---\n\n**Game Conclusion**:\n\n- **Rounds Won**:\n  - Alice: 2 rounds\n  - Bob: 2 rounds\n  - Drawn rounds: 1\n\n- **Total Sum of Numbers Used**:\n  - Alice: 15\n  - Bob: 15\n\n- **Tie-Breaker**:\n  - Since both the rounds won and the total sums are equal, proceed to a **sudden death round**.\n\n---\n\n**Sudden Death Round**:\n\n- **Selection**:\n  - Both players have no numbers left.\n  - Reset unused numbers: Since all numbers are used, players can choose any one number again.\n  - Alice selects **3**\n  - Bob selects **4**\n\n- **Reveal**:\n  - Alice reveals **3**\n  - Bob reveals **4**\n\n- **Resolution**:\n  - Bob wins the sudden death round (4 > 3)\n  - Bob wins the game.\n\n---\n\n### Command-Line Interaction Example\n\n**Round 1**:\n\n- **Prompt to Players**:\n  ```\n  Round 1:\n  Player Alice, select your number (1-5):\n  Player Bob, select your number (1-5):\n  ```\n\n- **Players Input Secretly**:\n  ```\n  (Alice inputs 4)\n  (Bob inputs 5)\n  ```\n\n- **Reveal**:\n  ```\n  Alice selected: 4\n  Bob selected: 5\n  ```\n\n- **Round Result**:\n  ```\n  Bob wins Round 1!\n  ```\n\n- **Updated Scores**:\n  ```\n  Rounds Won - Alice: 0, Bob: 1\n  Total Sum Used - Alice: 4, Bob: 5\n  Remaining Numbers - Alice: [1, 2, 3, 5], Bob: [1, 2, 3, 4]\n  ```\n\n*(The above interaction repeats similarly for subsequent rounds.)*\n\n---\n\n## Strategy Tips\n\n- **Anticipate Opponent's Choices**:\n  - Try to predict which numbers your opponent might play based on remaining numbers.\n  \n- **Manage High Numbers**:\n  - Use high numbers to secure important rounds, but be cautious of the total sum for tie-breakers.\n\n- **Plan for Tie-Breakers**:\n  - If you expect a tie in rounds won, aim for a lower total sum by conserving higher numbers.\n\n- **Balance Risk and Reward**:\n  - Decide when it's worth risking a draw by matching numbers or when to secure a win with a higher number.\n\n---\n\n## Conclusion\n\n**Secret Sum** is a quick and simple game that combines elements of strategy, prediction, and resource management. Its straightforward mechanics make it easy to code and play in a command-line interface, while the strategic depth ensures that skilled players can consistently outperform unskilled opponents. Enjoy the challenge of outsmarting your opponent in this unique and engaging two-player game!",
    "# **Factor Duel**\n\n## **Objective**\n\nBe the first player to force your opponent into a position where they cannot make a valid move. This occurs when the current number **N** becomes a prime number or reaches **1** on your opponent's turn, leaving them without any proper divisors to choose from.\n\n---\n\n## **Setup**\n\n1. **Starting Number**: The game begins with a positive integer **N**. The default starting value is **100**, but players can agree on any suitable positive integer to begin the game.\n2. **Player Order**: Decide which player goes first (Player 1 and Player 2). This can be determined by a coin toss or mutual agreement.\n\n---\n\n## **Game Components**\n\n- **Current Number (N)**: A shared number that changes throughout the game based on player actions.\n  - **Initial Value**: Set at the beginning of the game (e.g., **100**).\n  - **Range**: N is a positive integer greater than or equal to **1**.\n- **Proper Divisors**: Numbers used by players to reduce **N**.\n  - **Definition**: A proper divisor of **N** is a positive integer greater than **1** and less than **N** that divides **N** exactly (no remainder).\n\n---\n\n## **Turns**\n\n1. **Turn Order**: Players alternate turns starting with Player 1.\n2. **Player Actions**:\n   - **Choose a Proper Divisor**:\n     - Select a proper divisor of the current number **N**.\n     - The divisor must be greater than **1** and less than **N**.\n     - The divisor must divide **N** exactly (no remainder).\n   - **Subtract the Divisor**:\n     - Subtract the chosen divisor from **N**.\n     - Update **N** to this new value.\n3. **Turn Progression**:\n   - After updating **N**, it becomes the next player's turn.\n   - The new **N** is used by the opponent on their turn.\n\n---\n\n## **Rules and Mechanics**\n\n1. **Valid Moves**:\n   - A move is valid if the player can find at least one proper divisor of the current **N**.\n2. **Forced Moves**:\n   - Players must choose a proper divisor; skipping a turn or choosing an invalid number is not allowed.\n3. **Winning the Game**:\n   - If a player reduces **N** to a prime number or **1** on their turn, the opponent loses.\n   - The opponent loses because they cannot find a proper divisor (since prime numbers have no proper divisors other than **1** and themselves).\n4. **Invalid Moves**:\n   - If a player cannot make a valid move on their turn (no proper divisors exist), they lose the game.\n5. **Example of Proper Divisors**:\n   - For **N = 100**, the proper divisors are: 2, 4, 5, 10, 20, 25, 50.\n\n---\n\n## **Scoring**\n\n- **Win Condition**: The game is won by forcing the opponent into a position where they have no valid moves.\n- **No Point System**: The game does not use points; it is a win/loss outcome based on gameplay.\n\n---\n\n## **Examples**\n\n### **Example Game Play**\n\n**Starting Number (N): 100**\n\n---\n\n**Player 1's Turn**\n\n- **Current N**: 100\n- **Proper Divisors of N**: 2, 4, 5, 10, 20, 25, 50\n- **Action**: Choose divisor **50**.\n- **Calculation**: 100 - 50 = **50**\n- **New N**: 50\n\n---\n\n**Player 2's Turn**\n\n- **Current N**: 50\n- **Proper Divisors of N**: 2, 5, 10, 25\n- **Action**: Choose divisor **25**.\n- **Calculation**: 50 - 25 = **25**\n- **New N**: 25\n\n---\n\n**Player 1's Turn**\n\n- **Current N**: 25\n- **Proper Divisors of N**: 5\n- **Action**: Choose divisor **5**.\n- **Calculation**: 25 - 5 = **20**\n- **New N**: 20\n\n---\n\n**Player 2's Turn**\n\n- **Current N**: 20\n- **Proper Divisors of N**: 2, 4, 5, 10\n- **Action**: Choose divisor **10**.\n- **Calculation**: 20 - 10 = **10**\n- **New N**: 10\n\n---\n\n**Player 1's Turn**\n\n- **Current N**: 10\n- **Proper Divisors of N**: 2, 5\n- **Action**: Choose divisor **5**.\n- **Calculation**: 10 - 5 = **5**\n- **New N**: 5\n\n---\n\n**Player 2's Turn**\n\n- **Current N**: 5\n- **Proper Divisors of N**: None (since 5 is a prime number)\n- **Outcome**: Player 2 cannot make a valid move and loses the game.\n\n---\n\n## **Command-Line Interaction Example**\n\nBelow is a sample interaction as it might appear in a command-line interface:\n\n```\nWelcome to Factor Duel!\n\nStarting Number (N): 100\n\nPlayer 1's Turn:\nCurrent N: 100\nProper Divisors: 2, 4, 5, 10, 20, 25, 50\nEnter your chosen divisor: 50\nNew N is now 50.\n\nPlayer 2's Turn:\nCurrent N: 50\nProper Divisors: 2, 5, 10, 25\nEnter your chosen divisor: 25\nNew N is now 25.\n\nPlayer 1's Turn:\nCurrent N: 25\nProper Divisors: 5\nEnter your chosen divisor: 5\nNew N is now 20.\n\nPlayer 2's Turn:\nCurrent N: 20\nProper Divisors: 2, 4, 5, 10\nEnter your chosen divisor: 10\nNew N is now 10.\n\nPlayer 1's Turn:\nCurrent N: 10\nProper Divisors: 2, 5\nEnter your chosen divisor: 5\nNew N is now 5.\n\nPlayer 2's Turn:\nCurrent N: 5\nProper Divisors: None\nNo valid moves left! Player 2 loses.\n\nPlayer 1 wins the game!\n```\n\n---\n\n## **Strategies and Tips**\n\n- **Plan Ahead**: Consider the consequences of your moves on future turns.\n- **Avoid Leaving Prime Numbers**: Try not to reduce **N** to a prime number on your turn unless it guarantees a win.\n- **Control the Game Flow**: Manipulate **N** to numbers where the opponent has fewer proper divisors to choose from.\n\n---\n\n## **Conclusion**\n\nFactor Duel is a simple yet strategic game that challenges players to think ahead and use their knowledge of divisors and prime numbers. It's easy to code and perfect for a quick, engaging match in a command-line interface. May the best strategist win!\n\n---\n\nEnjoy the game!",
    "# Factor Duel\n\n## Objective\n\n**Primary Goal:** Be the last player able to select a valid number from the shared pool without violating the game's co-prime selection rule.\n\n**Victory Condition:** Players take turns selecting numbers from a shared pool. A player wins by forcing their opponent into a position where no valid moves are available on their turn.\n\n## Setup\n\n1. **Shared Pool Initialization:**\n   - Begin with a shared pool of consecutive integers from **2** to **20** (inclusive).\n     ```\n     Shared Pool: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n     ```\n2. **Player Lists:**\n   - Each player starts with an empty list to keep track of the numbers they've selected.\n     ```\n     Player 1 Numbers: []\n     Player 2 Numbers: []\n     ```\n3. **Determine First Player:**\n   - Flip a coin or use any random method to decide who takes the first turn.\n\n## Game Components\n\n- **Shared Pool:**\n  - A list of numbers from **2** to **20** that both players can select from. Numbers are removed from the pool once selected.\n- **Player Lists:**\n  - Each player maintains a personal list of numbers they have selected.\n- **Numbers:**\n  - **Appearance:** Integers from **2** to **20**.\n  - **Functionality:** Used to apply the co-prime rule, influencing future valid selections.\n  - **Unique Attributes:** Each number can only be selected once and has specific factors affecting selection validity.\n\n## Turns\n\n1. **Turn Order:**\n   - Players alternate turns, starting with the player determined during setup.\n2. **Actions on a Turn:**\n   - **Selection:**\n     - The active player selects a number from the shared pool.\n     - The selected number must **not** share any common factors (other than **1**) with any numbers **previously selected by the same player**.\n   - **Validation:**\n     - Ensure the selected number is valid according to the co-prime rule.\n   - **Update:**\n     - Remove the selected number from the shared pool.\n     - Add the selected number to the active player's list.\n3. **Turn Progression:**\n   - If the active player has made a valid selection, the turn passes to the opponent.\n   - If the active player cannot make a valid move, the game ends, and the opponent wins.\n\n## Rules and Mechanics\n\n### Core Rules:\n\n1. **Co-prime Selection Rule:**\n   - **Definition:** Two numbers are co-prime if their greatest common divisor (GCD) is **1**.\n   - **Rule:** On their turn, a player must select a number from the shared pool that is co-prime with **all numbers they have previously selected**.\n   - **Note:** The selected number does **not** need to be co-prime with the opponent's numbers.\n\n2. **Number Usage:**\n   - Each number in the shared pool can only be selected once.\n   - Once selected, numbers are removed from the pool and cannot be selected again.\n\n3. **Winning the Game:**\n   - A player wins if their opponent cannot select any valid number on their turn.\n\n### Additional Mechanics:\n\n- **Common Factors:**\n  - Players should consider the prime factors of numbers when making selections to avoid limiting their future options.\n  \n- **Strategic Blocking:**\n  - Players can strategically select numbers that limit the opponent's future valid moves.\n\n## Scoring\n\n- **Win/Loss Tracking:**\n  - The game is a zero-sum match where one player wins, and the other loses.\n- **No Points System:**\n  - There is no point or scoring system; the focus is on strategic selection leading to a win or loss.\n\n## Examples\n\n### Sample Game Play\n\n**Initial Shared Pool:**\n\n```\n[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n```\n\n**Player 1 and Player 2 Numbers:**\n\n```\nPlayer 1 Numbers: []\nPlayer 2 Numbers: []\n```\n\n---\n\n**Turn 1: Player 1**\n\n- **Selection:** Player 1 selects **7**.\n  - **Reasoning:** As the first move, any number can be selected.\n- **Update:**\n  - Remove **7** from the shared pool.\n  - Player 1 Numbers: `[7]`\n\n**Shared Pool Now:**\n\n```\n[2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n```\n\n---\n\n**Turn 2: Player 2**\n\n- **Selection:** Player 2 selects **10**.\n  - **Reasoning:** No prior numbers in their list, so any number can be selected.\n- **Update:**\n  - Remove **10** from the shared pool.\n  - Player 2 Numbers: `[10]`\n\n**Shared Pool Now:**\n\n```\n[2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n```\n\n---\n\n**Turn 3: Player 1**\n\n- **Player 1 Numbers:** `[7]`\n- **Valid Selections:**\n  - Must select a number co-prime with **7**.\n  - Numbers co-prime with **7** are those that do not share any common factors with **7**.\n  - **Factors of 7:** 1, 7\n  - **Possible Choices:** `[2, 3, 4, 5, 6, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20]` (exclude multiples of 7)\n\n- **Selection:** Player 1 selects **11**.\n- **Update:**\n  - Remove **11** from the shared pool.\n  - Player 1 Numbers: `[7, 11]`\n\n**Shared Pool Now:**\n\n```\n[2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n```\n\n---\n\n**Turn 4: Player 2**\n\n- **Player 2 Numbers:** `[10]`\n- **Valid Selections:**\n  - Must select a number co-prime with **10**.\n  - **Factors of 10:** 1, 2, 5, 10\n  - **Possible Choices:** `[3, 7, 9, 11, 13, 17, 19]` (exclude numbers that share factors with **2** or **5**)\n\n- **Selection:** Player 2 selects **13**.\n- **Update:**\n  - Remove **13** from the shared pool.\n  - Player 2 Numbers: `[10, 13]`\n\n**Shared Pool Now:**\n\n```\n[2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20]\n```\n\n---\n\n**Turn 5: Player 1**\n\n- **Player 1 Numbers:** `[7, 11]`\n- **Valid Selections:**\n  - Must select a number co-prime with both **7** and **11**.\n  - **Factors of 7:** 1, 7\n  - **Factors of 11:** 1, 11\n  - **Possible Choices:** `[2, 3, 4, 5, 6, 9, 13, 15, 16, 18, 19, 20]`\n\n- **Selection:** Player 1 selects **19**.\n- **Update:**\n  - Remove **19** from the shared pool.\n  - Player 1 Numbers: `[7, 11, 19]`\n\n**Shared Pool Now:**\n\n```\n[2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 20]\n```\n\n---\n\n**Game Continues...**\n\nPlayers continue in this manner until one player cannot make a valid selection.\n\n### Endgame Scenario\n\nAssume the game reaches a point where:\n\n**Player 1 Numbers:** `[7, 11, 19, 13]`\n\n**Player 2 Numbers:** `[10, 14, 9, 15]`\n\n**Shared Pool:**\n\n```\n[2, 3, 4, 5, 6, 8, 12, 16, 17, 18, 20]\n```\n\n---\n\n**Turn: Player 1**\n\n- **Valid Selections:** Must be co-prime with **7, 11, 13, 19**\n- **Possible Choices:** `[2, 3, 4, 5, 6, 8, 16, 17, 18]`\n- **Selection:** Player 1 selects **17**\n- **Update:**\n  - Remove **17** from the shared pool.\n  - Player 1 Numbers: `[7, 11, 19, 13, 17]`\n\n---\n\n**Turn: Player 2**\n\n- **Valid Selections:** Must be co-prime with **10, 14, 9, 15**\n- **Factors to Consider:** **2, 5, 7, 3**\n- **Possible Choices:** `[16, 18, 20]` (numbers not sharing factors with **2, 3, 5, 7** are limited)\n- **No Valid Moves Left:**\n  - **All remaining numbers share a common factor with Player 2's numbers.**\n  - **Player 2 cannot make a valid selection.**\n\n---\n\n**Conclusion:**\n\n- **Player 2 loses** as they cannot make a valid move.\n- **Player 1 wins** the game.\n\n## Command-Line Interaction Example\n\n```plaintext\nWelcome to Factor Duel!\n\nShared Pool: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nPlayer 1 Numbers: []\nPlayer 2 Numbers: []\n\nPlayer 1, it's your turn.\nSelect a number from the shared pool: 7\n\nPlayer 1 selected 7.\nShared Pool: [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nPlayer 1 Numbers: [7]\nPlayer 2 Numbers: []\n\nPlayer 2, it's your turn.\nSelect a number from the shared pool: 10\n\nPlayer 2 selected 10.\nShared Pool: [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nPlayer 1 Numbers: [7]\nPlayer 2 Numbers: [10]\n\nPlayer 1, it's your turn.\nNumbers co-prime with your list [7]: [2, 3, 4, 5, 6, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20]\nSelect a number from the shared pool: 11\n\nPlayer 1 selected 11.\nShared Pool: [2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nPlayer 1 Numbers: [7, 11]\nPlayer 2 Numbers: [10]\n\n... (game continues) ...\n\nPlayer 2, it's your turn.\nNo valid moves available. You cannot select a number that is co-prime with your numbers [10, 14, 9, 15].\nPlayer 2 loses. Player 1 wins!\n```\n\n## Strategy Tips\n\n- **Plan Ahead:** Consider future moves when selecting numbers to avoid restricting your options.\n- **Prime Numbers:** Selecting prime numbers can keep your options open, as they are only divisible by 1 and themselves.\n- **Blocking:** Anticipate your opponent's possible selections and attempt to limit their valid moves without compromising your own.\n\n## Conclusion\n\nFactor Duel is a strategic game of number selection and foresight. By understanding number relationships and planning ahead, players can outmaneuver their opponent and secure victory.\n\n---\n\nEnjoy the challenge and may the most strategic player win!",
    "# Number Conquest: Rule Book\n\n## Objective\n\nBecome the first player to reduce your opponent's Life Points to zero by strategically selecting numbers to perform attacks or bolster your defense. Utilize the shared pool of numbers wisely to outmaneuver your opponent and achieve victory.\n\n---\n\n## Setup\n\n1. **Life Points Initialization**:\n   - Each player starts with **20 Life Points**.\n   - Life Points represent the player's health. When a player's Life Points reach zero, they lose the game.\n\n2. **Shield Points Initialization**:\n   - Both players begin with **0 Shield Points**.\n   - Shield Points absorb incoming damage but do not exceed a maximum limit (unlimited in this game).\n\n3. **Number Pool**:\n   - A shared pool of numbers from **1 to 9** is available.\n   - These numbers are used for performing actions and are **removed from the pool once used**.\n\n---\n\n## Game Components\n\n- **Life Points (LP)**:\n  - Numeric value representing a player's health.\n  - Starts at 20 for each player.\n\n- **Shield Points (SP)**:\n  - Numeric value representing defensive strength.\n  - Absorbs damage from attacks.\n  - Starts at 0 and increases when a player chooses to defend.\n\n- **Number Pool**:\n  - Shared list of available numbers **[1, 2, 3, 4, 5, 6, 7, 8, 9]**.\n  - Numbers are used for actions and removed upon use.\n\n- **Actions**:\n  - **Attack**: Deal damage to the opponent.\n  - **Defend**: Increase your Shield Points.\n\n---\n\n## Turns\n\n1. **Turn Order**:\n   - Players decide who goes first (e.g., coin toss or agreement).\n   - Turns alternate between players.\n\n2. **Turn Structure**:\n   - **Step 1**: Display current Life Points, Shield Points, and available numbers.\n   - **Step 2**: Choose an available number from the Number Pool.\n   - **Step 3**: Choose an action:\n     - **Attack**: Use the number to deal damage.\n     - **Defend**: Use the number to increase your Shield Points.\n   - **Step 4**: Execute the action.\n   - **Step 5**: Remove the used number from the Number Pool.\n   - **Step 6**: Check for victory condition.\n   - **Step 7**: End turn.\n\n---\n\n## Rules and Mechanics\n\n### Actions\n\n#### Attack\n\n- **Damage Calculation**:\n  - **Damage Dealt** = Chosen Number - Opponent's Shield Points.\n  - If the opponent has Shield Points, they are subtracted from the attack value.\n  - **Example**: If you attack with a 6 and your opponent has 2 Shield Points:\n    - Damage Dealt = 6 - 2 = 4.\n    - Opponent's Shield Points reduce to 0.\n  - **Shield Points cannot become negative**.\n- **Life Points Reduction**:\n  - Opponent's Life Points decrease by the Damage Dealt.\n  - **Minimum Damage**: If Shield Points are equal to or exceed the attack value, Damage Dealt is 0.\n\n#### Defend\n\n- **Shield Increase**:\n  - Your Shield Points increase by the value of the chosen number.\n  - **Example**: If you defend with a 5:\n    - Your Shield Points increase by 5.\n- **Accumulation**:\n  - Shield Points accumulate over turns unless reduced by attacks.\n\n### Number Pool Management\n\n- **Number Usage**:\n  - Once a number is used for an action, it is **removed** from the Number Pool.\n  - Both players cannot use that number again.\n- **Availability**:\n  - Players can only choose from the remaining numbers in the pool on their turn.\n\n### Victory Condition\n\n- **Winning the Game**:\n  - A player wins when their opponent's Life Points are reduced to **zero or below**.\n- **No Draws**:\n  - Since numbers are finite and Life Points will eventually reach zero, the game cannot end in a draw.\n\n---\n\n## Scoring\n\n- **Life Points Tracking**:\n  - Main metric for determining the winner.\n  - Keep track of both players' Life Points throughout the game.\n\n- **Shield Points Tracking**:\n  - Important for defense strategy and calculating damage.\n  - Reset only when reduced by attacks; otherwise, they accumulate.\n\n---\n\n## Examples\n\n### Sample Game Flow\n\n**Starting Game State**:\n\n- Player 1 LP: 20, SP: 0\n- Player 2 LP: 20, SP: 0\n- Available Numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n---\n\n#### **Turn 1: Player 1**\n\n- **Available Numbers**: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n- **Player 1 Action**:\n  - Chooses number **7**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Opponent SP: 0\n  - Damage Dealt: 7 - 0 = 7\n- **Update**:\n  - Player 2 LP: 20 - 7 = **13**\n  - Number 7 is removed from the pool.\n\n---\n\n#### **Turn 2: Player 2**\n\n- **Available Numbers**: [1, 2, 3, 4, 5, 6, 8, 9]\n- **Player 2 Action**:\n  - Chooses number **8**.\n  - Chooses to **Defend**.\n- **Shield Update**:\n  - Player 2 SP: 0 + 8 = **8**\n- **Update**:\n  - Number 8 is removed from the pool.\n\n---\n\n#### **Turn 3: Player 1**\n\n- **Available Numbers**: [1, 2, 3, 4, 5, 6, 9]\n- **Player 1 Action**:\n  - Chooses number **6**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Opponent SP: 8\n  - Damage Dealt: 6 - 8 = 0 (no damage)\n- **Shield Reduction**:\n  - Player 2 SP: 8 - 6 = **2**\n- **Update**:\n  - Number 6 is removed from the pool.\n\n---\n\n#### **Turn 4: Player 2**\n\n- **Available Numbers**: [1, 2, 3, 4, 5, 9]\n- **Player 2 Action**:\n  - Chooses number **9**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Player 1 SP: 0\n  - Damage Dealt: 9 - 0 = 9\n- **Update**:\n  - Player 1 LP: 20 - 9 = **11**\n  - Number 9 is removed from the pool.\n\n---\n\n#### **Turn 5: Player 1**\n\n- **Available Numbers**: [1, 2, 3, 4, 5]\n- **Player 1 Action**:\n  - Chooses number **5**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Opponent SP: 2\n  - Damage Dealt: 5 - 2 = 3\n- **Shield Reduction**:\n  - Player 2 SP: 2 - 5 = 0\n- **Update**:\n  - Player 2 LP: 13 - 3 = **10**\n  - Number 5 is removed from the pool.\n\n---\n\n#### **Turn 6: Player 2**\n\n- **Available Numbers**: [1, 2, 3, 4]\n- **Player 2 Action**:\n  - Chooses number **4**.\n  - Chooses to **Defend**.\n- **Shield Update**:\n  - Player 2 SP: 0 + 4 = **4**\n- **Update**:\n  - Number 4 is removed from the pool.\n\n---\n\n#### **Turn 7: Player 1**\n\n- **Available Numbers**: [1, 2, 3]\n- **Player 1 Action**:\n  - Chooses number **3**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Opponent SP: 4\n  - Damage Dealt: 3 - 4 = 0\n- **Shield Reduction**:\n  - Player 2 SP: 4 - 3 = **1**\n- **Update**:\n  - Number 3 is removed from the pool.\n\n---\n\n#### **Turn 8: Player 2**\n\n- **Available Numbers**: [1, 2]\n- **Player 2 Action**:\n  - Chooses number **2**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Player 1 SP: 0\n  - Damage Dealt: 2 - 0 = 2\n- **Update**:\n  - Player 1 LP: 11 - 2 = **9**\n  - Number 2 is removed from the pool.\n\n---\n\n#### **Turn 9: Player 1**\n\n- **Available Number**: [1]\n- **Player 1 Action**:\n  - Chooses number **1**.\n  - Chooses to **Attack**.\n- **Damage Calculation**:\n  - Opponent SP: 1\n  - Damage Dealt: 1 - 1 = 0\n- **Shield Reduction**:\n  - Player 2 SP: 1 - 1 = **0**\n- **Update**:\n  - Number 1 is removed from the pool.\n\n---\n\n#### **End of Number Pool**\n\n- Since all numbers have been used, the game proceeds to determine the winner based on remaining Life Points.\n\n**Final Life Points**:\n\n- Player 1 LP: **9**\n- Player 2 LP: **10**\n\n**Winner**: **Player 2**, having more Life Points remaining.\n\n---\n\n## Strategy Tips\n\n- **Balance Attack and Defense**:\n  - Use high numbers for attacking when the opponent's Shield Points are low.\n  - Consider defending with high numbers if you anticipate strong attacks.\n\n- **Track Used Numbers**:\n  - Keep note of which numbers have been used to anticipate your opponent's potential moves.\n\n- **Manage Shield Points**:\n  - Reducing your opponent's Shield Points can set up for a stronger attack in the next turn.\n\n- **Plan Ahead**:\n  - Think several moves ahead to reserve certain numbers for crucial moments.\n\n---\n\n## Command-Line Interaction Example\n\n```plaintext\n-- Turn 1: Player 1 --\nPlayer 1 LP: 20, SP: 0\nPlayer 2 LP: 20, SP: 0\nAvailable Numbers: [1,2,3,4,5,6,7,8,9]\nChoose a number: 7\nChoose action (Attack/Defend): Attack\nYou chose to attack with 7.\nDamage Dealt: 7\nPlayer 2 LP is now 13.\n\n-- Turn 2: Player 2 --\nPlayer 1 LP: 20, SP: 0\nPlayer 2 LP: 13, SP: 0\nAvailable Numbers: [1,2,3,4,5,6,8,9]\nChoose a number: 8\nChoose action (Attack/Defend): Defend\nYou chose to defend with 8.\nPlayer 2 SP is now 8.\n\n... (game continues)\n```\n\n---\n\n## Conclusion\n\n\"Number Conquest\" is a strategic game of resource management and tactical decision-making. By carefully choosing when to attack or defend and selecting the optimal numbers, players can outsmart their opponents and secure victory. The simplicity of the game's mechanics, combined with the depth of strategy, makes it both easy to code and engaging to play.\n\n---\n\nEnjoy the battle of numbers, and may the best strategist win!",
    "# Gridlock Game Rule Book\n\n## Objective\n\n**Gridlock** is a strategic two-player, turn-based game played on a 4x4 grid. The primary goal is to outmaneuver your opponent by placing your markers on the grid and blocking them from making a legal move. The player who forces their opponent into a position where they cannot place a marker without violating the game's placement rules wins the game.\n\n## Setup\n\n1. **Game Grid**: The game is played on a 4x4 grid consisting of 16 cells arranged in 4 rows and 4 columns.\n2. **Markers**:\n   - **Player 1** uses markers represented by \"X\".\n   - **Player 2** uses markers represented by \"O\".\n3. **Starting Conditions**:\n   - The grid starts empty with all cells unoccupied.\n   - Decide who will be Player 1 and Player 2. This can be determined by agreement or a random method such as flipping a coin.\n\n## Game Components\n\n- **Grid**: A 4x4 grid displayed in the command-line interface. Each cell is identified by its row and column numbers (ranging from 1 to 4).\n- **Markers**:\n  - \"X\" for Player 1.\n  - \"O\" for Player 2.\n- **Empty Cells**: Represented by \".\" or a blank space in the grid display.\n- **Command Inputs**: Players input their moves by specifying the row and column numbers of the cell where they wish to place their marker.\n\n## Turns\n\n- The game proceeds in alternating turns starting with Player 1.\n- **Turn Structure**:\n  1. **Display Grid**: The current state of the grid is displayed.\n  2. **Player Input**: The current player inputs the coordinates (row and column) of an empty cell where they wish to place their marker.\n  3. **Validation**: The game checks if the move is legal according to the rules.\n     - If the move is legal, the marker is placed, and the turn ends.\n     - If the move is illegal, the player is prompted to input a different move.\n  4. **Check for Game End**: After each move, the game checks if the opponent has any legal moves remaining.\n     - If the opponent cannot make a legal move, the current player wins.\n     - If the opponent can make a move, the next turn begins.\n\n## Rules and Mechanics\n\n### Placement Rules\n\n1. **Marker Placement**:\n   - Players can place their marker on any empty cell that is **not adjacent** (horizontally or vertically) to any of the opponent's markers.\n   - Diagonal adjacency is allowed; only horizontal and vertical adjacency to an opponent's marker is prohibited.\n2. **Adjacency Definition**:\n   - Two cells are considered adjacent if they share a common side (not including corners).\n   - For example, if Player 2 has a marker on cell (2,3), Player 1 cannot place a marker on cells (1,3), (2,2), (2,4), or (3,3).\n\n### Move Validation\n\n- A move is considered legal if:\n  - The chosen cell is within the bounds of the grid (rows and columns between 1 and 4).\n  - The chosen cell is empty.\n  - The chosen cell is not adjacent to any of the opponent's existing markers (excluding diagonal adjacency).\n\n- If a player has no legal moves available on their turn, they lose the game.\n\n### Game End Conditions\n\n- **Victory**: A player wins if their opponent has no legal moves to make on their turn.\n- **No Draws**: The game cannot end in a draw due to the finite number of cells and the placement rules.\n\n## Scoring\n\n- **Win**: The winning player is declared the victor of the game.\n- **Loss**: The losing player is the one who cannot make a legal move on their turn.\n- **No Points or Accumulated Score**: This game does not use a point or scoring system beyond determining the winner and loser of each game.\n\n## Examples\n\n### Example Game Play\n\n#### Initial Grid State\n\nAll cells are empty.\n\n```\n    1   2   3   4\n  +---+---+---+---+\n1 |   |   |   |   |\n  +---+---+---+---+\n2 |   |   |   |   |\n  +---+---+---+---+\n3 |   |   |   |   |\n  +---+---+---+---+\n4 |   |   |   |   |\n  +---+---+---+---+\n```\n\n#### Turn 1: Player 1\n\n- **Action**: Player 1 places an \"X\" at cell (2,2).\n- **Move Validation**: Cell (2,2) is empty and not adjacent to any opponent's markers (since none exist yet).\n- **Grid State**:\n\n```\n    1   2   3   4\n  +---+---+---+---+\n1 |   |   |   |   |\n  +---+---+---+---+\n2 |   | X |   |   |\n  +---+---+---+---+\n3 |   |   |   |   |\n  +---+---+---+---+\n4 |   |   |   |   |\n  +---+---+---+---+\n```\n\n#### Turn 2: Player 2\n\n- **Action**: Player 2 attempts to place an \"O\" at cell (2,3).\n- **Move Validation**:\n  - Cell (2,3) is adjacent to Player 1's marker at (2,2).\n  - **Invalid Move**: Player 2 cannot place a marker adjacent to an opponent's marker.\n- **Player 2's Second Attempt**:\n  - **Action**: Player 2 places an \"O\" at cell (3,3).\n  - **Move Validation**: Cell (3,3) is not adjacent horizontally or vertically to any of Player 1's markers.\n- **Grid State**:\n\n```\n    1   2   3   4\n  +---+---+---+---+\n1 |   |   |   |   |\n  +---+---+---+---+\n2 |   | X |   |   |\n  +---+---+---+---+\n3 |   |   | O |   |\n  +---+---+---+---+\n4 |   |   |   |   |\n  +---+---+---+---+\n```\n\n#### Turn 3: Player 1\n\n- **Action**: Player 1 attempts to place an \"X\" at cell (3,2).\n- **Move Validation**:\n  - Cell (3,2) is adjacent to Player 2's marker at (3,3).\n  - **Invalid Move**: Cannot place adjacent to opponent's marker.\n- **Player 1's Second Attempt**:\n  - **Action**: Player 1 places an \"X\" at cell (1,1).\n  - **Move Validation**: Valid move.\n- **Grid State**:\n\n```\n    1   2   3   4\n  +---+---+---+---+\n1 | X |   |   |   |\n  +---+---+---+---+\n2 |   | X |   |   |\n  +---+---+---+---+\n3 |   |   | O |   |\n  +---+---+---+---+\n4 |   |   |   |   |\n  +---+---+---+---+\n```\n\n#### Subsequent Turns\n\n- Players continue following the rules, carefully choosing positions that are not adjacent to the opponent's markers.\n- As the grid fills up, options become limited.\n- **Endgame Scenario**:\n\nSuppose it's Player 2's turn, and the only remaining empty cells are adjacent to Player 1's markers. Player 2 has no legal moves.\n\n- **Outcome**: Player 1 wins because Player 2 cannot make a legal move.\n\n### Command-Line Interaction Sample\n\n#### Start of Game\n\n- **Prompt**: \"Player 1 (X), it's your turn. Enter your move (row and column):\"\n- **Player Input**: `2 2`\n\n#### Move Validation\n\n- **Output**: \"You placed an 'X' at position (2,2).\"\n\n#### Display Grid\n\n```\n    1   2   3   4\n  +---+---+---+---+\n1 |   |   |   |   |\n  +---+---+---+---+\n2 |   | X |   |   |\n  +---+---+---+---+\n3 |   |   |   |   |\n  +---+---+---+---+\n4 |   |   |   |   |\n  +---+---+---+---+\n```\n\n#### Invalid Move Attempt\n\n- **Prompt**: \"Player 2 (O), it's your turn. Enter your move (row and column):\"\n- **Player Input**: `2 3`\n- **Output**: \"Invalid move. You cannot place next to an opponent's marker. Please choose a different cell.\"\n\n#### Valid Move\n\n- **Player Input**: `3 3`\n- **Output**: \"You placed an 'O' at position (3,3).\"\n\n#### Game Conclusion\n\n- **Prompt**: \"Player 1 (X), it's your turn. Enter your move (row and column):\"\n- **Player Input**: [No legal moves available]\n- **Output**: \"Player 1 has no legal moves remaining. Player 2 (O) wins the game!\"\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's potential moves and aim to limit their options.\n- **Control the Center**: Placing markers near the center early on can maximize your own options while restricting your opponent.\n- **Avoid Isolation**: Keep your markers spread out to maintain multiple areas for potential placement.\n- **Force Moves**: Try to guide your opponent into areas where their options will become limited more quickly.\n\n---\n\nEnjoy playing **Gridlock**, and may the most strategic player win!",
    "# **Shadow Grid Duel**\n\nWelcome to **Shadow Grid Duel**, a fast-paced, two-player strategy game designed for quick matches and strategic depth. This game is perfect for a command-line interface and is simple to code. It ensures that a skilled player can consistently outperform an unskilled one. Below is the comprehensive rule book to get you started.\n\n---\n\n## **Objective**\n\nThe primary goal of **Shadow Grid Duel** is to be the first player to align a trio of your numbers (either in a row, column, or diagonal) where the cumulative sum equals a secret target number known only to both players at the start of the game. Victory is achieved by strategically placing numbers on a shared grid to create this sum, while simultaneously blocking your opponent from achieving their goal.\n\n---\n\n## **Setup**\n\n1. **Grid Initialization**: The game is played on a 3x3 grid, initially empty.\n2. **Secret Target Number**: At the start of the game, both players agree upon a secret target number between 10 and 20 (inclusive). This number remains constant throughout the game.\n3. **Number Pool**: Each player has their own set of numbers from 1 to 9, inclusive. These numbers are used to place on the grid during the game.\n4. **Starting Player**: Decide who will take the first turn (e.g., by agreement or random selection).\n\n---\n\n## **Game Components**\n\n- **Grid**: A 3x3 matrix representing the game board. Positions are identified by coordinates (row and column numbers).\n\n- **Player Numbers**: Each player has numbers 1 through 9, which they can place on the grid. Once a number is used, it cannot be used again by the same player.\n\n- **Secret Target Number**: A number between 10 and 20 that players aim to achieve by summing three of their numbers in alignment on the grid.\n\n---\n\n## **Turns**\n\n- **Turn Structure**:\n  1. **Number Selection**: The current player chooses a number from their available numbers (1-9).\n  2. **Placement**: The player selects an empty cell on the grid to place their chosen number.\n  3. **Turn Completion**: The turn ends, and control passes to the other player.\n\n- **Turn Order**: Players alternate turns throughout the game.\n\n---\n\n## **Rules and Mechanics**\n\n1. **Number Placement**:\n   - Players can only place numbers in empty cells.\n   - Each player can use each number from 1 to 9 only once.\n\n2. **Alignment and Summation**:\n   - After placing a number, players should check all possible alignments (rows, columns, diagonals) for a trio of their numbers.\n   - If any alignment of three numbers sums up to the secret target number, the player wins immediately.\n\n3. **Blocking**:\n   - Players can place numbers to prevent their opponent from achieving the target sum in an alignment.\n\n4. **No Draws**:\n   - Since the grid has a finite number of cells and numbers, and the target sum is strategically chosen, the game cannot end in a draw.\n\n5. **Game End**:\n   - The game ends immediately when a player achieves the target sum with three of their numbers in alignment.\n   - If all cells are filled without either player achieving the target sum, the player who made the last move loses, emphasizing strategic foresight.\n\n---\n\n## **Scoring**\n\n- **Victory Condition**: Achieving an alignment (row, column, or diagonal) where the sum of the player's three numbers equals the secret target number.\n\n- **Tracking**: No points are tracked beyond the immediate goal. The focus is on winning individual matches.\n\n---\n\n## **Examples**\n\n### **Example Game Play**\n\n**Secret Target Number**: 15\n\n**Player 1's Turn**:\n- **Available Numbers**: 1-9\n- **Action**: Chooses number **5**, places it at position (1,1).\n\n**Player 2's Turn**:\n- **Available Numbers**: 1-9\n- **Action**: Chooses number **7**, places it at position (1,2).\n\n**Player 1's Turn**:\n- **Available Numbers**: 1-9 excluding **5**\n- **Action**: Chooses number **6**, places it at position (2,2).\n\n**Player 2's Turn**:\n- **Available Numbers**: 1-9 excluding **7**\n- **Action**: Chooses number **8**, places it at position (1,3).\n\n**Player 1's Turn**:\n- **Available Numbers**: 1-9 excluding **5**, **6**\n- **Action**: Chooses number **4**, places it at position (3,3).\n\n**Check for Victory**:\n- Player 1 has numbers **5** at (1,1), **6** at (2,2), **4** at (3,3).\n- These positions form a diagonal.\n- Sum = **5 + 6 + 4 = 15**, which equals the secret target number.\n\n**Result**: **Player 1 wins**.\n\n### **Command-Line Interaction Sample**\n\n```\n[Game Start]\nSecret Target Number is set between 10 and 20.\n\nPlayer 1, enter your name: Alice\nPlayer 2, enter your name: Bob\n\nSecret Target Number agreed upon: 15\n\n[Grid Status]\n_ _ _\n_ _ _\n_ _ _\n\nAlice's Turn:\nAvailable Numbers: 1-9\nEnter number to place: 5\nEnter position (row,col): 1,1\n\n[Grid Status]\n5 _ _\n_ _ _\n_ _ _\n\nBob's Turn:\nAvailable Numbers: 1-9\nEnter number to place: 7\nEnter position (row,col): 1,2\n\n[Grid Status]\n5 7 _\n_ _ _\n_ _ _\n\n... [Game continues] ...\n\nAlice places number 4 at position 3,3\n\n[Grid Status]\n5 7 _\n_ 6 _\n_ _ 4\n\nAlice has formed a diagonal with positions (1,1), (2,2), (3,3)\nSum = 5 + 6 + 4 = 15\n\nAlice wins!\n```\n\n---\n\n## **Strategic Tips**\n\n- **Number Selection**: Choose numbers that not only help you reach the target sum but also prevent your opponent from doing the same.\n\n- **Blocking**: Always be aware of your opponent's placements and the numbers they've used. Place numbers that can block potential alignments.\n\n- **Planning Ahead**: Think several moves ahead to set up your winning alignment.\n\n- **Secret Target Number Choice**: Selecting a challenging secret target number adds depth to the game. Consider numbers that require more strategic planning to achieve.\n\n---\n\nEnjoy the duel of wits in **Shadow Grid Duel**!",
    "**Game Title:** Mind Meld\n\n---\n\n### **Objective**\n\nThe objective of *Mind Meld* is to accumulate a total of **5 points** before your opponent does. Players earn points by strategically selecting numbers in an attempt to outmaneuver their opponent based on a unique set of rules governing number interactions.\n\n---\n\n### **Setup**\n\n- **Players:** 2\n- **Initial Conditions:** Both players start with 0 points.\n- **Game Start:** Decide which player will take the first turn (can be determined randomly or by agreement).\n\n---\n\n### **Game Components**\n\n- **Number Range:** Integers from **1 to 5**.\n- **Scoreboard:** A simple scoring system to keep track of each player's points.\n  \nNo physical components are required; the game is played through command-line inputs where players input their chosen numbers and the system calculates and displays the scores.\n\n---\n\n### **Turns**\n\n- The game is played in **rounds**.\n- In each round, both players **simultaneously and secretly** select a number from **1 to 5**.\n- After both players have made their selections, the numbers are revealed and the outcome of the round is determined based on the rules.\n- No player takes a traditional \"turn\" in the sense of waiting; both act at the same time each round.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Number Selection:**\n   - Players choose an integer between **1 and 5**, inclusive.\n   - The selection is made privately and revealed simultaneously.\n\n2. **Determining Round Winner:**\n   - **Same Number:** If both players choose the **same number**, the round is a **draw**, and no points are awarded.\n   - **Consecutive Numbers:** If the numbers are **consecutive** (e.g., 2 and 3), the player who chose the **lower number** wins the round and earns **1 point**.\n   - **Non-Consecutive, Different Numbers:** If the numbers are **not consecutive** and **not the same**, the player who chose the **higher number** wins the round and earns **1 point**.\n\n3. **Consecutive Numbers Definition:**\n   - Two numbers are considered consecutive if they differ by **exactly 1**.\n   - The sequence wraps around such that **1 and 5 are *not* considered consecutive**.\n\n4. **Scoring:**\n   - Points are cumulative.\n   - The first player to reach **5 points** wins the game.\n\n5. **Winning the Game:**\n   - The game ends immediately when a player reaches **5 points**.\n   - There are no draws in the overall game; play continues in rounds until one player achieves the necessary points for victory.\n\n---\n\n### **Examples**\n\n#### **Example 1: Basic Round Outcome**\n\n- **Round 1:**\n  - Player 1 selects **3**.\n  - Player 2 selects **4**.\n  - Numbers **3 and 4** are consecutive.\n    - **Player 1** (lower number) wins the round and earns **1 point**.\n  - **Score:** Player 1 - 1 point, Player 2 - 0 points.\n\n#### **Example 2: Same Number Selected**\n\n- **Round 2:**\n  - Player 1 selects **2**.\n  - Player 2 selects **2**.\n  - Both players selected the **same number**.\n    - Round is a **draw**; no points awarded.\n  - **Score:** Player 1 - 1 point, Player 2 - 0 points.\n\n#### **Example 3: Non-Consecutive, Different Numbers**\n\n- **Round 3:**\n  - Player 1 selects **1**.\n  - Player 2 selects **5**.\n  - Numbers **1 and 5** are **not consecutive**.\n    - **Player 2** (higher number) wins the round and earns **1 point**.\n  - **Score:** Player 1 - 1 point, Player 2 - 1 point.\n\n#### **Example 4: Winning the Game**\n\n- Continuing from previous scores.\n\n- **Round 4:**\n  - Player 1 selects **4**.\n  - Player 2 selects **2**.\n  - Numbers **4 and 2** are **not consecutive**.\n    - **Player 1** (higher number) wins the round and earns **1 point**.\n  - **Score:** Player 1 - 2 points, Player 2 - 1 point.\n\n- **Subsequent Rounds:**\n  - Play continues with players accumulating points per the rules.\n\n- **Final Round:**\n  - Player 1 reaches **5 points**.\n  - **Player 1 wins the game**.\n\n---\n\n### **Strategic Considerations**\n\n- **Predicting Opponent's Choices:**\n  - Anticipate which numbers your opponent is likely to choose based on previous selections.\n  \n- **Risk and Reward:**\n  - Choosing higher numbers can secure wins in non-consecutive scenarios but can backfire if the opponent chooses a consecutive lower number.\n\n- **Consecutive Number Advantage:**\n  - Opting for numbers that could be part of a consecutive pair can be a strategic move when predicting the opponent's selection.\n\n---\n\n### **Command-Line Interaction Example**\n\nBelow is a sample interaction illustrating how the game might proceed in a command-line interface:\n\n```\n*** Mind Meld Game Start ***\nFirst to 5 points wins the game.\n---------------------------------\n\nRound 1:\nPlayer 1, enter your number (1-5): [Input Hidden]\nPlayer 2, enter your number (1-5): [Input Hidden]\n\nRevealing choices...\nPlayer 1 chose: 3\nPlayer 2 chose: 4\n\nResult: Numbers are consecutive.\nPlayer 1 wins the round and earns 1 point.\nScore -> Player 1: 1 | Player 2: 0\n---------------------------------\n\nRound 2:\nPlayer 1, enter your number (1-5): [Input Hidden]\nPlayer 2, enter your number (1-5): [Input Hidden]\n\nRevealing choices...\nPlayer 1 chose: 2\nPlayer 2 chose: 2\n\nResult: Both players chose the same number.\nNo points awarded this round.\nScore -> Player 1: 1 | Player 2: 0\n---------------------------------\n\nRound 3:\nPlayer 1, enter your number (1-5): [Input Hidden]\nPlayer 2, enter your number (1-5): [Input Hidden]\n\nRevealing choices...\nPlayer 1 chose: 1\nPlayer 2 chose: 5\n\nResult: Numbers are not consecutive.\nPlayer 2 wins the round with the higher number and earns 1 point.\nScore -> Player 1: 1 | Player 2: 1\n---------------------------------\n\n... [Game continues] ...\n\nFinal Round:\nPlayer 1 reaches 5 points!\n*** Player 1 wins the game! ***\n```\n\n---\n\n### **Summary**\n\n*Mind Meld* is a game of strategy and anticipation. By understanding the rules of number interactions and predicting the opponent's moves, skilled players can consistently gain the advantage and secure victory. The simplicity of the game's mechanics allows for quick gameplay and straightforward coding, making it ideal for a command-line interface. With no possibility of a draw and a clear path to victory, *Mind Meld* offers depth and competitive excitement in a minimalist format.\n\n---\n\nEnjoy the game, and may the keenest mind prevail!",
    "# Number Line Blockade\n\n## Objective\n\n**Number Line Blockade** is a two-player, turn-based strategy game played on a virtual number line. The primary goal is to be the last player able to make a valid move by strategically selecting numbers and blocking your opponent's options. Victory is achieved by forcing your opponent into a position where they cannot select any remaining numbers on their turn.\n\n## Setup\n\n- **Number Line:** Create a sequential number line containing all integers from **1** to **21**. This number line represents the playing field.\n  \n  ```\n  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21\n  ```\n\n- **Initial State:** At the start of the game, all numbers are unclaimed and available for selection by either player.\n\n- **Players:** Two players designated as **Player 1** and **Player 2**.\n\n## Game Components\n\n- **Number Line Positions (1-21):** These are the selectable spots on the number line. Each position can be in one of three states:\n  - **Unclaimed:** The number is available for selection.\n  - **Claimed:** The number has been selected by a player.\n  - **Blocked:** The number is adjacent to a claimed number and is unavailable for selection.\n\n- **Markers:**\n  - Each player will use a unique marker to indicate claimed numbers:\n    - **Player 1:** `X`\n    - **Player 2:** `O`\n\n- **Game Board Representation:**\n  - The game board is displayed on the command line, showing the current state of each number (unclaimed, claimed by Player 1, claimed by Player 2, or blocked).\n\n## Turns\n\n- **Turn Order:** Player 1 begins the game. Players alternate turns thereafter.\n\n- **Turn Structure:**\n  1. **Display Board:** The current state of the number line is displayed.\n  2. **Player Action:** The active player selects an unclaimed and unblocked number from the number line.\n  3. **Validation:** The game validates the selection to ensure it is legal.\n  4. **Update Board:**\n     - Mark the selected number with the player's marker (`X` or `O`).\n     - Block the adjacent unclaimed numbers (both immediate lower and higher numbers) by marking them as blocked (`-`).\n  5. **Check for Game End:** Determine if the opponent has any valid moves remaining.\n  6. **Switch Turns:** If the game is not over, switch to the other player.\n\n## Rules and Mechanics\n\n- **Number Selection:**\n  - On their turn, a player must select any **unclaimed** and **unblocked** number from the number line.\n  - Numbers can be selected in any order, provided they meet the above criteria.\n\n- **Blocking Mechanism:**\n  - When a number is claimed, both adjacent numbers (the immediate lower and higher numbers) become blocked and cannot be selected in future turns.\n    - For example, if number `5` is claimed:\n      - Number `4` (immediate lower number) becomes blocked.\n      - Number `6` (immediate higher number) becomes blocked.\n  - If the adjacent number is already claimed or blocked, no additional action is needed.\n\n- **Winning the Game:**\n  - The game ends when a player cannot make a valid move on their turn.\n  - The player who made the **last valid move** wins the game.\n\n- **Invalid Moves:**\n  - If a player attempts to select an invalid number (claimed or blocked), they are prompted to choose again.\n  - Repeated invalid attempts may result in forfeiture of the game at the discretion of the game rules enforcement (optional in coding).\n\n## Scoring\n\n- **Victory Condition:** Winning is achieved by being the last player to make a valid move.\n\n- **No Points System:** There is no point scoring; the game is won by strategic play leading to the opponent's inability to move.\n\n- **Match Play (Optional):** Players may opt to play multiple rounds, tracking wins to determine an overall champion after a set number of games.\n\n## Examples\n\n### Sample Game Play\n\n#### Initial State\n\n```\n1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21\n```\n\nAll numbers are unclaimed.\n\n#### Turn 1: Player 1\n\n- **Action:** Player 1 selects number **11**.\n- **Board Update:**\n  - Number **11** is marked with `X`.\n  - Numbers **10** and **12** are blocked (`-`).\n\n**Board State:**\n\n```\n1  2  3  4  5  6  7  8  9  10(-) 11(X) 12(-) 13  14  15  16  17  18  19  20  21\n```\n\n#### Turn 2: Player 2\n\n- **Action:** Player 2 selects number **7**.\n- **Board Update:**\n  - Number **7** is marked with `O`.\n  - Numbers **6** and **8** are blocked (`-`).\n\n**Board State:**\n\n```\n1  2  3  4  5  6(-) 7(O) 8(-) 9  10(-) 11(X) 12(-) 13  14  15  16  17  18  19  20  21\n```\n\n#### Turn 3: Player 1\n\n- **Action:** Player 1 selects number **14**.\n- **Board Update:**\n  - Number **14** is marked with `X`.\n  - Numbers **13** and **15** are blocked (`-`).\n\n**Board State:**\n\n```\n1  2  3  4  5  6(-) 7(O) 8(-) 9  10(-) 11(X) 12(-) 13(-) 14(X) 15(-) 16  17  18  19  20  21\n```\n\n#### Turn 4: Player 2\n\n- **Action:** Player 2 selects number **17**.\n- **Board Update:**\n  - Number **17** is marked with `O`.\n  - Numbers **16** and **18** are blocked (`-`).\n\n**Board State:**\n\n```\n1  2  3  4  5  6(-) 7(O) 8(-) 9  10(-) 11(X) 12(-) 13(-) 14(X) 15(-) 16(-) 17(O) 18(-) 19  20  21\n```\n\n#### Subsequent Turns\n\nPlayers continue taking turns, selecting numbers and blocking adjacent numbers. The game progresses as the pool of available numbers diminishes.\n\n#### End Game Scenario\n\nAssume the board reaches a state where only number **21** is available:\n\n**Board State:**\n\n```\n1(-) 2(-) 3(-) 4(-) 5(-) 6(-) 7(O) 8(-) 9(-) 10(-) 11(X) 12(-) 13(-) 14(X) 15(-) 16(-) 17(O) 18(-) 19(-) 20(-) 21\n```\n\n- **Player 1's Turn:**\n  - **Action:** Player 1 selects number **21**.\n  - **Board Update:**\n    - Number **21** is marked with `X`.\n    - Number **20** is already blocked.\n\n**Board State:**\n\n```\n1(-) 2(-) 3(-) 4(-) 5(-) 6(-) 7(O) 8(-) 9(-) 10(-) 11(X) 12(-) 13(-) 14(X) 15(-) 16(-) 17(O) 18(-) 19(-) 20(-) 21(X)\n```\n\n- **Player 2's Turn:**\n  - No unclaimed and unblocked numbers remain.\n  - **Player 2 cannot make a valid move.**\n\n**Result:** **Player 1 wins** as the last player to make a valid move.\n\n## Command-Line Interaction Example\n\n### Starting the Game\n\n```\nWelcome to Number Line Blockade!\nPlayer 1: X\nPlayer 2: O\n\nInitial Number Line:\n1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21\n```\n\n### Turn Sequence\n\n#### Player 1's Turn\n\n```\nPlayer 1's turn.\nAvailable numbers: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\nEnter the number you want to claim: 11\n\nYou have claimed number 11.\nBlocked numbers: 10, 12\n\nCurrent Number Line:\n1  2  3  4  5  6  7  8  9  10(-) 11(X) 12(-) 13  14  15  16  17  18  19  20  21\n```\n\n#### Player 2's Turn\n\n```\nPlayer 2's turn.\nAvailable numbers: 1 2 3 4 5 6 7 8 9 13 14 15 16 17 18 19 20 21\nEnter the number you want to claim: 7\n\nYou have claimed number 7.\nBlocked numbers: 6, 8\n\nCurrent Number Line:\n1  2  3  4  5  6(-) 7(O) 8(-) 9  10(-) 11(X) 12(-) 13  14  15  16  17  18  19  20  21\n```\n\n### Continuing the Game\n\nThe players continue entering their moves as prompted, with the game updating the number line and displaying the current state after each turn.\n\n### Game End\n\n```\nPlayer 2's turn.\nNo valid moves remaining.\nPlayer 1 wins the game!\n```\n\n## Strategic Tips\n\n- **Control Central Numbers:** Selecting numbers near the center can block more potential moves for your opponent due to the higher density of adjacent unclaimed numbers.\n\n- **Plan Ahead:** Anticipate which numbers will become available or blocked based on your selections and plan your moves to limit your opponent's options.\n\n- **Force Isolation:** Try to create isolated clusters of unclaimed numbers that you can control in subsequent turns.\n\n- **Time Your Moves:** Sometimes it's advantageous to leave certain numbers unclaimed until later to prevent opening opportunities for your opponent.\n\n## Conclusion\n\nNumber Line Blockade is a simple yet strategically rich game that tests players' foresight and tactical planning. With its straightforward rules and quick gameplay, it offers an engaging experience accessible through a command-line interface. Mastery comes from understanding the impact of each move and anticipating your opponent's strategy, ensuring that skilled players can consistently outmaneuver less experienced ones.",
    "# Zero Sum Duel\n\n## Rule Book\n\n### Objective\n\nZero Sum Duel is a two-player turn-based game where the goal is to be the first player to reduce your total score to exactly zero. Players strategically subtract numbers from their own scores, aiming to outmaneuver their opponent while adhering to the game's simple rules.\n\n### Setup\n\n- **Initial Scores**: Both players start with a total score of **20**.\n- **Allowed Numbers**: The numbers **1**, **2**, **3**, **4**, and **5** are available for subtraction.\n\n### Game Components\n\n#### Player Scores\n\n- **Player 1 Score**: Begins at **20**.\n- **Player 2 Score**: Begins at **20**.\n\n#### Subtraction Numbers\n\n- A set of integers from **1** to **5**.\n- These numbers represent the values players can subtract from their scores on their turn.\n\n### Turns\n\n- Players decide who goes first through mutual agreement or by a random method (e.g., coin toss).\n- Players alternate turns throughout the game.\n\n#### Structure of a Turn\n\n1. **Choose a Number**: The player selects a number between **1** and **5** to subtract from their total score.\n2. **Apply Restriction**: The chosen number **cannot** be the same as the number subtracted by the opponent on their **immediately preceding turn**.\n3. **Subtract the Number**: The chosen number is subtracted from the player's total score.\n4. **Check for Validity**: If subtracting the chosen number would reduce the score below zero, the player must choose a different number.\n5. **End Turn**: The turn ends, and it becomes the opponent's turn.\n\n### Rules and Mechanics\n\n#### Core Rules\n\n- **Allowed Subtractions**: Only numbers **1** through **5** can be subtracted.\n- **Immediate Restriction**: A player cannot subtract the same number their opponent just subtracted on the previous turn.\n- **Score Limit**: A player's score cannot drop below zero. Moves resulting in a negative score are invalid.\n- **Winning the Game**: The first player to reach a score of **exactly zero** wins the game.\n- **No Draws**: The game continues until one player wins; there are no draws.\n\n#### Special Conditions\n\n- **No Valid Moves**: If a player has no valid numbers to subtract (all would reduce the score below zero or are restricted), that player loses the game.\n\n### Scoring\n\n- **Score Tracking**: Keep a running total of each player's score after every turn.\n- **Victory Condition**: The player who reduces their score to exactly zero first is declared the winner.\n\n### Examples\n\n#### Example Game Playthrough\n\n**Initial State:**\n\n- Player 1 Score: 20\n- Player 2 Score: 20\n\n**Turn 1:**\n\n- **Player 1's Turn**\n  - Chooses to subtract **5**.\n  - New Score: 20 - 5 = **15**.\n- **Restriction for Player 2**: Cannot subtract **5** on the next turn.\n\n**Turn 2:**\n\n- **Player 2's Turn**\n  - Chooses to subtract **4**.\n  - New Score: 20 - 4 = **16**.\n- **Restriction for Player 1**: Cannot subtract **4** on the next turn.\n\n**Turn 3:**\n\n- **Player 1's Turn**\n  - Chooses to subtract **3**.\n  - New Score: 15 - 3 = **12**.\n- **Restriction for Player 2**: Cannot subtract **3** on the next turn.\n\n**Turn 4:**\n\n- **Player 2's Turn**\n  - Chooses to subtract **5** (since **3** is restricted).\n  - New Score: 16 - 5 = **11**.\n- **Restriction for Player 1**: Cannot subtract **5** on the next turn.\n\n**Turn 5:**\n\n- **Player 1's Turn**\n  - Chooses to subtract **2**.\n  - New Score: 12 - 2 = **10**.\n- **Restriction for Player 2**: Cannot subtract **2** on the next turn.\n\n**Turn 6:**\n\n- **Player 2's Turn**\n  - Chooses to subtract **4**.\n  - New Score: 11 - 4 = **7**.\n- **Restriction for Player 1**: Cannot subtract **4** on the next turn.\n\n**Turn 7:**\n\n- **Player 1's Turn**\n  - Chooses to subtract **5**.\n  - New Score: 10 - 5 = **5**.\n- **Restriction for Player 2**: Cannot subtract **5** on the next turn.\n\n**Turn 8:**\n\n- **Player 2's Turn**\n  - Chooses to subtract **3**.\n  - New Score: 7 - 3 = **4**.\n- **Restriction for Player 1**: Cannot subtract **3** on the next turn.\n\n**Turn 9:**\n\n- **Player 1's Turn**\n  - Chooses to subtract **2**.\n  - New Score: 5 - 2 = **3**.\n- **Restriction for Player 2**: Cannot subtract **2** on the next turn.\n\n**Turn 10:**\n\n- **Player 2's Turn**\n  - Chooses to subtract **4** (other options may reduce score below zero or are restricted).\n  - New Score: 4 - 4 = **0**.\n- **Player 2 Wins!**\n\n### Command-Line Interaction Example\n\nBelow is a sample of how the game might look in a command-line interface.\n\n```\nWelcome to Zero Sum Duel!\n\nPlayer 1 Score: 20\nPlayer 2 Score: 20\n\nPlayer 1's turn.\nAvailable numbers to subtract: 1, 2, 3, 4, 5\nEnter a number to subtract: 5\nPlayer 1 subtracts 5. New score: 15\n\nPlayer 2's turn.\nAvailable numbers to subtract: 1, 2, 3, 4 (Cannot use 5)\nEnter a number to subtract: 4\nPlayer 2 subtracts 4. New score: 16\n\nPlayer 1's turn.\nAvailable numbers to subtract: 1, 2, 3, 5 (Cannot use 4)\nEnter a number to subtract: 3\nPlayer 1 subtracts 3. New score: 12\n\nPlayer 2's turn.\nAvailable numbers to subtract: 1, 2, 4, 5 (Cannot use 3)\nEnter a number to subtract: 5\nPlayer 2 subtracts 5. New score: 11\n\nPlayer 1's turn.\nAvailable numbers to subtract: 1, 2, 3, 4 (Cannot use 5)\nEnter a number to subtract: 2\nPlayer 1 subtracts 2. New score: 10\n\n... (game continues)\n\nPlayer 2's turn.\nAvailable numbers to subtract: 1, 3, 5 (Cannot use 2)\nEnter a number to subtract: 4\nPlayer 2 subtracts 4. New score: 0\n\nPlayer 2 wins the game! Congratulations!\n```\n\n### Strategic Tips\n\n- **Monitor Restrictions**: Keep track of the numbers you are restricting for your opponent. By choosing certain numbers, you can limit their options.\n- **Plan Ahead**: Anticipate future moves to avoid being forced into a position where you cannot win.\n- **Balance Your Choices**: Use a variety of numbers to avoid predictability and to manipulate the available options for your opponent.\n\n### Conclusion\n\nZero Sum Duel is a simple yet engaging game that combines basic arithmetic with strategic planning. Its straightforward rules make it easy to learn, while the restriction mechanics provide depth for strategic play. The game is perfect for quick matches and is well-suited for implementation in a command-line interface.\n\nEnjoy sharpening your strategic skills and may the best player win!",
    "# Number Tower Duel\n\n## Objective\n\n**Be the first player to successfully place all your numbered tiles onto the shared towers, or force your opponent into a position where they cannot make a valid move.** Victory is achieved by strategically stacking your numbers while blocking your opponent's options.\n\n## Setup\n\n1. **Players**: Two players are required.\n2. **Tiles**: Each player receives a set of numbered tiles from 1 to 5 (five tiles in total).\n3. **Towers**: There are three shared towers labeled Tower A, Tower B, and Tower C. All towers start empty.\n4. **Starting Player**: Decide who goes first (e.g., flip a coin or agree mutually).\n\n## Game Components\n\n- **Numbered Tiles (1-5)**:\n  - Each tile is numbered from 1 to 5.\n  - Tiles are unique within a player's hand; each number from 1 to 5 appears once.\n  - Tiles are represented by their numbers in the command-line interface.\n\n- **Towers (A, B, C)**:\n  - Shared between players.\n  - Each tower is a stack where tiles are placed on top of one another.\n  - Towers are empty at the start of the game.\n  - Towers can be represented as lists showing the sequence of tiles from bottom to top.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with the player chosen during setup.\n- **Player Actions on Their Turn**:\n  1. **View Game State**: Optionally view the current state of all towers and remaining tiles in hand.\n  2. **Select Tile**: Choose one tile from your hand to play.\n  3. **Select Tower**: Choose one of the three towers (A, B, or C) to place your tile.\n  4. **Place Tile**: Place your tile on the selected tower according to the placement rules.\n- **Turn Progression**: After placing a tile, the turn passes to the opponent.\n\n## Rules and Mechanics\n\n### Tile Placement Rules\n\n1. **Valid Moves**:\n   - **Empty Tower**: You may place any of your tiles on an empty tower.\n   - **Non-Empty Tower**: You may place a tile on top of a tower only if your tile's number is **higher** than the number on the top tile of that tower.\n2. **Invalid Moves**:\n   - You cannot place a tile on a tower if your tile's number is equal to or lower than the number on the top tile of that tower.\n   - You cannot place a tile on a tower if you have no tiles with higher numbers than the top tile.\n3. **Tile Usage**:\n   - Once a tile is placed on a tower, it cannot be moved or played again.\n   - Each tile can only be used once per game.\n\n### Forced Pass and End of Game\n\n- **Forced Pass**:\n  - If a player has no valid moves (cannot place any of their remaining tiles on any tower), they must pass their turn.\n- **End of Game**:\n  - **Winning by Placement**: If a player successfully places all their tiles onto the towers, they win the game immediately.\n  - **Winning by Opponent's Inability**: If both players pass consecutively because neither can make a valid move, the player with fewer remaining tiles in hand wins.\n  - **Tie-Breaker**:\n    - If both players have the same number of remaining tiles after consecutive passes, the player whose tiles have a lower total sum wins.\n    - If still tied, the game proceeds in sudden death: players remove the top tile from any tower (starting with the last player who placed a tile) and see if new moves are possible.\n\n## Scoring\n\n- **Primary Goal**: There is no point scoring system; the objective is to be the first to place all your tiles or to force your opponent into a position with no valid moves.\n- **Tie-Breaker Rankings**:\n  1. Fewest tiles remaining.\n  2. Lowest total of remaining tile numbers.\n  3. Sudden death play if still tied.\n\n## Examples\n\n### Example Game Play\n\n#### Initial Hands\n\n- **Player 1's Hand**: [1, 2, 3, 4, 5]\n- **Player 2's Hand**: [1, 2, 3, 4, 5]\n- **Towers**:\n  - Tower A: Empty\n  - Tower B: Empty\n  - Tower C: Empty\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**:\n   - **Select Tile**: 2\n   - **Select Tower**: Tower A\n   - **Place Tile**: Places 2 on Tower A\n   - **Player 1's Remaining Tiles**: [1, 3, 4, 5]\n\n2. **Player 2's Turn**:\n   - **Select Tile**: 1\n   - **Select Tower**: Tower B\n   - **Place Tile**: Places 1 on Tower B\n   - **Player 2's Remaining Tiles**: [2, 3, 4, 5]\n\n3. **Player 1's Turn**:\n   - **Select Tile**: 3\n   - **Select Tower**: Tower A\n   - **Placement Valid**: Yes (3 > top tile 2 on Tower A)\n   - **Place Tile**: Places 3 on Tower A\n   - **Player 1's Remaining Tiles**: [1, 4, 5]\n\n4. **Player 2's Turn**:\n   - **Select Tile**: 2\n   - **Select Tower**: Tower B\n   - **Placement Valid**: Yes (2 > top tile 1 on Tower B)\n   - **Place Tile**: Places 2 on Tower B\n   - **Player 2's Remaining Tiles**: [3, 4, 5]\n\n5. **Player 1's Turn**:\n   - **Select Tile**: 4\n   - **Select Tower**: Tower A\n   - **Placement Valid**: Yes (4 > top tile 3 on Tower A)\n   - **Place Tile**: Places 4 on Tower A\n   - **Player 1's Remaining Tiles**: [1, 5]\n\n6. **Player 2's Turn**:\n   - **Select Tile**: 3\n   - **Select Tower**: Tower B\n   - **Placement Valid**: Yes (3 > top tile 2 on Tower B)\n   - **Place Tile**: Places 3 on Tower B\n   - **Player 2's Remaining Tiles**: [4, 5]\n\n7. **Player 1's Turn**:\n   - **Select Tile**: 5\n   - **Select Tower**: Tower A\n   - **Placement Valid**: Yes (5 > top tile 4 on Tower A)\n   - **Place Tile**: Places 5 on Tower A\n   - **Player 1's Remaining Tiles**: [1]\n\n8. **Player 2's Turn**:\n   - **Select Tile**: 4\n   - **Select Tower**: Tower B\n   - **Placement Valid**: Yes (4 > top tile 3 on Tower B)\n   - **Place Tile**: Places 4 on Tower B\n   - **Player 2's Remaining Tiles**: [5]\n\n9. **Player 1's Turn**:\n   - **Select Tile**: 1\n   - **Possible Towers**:\n     - **Tower A**: Top tile is 5 (1 < 5) - Invalid\n     - **Tower B**: Top tile is 4 (1 < 4) - Invalid\n     - **Tower C**: Empty - Valid\n   - **Select Tower**: Tower C\n   - **Place Tile**: Places 1 on Tower C\n   - **Player 1's Remaining Tiles**: []\n\n   **Player 1 has placed all their tiles and wins the game!**\n\n### Command-Line Interaction Example\n\nBelow is a sample interaction between a player and the game program.\n\n#### Game State Display\n\n```\nTowers:\n- Tower A: 5\n- Tower B: 4\n- Tower C: Empty\n\nYour Hand:\n- [1]\n\nOpponent has 1 tile(s) remaining.\n```\n\n#### Player's Turn Prompt\n\n```\nIt's your turn.\n\nAvailable Tiles in Hand: [1]\nEnter the number of the tile you wish to play: 1\n\nAvailable Towers:\n- A (Top: 5)\n- B (Top: 4)\n- C (Empty)\n\nEnter the tower you wish to place the tile on (A, B, C): C\n\nYou placed tile '1' on Tower C.\n```\n\n#### Game Conclusion\n\n```\nCongratulations! You have placed all your tiles.\nYou win the game!\n```\n\n## Strategy Tips\n\n- **Prioritize Lower Numbers Early**: Play your lower-numbered tiles on empty towers to maximize future placement options.\n- **Block Your Opponent**: Anticipate your opponent's remaining tiles and aim to limit their valid moves.\n- **Tower Management**: Be cautious about building towers too high too quickly, as it may restrict your own future moves.\n- **Balance**: Try to balance the distribution of your tiles among the towers to avoid being forced into a pass.\n\n## Summary\n\nNumber Tower Duel is a simple yet strategic game that requires foresight and planning. By carefully choosing which tiles to play and where to place them, players can outmaneuver their opponent and claim victory. With easy-to-understand rules and quick gameplay, it is ideal for command-line interface implementation and provides an engaging challenge for both new and experienced players.\n\nEnjoy the game and may the best strategist win!",
    "# Sequence Capture - Game Rule Book\n\n## Objective\n\n**Sequence Capture** is a two-player, turn-based game designed for a command-line interface. The primary goal is to be the first player to claim a sequence of **four consecutive numbers** from a shared number line ranging from 1 to 10. Players must strategically select numbers to build their own sequence while blocking their opponent's progress.\n\n## Setup\n\n1. **Number Line Initialization**:\n   - A shared number line is displayed with numbers **1** through **10**.\n   - At the start, all numbers are unclaimed and available for selection.\n\n2. **Player Assignment**:\n   - Two players are identified as **Player 1** and **Player 2**.\n   - Each player is assigned a unique marker:\n     - **Player 1**: `X`\n     - **Player 2**: `O`\n\n3. **Starting Player**:\n   - Decide who goes first (e.g., coin toss, random selection, or mutual agreement).\n\n## Game Components\n\n- **Number Line**: Represents numbers from 1 to 10.\n  ```\n  1 2 3 4 5 6 7 8 9 10\n  ```\n- **Player Markers**:\n  - `X` for Player 1.\n  - `O` for Player 2.\n- **Command-Line Interface**:\n  - Displays the number line with claimed numbers marked.\n  - Prompts players for their input on their turn.\n\n## Turns\n\n- **Turn Order**:\n  - Players alternate turns starting with the designated first player.\n- **Turn Actions**:\n  1. **Display**: The current state of the number line is shown.\n  2. **Selection**: The current player selects one unclaimed number to claim.\n  3. **Update**: The number line is updated with the player's marker on the claimed number.\n- **Invalid Moves**:\n  - Selecting an already claimed number is not allowed.\n  - If an invalid move is made, the player is prompted to select again.\n\n## Rules and Mechanics\n\n1. **Claiming Numbers**:\n   - On their turn, a player claims one unclaimed number from the number line.\n   - The claimed number is marked with the player's marker.\n\n2. **Building a Sequence**:\n   - The objective is to have four of your claimed numbers in consecutive order.\n   - Sequences can start at any number as long as they consist of four numbers in a row (e.g., 2-3-4-5).\n\n3. **Blocking Opponent**:\n   - Players may claim numbers that are strategic for blocking the opponent's potential sequences.\n\n4. **Winning the Game**:\n   - The first player to achieve a sequence of four consecutive claimed numbers wins immediately.\n\n5. **Game Continuation**:\n   - If neither player has achieved a sequence after all numbers are claimed, proceed to the tiebreaker.\n\n6. **Tiebreaker Mechanism** (No Draws Allowed):\n   - Compare the longest consecutive sequences claimed by each player.\n   - The player with the longer sequence wins.\n   - If both players have sequences of equal length, the player whose sequence starts with the lower number wins.\n\n## Scoring\n\n- **Winning**:\n  - Achieving a four-number consecutive sequence.\n  - Winning via the tiebreaker if necessary.\n- **Losing**:\n  - Failing to achieve the objective before the opponent.\n  - Having a shorter or higher-starting sequence in the tiebreaker.\n\n*Note*: There is no points system; the game results in a win or a loss.\n\n## Examples\n\n### Example Game Play\n\n#### Turn 1:\n\n- **Player 1's Turn**:\n  - Number Line: `1 2 3 4 5 6 7 8 9 10`\n  - Player 1 claims **5**.\n  - Updated Line: `1 2 3 4 [X] 6 7 8 9 10`\n\n#### Turn 2:\n\n- **Player 2's Turn**:\n  - Player 2 claims **6**.\n  - Updated Line: `1 2 3 4 [X] [O] 7 8 9 10`\n\n#### Turn 3:\n\n- **Player 1's Turn**:\n  - Player 1 claims **4**.\n  - Updated Line: `1 2 3 [X] [X] [O] 7 8 9 10`\n\n#### Turn 4:\n\n- **Player 2's Turn**:\n  - Player 2 claims **7**.\n  - Updated Line: `1 2 3 [X] [X] [O] [O] 8 9 10`\n\n#### Turn 5:\n\n- **Player 1's Turn**:\n  - Player 1 claims **3**.\n  - Updated Line: `1 2 [X] [X] [X] [O] [O] 8 9 10`\n\n#### Turn 6:\n\n- **Player 2's Turn**:\n  - Player 2 claims **8**.\n  - Updated Line: `1 2 [X] [X] [X] [O] [O] [O] 9 10`\n\n#### Turn 7:\n\n- **Player 1's Turn**:\n  - Player 1 claims **2**.\n  - Updated Line: `1 [X] [X] [X] [X] [O] [O] [O] 9 10`\n\n- **Win Condition Check**:\n  - Player 1 has claimed numbers **2**, **3**, **4**, **5**.\n  - This is a sequence of four consecutive numbers.\n  - **Player 1 wins the game**.\n\n### Command-Line Interaction Sample\n\n#### At the Start:\n\n```\nNumber Line:\n1 2 3 4 5 6 7 8 9 10\n\nPlayer 1 (X), select a number to claim:\n> 5\n\nNumber Line:\n1 2 3 4 [X] 6 7 8 9 10\n```\n\n#### Next Turn:\n\n```\nPlayer 2 (O), select a number to claim:\n> 6\n\nNumber Line:\n1 2 3 4 [X] [O] 7 8 9 10\n```\n\n*...and so on until the game concludes.*\n\n## Strategic Tips\n\n- **Anticipate Moves**:\n  - Pay attention to which numbers your opponent is claiming.\n  - Try to predict their intended sequence and block it.\n\n- **Prioritize Middle Numbers**:\n  - Claiming middle numbers (like 5 and 6) gives more flexibility for building sequences.\n\n- **Create Multiple Options**:\n  - Work towards building more than one potential sequence to adapt to your opponent's moves.\n\n- **Blocking Early**:\n  - If your opponent starts building a sequence, block it early before it's too late.\n\n## Conclusion\n\nSequence Capture is a quick and strategic game that tests your foresight and ability to anticipate your opponent's moves. Simple to learn and play, it provides depth for players who enjoy planning and strategy in a minimalistic game setting.\n\nEnjoy the game and may the best strategist win!\n\n---",
    "# Safe Path\n\n## Objective\n\n**Safe Path** is a strategic two-player, turn-based game played on a linear path of numbered positions. The primary goal is to be the first player to reach exactly position **20** without landing on a mine. Players must strategically plan their moves to navigate the path safely while avoiding known mines and outmaneuvering their opponent. The game ends when a player either successfully reaches position 20 or loses by stepping on a mine.\n\n## Setup\n\n- **Game Board**: A linear path consisting of positions numbered from **0** to **20**.\n- **Players**: Two players, referred to as **Player 1** and **Player 2**.\n- **Starting Positions**: Both players start at position **0**.\n- **Mines**: Mines are placed on the path at positions **5**, **10**, **15**, and **18**. The locations of the mines are known to both players.\n\n## Game Components\n\n- **Linear Path**: Represents the game board with positions from **0** (start) to **20** (end).\n- **Player Tokens**: Each player has a token that represents their current position on the path.\n- **Mines**: Hazardous positions (5, 10, 15, 18) that players must avoid. Landing on a mine results in an immediate loss.\n\n## Turns\n\n- **Turn Order**: The game begins with **Player 1**, and players alternate turns thereafter.\n- **Player Actions**: On their turn, a player must move their token forward by **1**, **2**, or **3** positions.\n- **Turn Progression**: After a player completes their move, it becomes the other player's turn.\n\n## Rules and Mechanics\n\n1. **Movement**:\n   - On your turn, move your token forward by **1**, **2**, or **3** positions from your current position.\n   - Movement must be forward only; backward movement is not allowed.\n   - You cannot skip a turn; you must move on every turn.\n\n2. **Mines**:\n   - Mines are located at positions **5**, **10**, **15**, and **18**.\n   - **Landing** exactly on a mine results in an immediate loss for the player who landed on it.\n   - Players may pass over mines without penalty as long as they do not land on them.\n\n3. **Winning the Game**:\n   - The first player to reach **exactly position 20** wins the game.\n   - If a player cannot move without landing on a mine or exceeding position 20, they must choose the maximum move that keeps them within bounds and safe.\n   - If a player lands on a mine, the other player wins by default.\n\n4. **Constraints**:\n   - Players must consider both their current position and potential future moves to avoid mines.\n   - Planning ahead is crucial to force your opponent into a position where they cannot avoid a mine.\n\n## Scoring\n\n- There is no point-based scoring system in **Safe Path**.\n- The outcome is binary: a player either **wins** by reaching position 20 safely or **loses** by landing on a mine.\n- The game does not allow for a draw; a winner is always determined.\n\n## Examples\n\n### Example Scenario 1\n\n**Starting Positions**:\n- Player 1: Position 0\n- Player 2: Position 0\n\n**Turn 1**:\n- **Player 1** moves ahead by **3** to position **3**.\n\n**Turn 2**:\n- **Player 2** moves ahead by **2** to position **2**.\n\n**Turn 3**:\n- **Player 1** considers that moving by 2 will land on position **5** (a mine). To avoid the mine, they choose to move ahead by **1** to position **4**.\n\n**Turn 4**:\n- **Player 2** moves ahead by **1** to position **3**.\n\n**Turn 5**:\n- **Player 1** must avoid landing on the mine at position **5**. They choose to move ahead by **3** to position **7** (since moving by 1 or 2 would land on or pass the mine at position 5).\n\n**Turn 6**:\n- **Player 2** cannot move by 3 (would land on position **6**), so they move ahead by **2** to position **5** (a mine) and loses the game.\n\n**Outcome**:\n- **Player 2** lands on a mine at position **5**. **Player 1** wins the game.\n\n### Example Scenario 2\n\n**Starting Positions**:\n- Player 1: Position 0\n- Player 2: Position 0\n\n**Turn 1**:\n- **Player 1** moves ahead by **1** to position **1**.\n\n**Turn 2**:\n- **Player 2** moves ahead by **3** to position **3**.\n\n**Turn 3**:\n- **Player 1** moves ahead by **3** to position **4**.\n\n**Turn 4**:\n- **Player 2** must avoid the mine at position **5**. They choose to move ahead by **2** to position **5** (a mine), resulting in a loss.\n\n**Outcome**:\n- **Player 2** lands on a mine at position **5**. **Player 1** wins the game.\n\n### Command-Line Interaction Sample\n\n**Notation**:\n- `P1` and `P2` denote Player 1 and Player 2.\n- `>` indicates the prompt for player's input.\n\n**Game Start**:\n\n```\nWelcome to Safe Path!\nPlayer 1 and Player 2 start at position 0.\nMines are at positions: 5, 10, 15, 18\nFirst to reach position 20 without landing on a mine wins!\n\nPlayer 1's turn.\nYou are at position 0.\nEnter your move (1, 2, or 3): \n> 3\n\nPlayer 1 moves to position 3.\n\nPlayer 2's turn.\nYou are at position 0.\nEnter your move (1, 2, or 3): \n> 3\n\nPlayer 2 moves to position 3.\n\nPlayer 1's turn.\nYou are at position 3.\nEnter your move (1, 2, or 3): \n> 2\n\nPlayer 1 moves to position 5.\n\nOh no! Player 1 landed on a mine at position 5.\nPlayer 2 wins the game!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Always look several moves ahead to ensure you won't be forced into landing on a mine.\n- **Control the Pace**: By choosing your moves wisely, you can force your opponent into positions where they have no safe moves.\n- **Avoid Mirroring**: Don't simply copy your opponent's moves; adapt your strategy based on the current positions.\n\n## Conclusion\n\n**Safe Path** is a game of strategic foresight and planning. Each move must be calculated not only for immediate safety but also for future implications. By carefully choosing your steps, you can navigate the mine-laden path and emerge victorious.\n\nEnjoy the challenge, and may the safest path lead you to victory!",
    "**Prime Sprint: A Two-Player Command-Line Game**\n\n---\n\n### **Objective**\n\nBe the first player to reach **exactly 25 points** by strategically selecting numbers. The primary goal is to accumulate points based on the primality of chosen numbers while managing both your own score and your opponent's.\n\n---\n\n### **Setup**\n\n- **Starting Scores**: Both Player 1 and Player 2 begin with a score of **0**.\n- **Available Numbers**: Numbers from **1 to 9** are available for selection.\n- **Game Start**: Decide which player goes first (e.g., by agreement or a random selection).\n\n---\n\n### **Game Components**\n\n- **Numbers (1-9)**:\n  - **Prime Numbers**: 2, 3, 5, 7\n  - **Composite Numbers**: 4, 6, 8, 9\n  - **Unique Number**: 1 (neither prime nor composite)\n\n---\n\n### **Turns**\n\n- Players take turns selecting numbers.\n- **Turn Structure**:\n  1. **Number Selection**: On your turn, select a number between 1 and 9.\n  2. **Score Adjustment**:\n     - If the number is **prime**, **add** it to **your own score**.\n     - If the number is **composite**, **add** it to **your opponent's score**.\n     - If the number is **1**, **add** 1 point to **your own score**.\n  3. **Score Verification**: Ensure that no score exceeds 25.\n     - If adding the selected number would cause **any player's** score to **exceed 25**, the selection is **invalid**, and the turn is **forfeited**.\n  4. **Win Condition Check**: If a player reaches **exactly 25 points**, the game ends, and that player wins.\n- **Turn Progression**: After completing the above steps, the turn passes to the other player.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Number Selection Constraints**:\n   - You may select any number from 1 to 9 on your turn.\n   - Numbers can be selected multiple times throughout the game.\n2. **Scoring Mechanics**:\n   - **Prime Numbers (2, 3, 5, 7)**:\n     - Added to **your own score**.\n   - **Composite Numbers (4, 6, 8, 9)**:\n     - Added to **your opponent's score**.\n   - **Number 1**:\n     - Added to **your own score**.\n3. **Score Limits**:\n   - **Exact Score Rule**: To win, a player must reach **exactly 25 points**.\n   - **Over-Scoring Penalty**:\n     - If a move would result in **any player's** score exceeding 25:\n       - The move is considered **invalid**.\n       - The player **loses their turn**.\n       - No scores are adjusted.\n4. **Winning the Game**:\n   - The first player to reach **exactly 25 points** wins immediately.\n   - If both players are unable to make valid moves on their turns and no one has reached 25 points, continue passing turns until a valid move is possible.\n\n---\n\n### **Scoring**\n\n- **Tracking Scores**:\n  - Keep a running total of both players' scores after each turn.\n  - Display scores at the end of each turn for clarity.\n- **Strategic Scoring**:\n  - Use composite numbers strategically to increase your opponent's score, potentially forcing them into a position where they cannot make a valid move without exceeding 25.\n\n---\n\n### **Examples**\n\n#### **Example Game Play**\n\n**Initial State**:\n- Player 1 Score: 0\n- Player 2 Score: 0\n\n---\n\n**Turn 1**:\n\n- **Player 1's Turn**:\n  - **Selects**: 2 (prime)\n  - **Action**: Adds 2 to **own score**.\n  - **Scores**:\n    - Player 1: 2\n    - Player 2: 0\n\n---\n\n**Turn 2**:\n\n- **Player 2's Turn**:\n  - **Selects**: 9 (composite)\n  - **Action**: Adds 9 to **Player 1's score**.\n  - **Scores**:\n    - Player 1: 11\n    - Player 2: 0\n\n---\n\n**Turn 3**:\n\n- **Player 1's Turn**:\n  - **Selects**: 5 (prime)\n  - **Action**: Adds 5 to **own score**.\n  - **Scores**:\n    - Player 1: 16\n    - Player 2: 0\n\n---\n\n**Turn 4**:\n\n- **Player 2's Turn**:\n  - **Selects**: 8 (composite)\n  - **Action**: Adds 8 to **Player 1's score**.\n  - **Scores**:\n    - Player 1: 24\n    - Player 2: 0\n\n---\n\n**Turn 5**:\n\n- **Player 1's Turn**:\n  - **Selects**: 1\n  - **Action**: Adds 1 to **own score**.\n  - **Scores**:\n    - Player 1: **25**\n    - Player 2: 0\n  - **Result**: Player 1 wins by reaching exactly 25 points!\n\n---\n\n#### **Invalid Move Example**\n\n**Situation**:\n- Player 1 Score: 22\n- Player 2 Score: 24\n\n**Player 1's Turn**:\n\n- **Possible Selections**:\n  - **Selecting 3 (prime)**:\n    - Would add 3 to Player 1's score: 22 + 3 = **25** (valid move).\n  - **Selecting 4 (composite)**:\n    - Would add 4 to Player 2's score: 24 + 4 = **28** (invalid, exceeds 25).\n    - **Outcome**: Move is invalid; Player 1's turn is forfeited.\n\n**Strategic Choice**:\n- Player 1 should select 3 to reach exactly 25 and win.\n\n---\n\n### **Command-Line Interaction Example**\n\n**Game Start**\n\n```\nWelcome to Prime Sprint!\nPlayer 1 and Player 2 start with 0 points.\n```\n\n---\n\n**Player 1's Turn**\n\n```\nPlayer 1, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 7\n\nYou selected 7 (prime).\nAdded 7 to your score.\n\nScores:\n- Player 1: 7\n- Player 2: 0\n```\n\n---\n\n**Player 2's Turn**\n\n```\nPlayer 2, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 6\n\nYou selected 6 (composite).\nAdded 6 to Player 1's score.\n\nScores:\n- Player 1: 13\n- Player 2: 0\n```\n\n---\n\n**Player 1's Turn**\n\n```\nPlayer 1, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 5\n\nYou selected 5 (prime).\nAdded 5 to your score.\n\nScores:\n- Player 1: 18\n- Player 2: 0\n```\n\n---\n\n**Player 2's Turn**\n\n```\nPlayer 2, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 9\n\nYou selected 9 (composite).\nAdding 9 to Player 1's score would exceed 25.\nInvalid move! You lose your turn.\n\nScores:\n- Player 1: 18\n- Player 2: 0\n```\n\n---\n\n**Player 1's Turn**\n\n```\nPlayer 1, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 7\n\nYou selected 7 (prime).\nAdding 7 to your score would exceed 25.\nInvalid move! You lose your turn.\n\nScores:\n- Player 1: 18\n- Player 2: 0\n```\n\n---\n\n**Player 2's Turn**\n\n```\nPlayer 2, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 3\n\nYou selected 3 (prime).\nAdded 3 to your score.\n\nScores:\n- Player 1: 18\n- Player 2: 3\n```\n\n---\n\n**Player 1's Turn**\n\n```\nPlayer 1, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 5\n\nYou selected 5 (prime).\nAdded 5 to your score.\n\nScores:\n- Player 1: **23**\n- Player 2: 3\n```\n\n---\n\n**Player 2's Turn**\n\n```\nPlayer 2, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 2\n\nYou selected 2 (prime).\nAdded 2 to your score.\n\nScores:\n- Player 1: 23\n- Player 2: 5\n```\n\n---\n\n**Player 1's Turn**\n\n```\nPlayer 1, it's your turn.\nAvailable numbers: 1-9\n\nEnter your selection: 2\n\nYou selected 2 (prime).\nAdded 2 to your score.\n\nScores:\n- Player 1: **25**\n- Player 2: 5\n\nPlayer 1 wins by reaching exactly 25 points!\n```\n\n---\n\n### **Strategies and Tips**\n\n- **Monitor Scores Closely**: Always be aware of both your own and your opponent's scores to avoid making invalid moves.\n- **Use Composites Wisely**: Adding composites to your opponent's score can force them into difficult positions but be careful not to inadvertently help them reach 25.\n- **Prime Selections**: Prioritize selecting primes when it benefits you, but watch out for overshooting 25.\n- **Plan Ahead**: Think a few moves ahead to anticipate the opponent's options and limit their viable moves.\n- **Number 1**: Don't underestimate selecting 1, especially when you're close to 25.\n\n---\n\n### **Conclusion**\n\nPrime Sprint is a game of simple rules but deep strategy. By carefully choosing numbers and anticipating your opponent's moves, you can control the flow of the game and secure victory. Enjoy testing your strategic thinking in this numerical race to 25!\n\n---\n\n**Happy Gaming!**",
    "# Cross Over: Rule Book\n\n## Overview\n\n**Cross Over** is a strategic two-player, turn-based game designed for play in a command-line interface. The game is simple to learn and code, ends quickly with no possibility of a draw, and rewards strategic planning and foresight. Players control pieces on a linear track, aiming to either cross into the opponent's territory or capture all opposing pieces.\n\n---\n\n## Objective\n\n- **Primary Goal:** Be the first player to move one of your pieces into or beyond the opponent's starting positions.\n- **Alternate Victory Condition:** Capture all of the opponent's pieces.\n  \nAchieving either of these conditions results in an immediate win.\n\n---\n\n## Setup\n\n### Game Board\n\n- **Structure:** A linear track consisting of **11 positions**, numbered from **0** to **10**.\n- **Positions:**\n  - **Positions 0-2:** Player 1's starting area.\n  - **Positions 8-10:** Player 2's starting area.\n  - **Positions 3-7:** Neutral territory.\n\n### Player Pieces\n\n- **Each Player Has:**\n  - **Three pieces**, uniquely labeled for identification.\n    - **Player 1's Pieces:** `P1-A`, `P1-B`, `P1-C`.\n    - **Player 2's Pieces:** `P2-A`, `P2-B`, `P2-C`.\n- **Starting Positions:**\n  - **Player 1:**\n    - `P1-A` at position **0**.\n    - `P1-B` at position **1**.\n    - `P1-C` at position **2**.\n  - **Player 2:**\n    - `P2-A` at position **10**.\n    - `P2-B` at position **9**.\n    - `P2-C` at position **8**.\n\n---\n\n## Game Components\n\n### Game Board\n\n- **Linear Track:** Positions numbered from **0** (left end) to **10** (right end).\n- **Visual Representation:** A sequential arrangement of positions that pieces move across.\n\n### Player Pieces\n\n- **Identifiers:**\n  - **Player 1:** `P1-A`, `P1-B`, `P1-C`.\n  - **Player 2:** `P2-A`, `P2-B`, `P2-C`.\n- **Attributes:**\n  - **Position:** Current location on the track.\n  - **Ownership:** Controlled by the respective player.\n\n---\n\n## Turns\n\n### Turn Order\n\n- **Initial Turn:** Player 1 begins the game.\n- **Subsequent Turns:** Players alternate turns thereafter.\n\n### Turn Actions\n\n- **On Your Turn:**\n  1. **Select a Piece:** Choose one of your pieces to move.\n  2. **Determine Movement:** Decide to move the piece forward by **one** or **two** positions.\n  3. **Execute Move:** Move the piece according to the rules.\n\n### Turn Progression\n\n- After completing your move, it becomes the other player's turn.\n- The game continues until a player achieves a win condition.\n\n---\n\n## Rules and Mechanics\n\n### Movement Rules\n\n1. **Direction of Movement:**\n   - **Player 1:** Moves pieces towards higher-numbered positions (right).\n   - **Player 2:** Moves pieces towards lower-numbered positions (left).\n\n2. **Movement Options:**\n   - **Advance by One Position:**\n     - Move your piece to the next position in your movement direction.\n   - **Advance by Two Positions:**\n     - Move your piece two positions ahead in your movement direction.\n\n3. **Restrictions:**\n   - **Own Pieces Block Movement:**\n     - You cannot move a piece into a position occupied by another of your pieces.\n   - **Board Limits:**\n     - You cannot move beyond position **10** (Player 1) or below position **0** (Player 2).\n\n### Capturing Pieces\n\n1. **Capturing Opponent's Pieces:**\n   - If you move your piece into a position occupied by an opponent's piece, you capture it.\n   - **Captured Piece:** Removed from the game permanently.\n\n2. **Capturing Mechanics:**\n   - **Capture and Move:**\n     - Your piece replaces the opponent's piece on the board.\n   - **No Simultaneous Occupation:**\n     - Only one piece can occupy a position at any time.\n\n### Winning the Game\n\n1. **Crossing Over:**\n   - **Player 1 Wins:** By moving any piece into positions **8**, **9**, or **10**.\n   - **Player 2 Wins:** By moving any piece into positions **0**, **1**, or **2**.\n   - **Immediate Victory:** The game ends as soon as the crossover occurs.\n\n2. **Capturing All Opponent's Pieces:**\n   - If you capture all three of the opponent's pieces, you win.\n   - **Game End:** The game ends immediately when the last opponent's piece is captured.\n\n### Legal Moves\n\n1. **No Available Moves:**\n   - If you have no legal moves (all moves blocked), you must pass your turn.\n   - **Stalemate Avoidance:** The game continues until a win condition is met.\n\n2. **Mandatory Forward Movement:**\n   - You must always move your pieces forward in your designated direction.\n\n---\n\n## Scoring\n\n- **No Point System:** The game is won by meeting the victory conditions, not by accumulating points.\n- **Win Conditions:**\n  - **Primary:** Crossing into or beyond the opponent's starting positions.\n  - **Secondary:** Capturing all of the opponent's pieces.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Initial Board State\n\n```\nPositions: 0 1 2 3 4 5 6 7 8 9 10\n           P1-A P1-B P1-C           P2-C P2-B P2-A\n```\n\n#### Turn-by-Turn Example\n\n**Turn 1 - Player 1:**\n\n- **Action:** Move `P1-A` from position **0** to **2** (forward 2).\n- **Result:** `P1-A` is now at position **2**.\n\n**Turn 2 - Player 2:**\n\n- **Action:** Move `P2-A` from position **10** to **9** (forward 1).\n- **Result:** `P2-A` is now at position **9**.\n\n**Turn 3 - Player 1:**\n\n- **Action:** Move `P1-A` from position **2** to **3** (forward 1).\n- **Result:** `P1-A` is now at position **3**.\n\n**Turn 4 - Player 2:**\n\n- **Action:** Move `P2-C` from position **8** to **6** (forward 2).\n- **Result:** `P2-C` is now at position **6**.\n\n**Turn 5 - Player 1:**\n\n- **Action:** Move `P1-A` from position **3** to **5** (forward 2).\n- **Result:** `P1-A` is now at position **5**.\n\n**Turn 6 - Player 2:**\n\n- **Action:** Move `P2-C` from position **6** to **5** (forward 1) to capture `P1-A`.\n- **Result:** `P1-A` is captured and removed from the game. `P2-C` occupies position **5**.\n\n**Game Continues...**\n\nPlayers continue to take turns, moving and capturing, until one achieves a win condition.\n\n### Command-Line Interaction Sample\n\n**Player 1's Turn:**\n\n```\nYour Pieces:\n- P1-B at position 1\n- P1-C at position 2\n\nOpponent's Pieces:\n- P2-A at position 9\n- P2-B at position 9\n- P2-C at position 5\n\nAvailable Moves:\n1. Move P1-B from position 1 to 2 (forward 1)\n2. Move P1-B from position 1 to 3 (forward 2)\n3. Move P1-C from position 2 to 3 (forward 1)\n4. Move P1-C from position 2 to 4 (forward 2)\n\nEnter the number of your chosen move: 2\n\nResult:\n- You moved P1-B to position 3.\n\n```\n\n**Player 2's Turn:**\n\n```\nYour Pieces:\n- P2-A at position 9\n- P2-B at position 9\n- P2-C at position 5\n\nOpponent's Pieces:\n- P1-B at position 3\n- P1-C at position 2\n\nAvailable Moves:\n1. Move P2-A from position 9 to 8 (forward 1)\n2. Move P2-A from position 9 to 7 (forward 2)\n3. Move P2-B from position 9 to 8 (forward 1)\n4. Move P2-B from position 9 to 7 (forward 2)\n5. Move P2-C from position 5 to 4 (forward 1) to capture P1-B.\n\nEnter the number of your chosen move: 5\n\nResult:\n- You moved P2-C to position 4 and captured P1-B!\n\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead:** Anticipate your opponent's possible moves and plan your strategy accordingly.\n- **Balance Offense and Defense:** While advancing towards the opponent's territory, protect your own pieces from capture.\n- **Control the Center:** Holding positions in the middle of the board can provide tactical advantages.\n- **Forced Moves:** Try to force your opponent into positions where they have limited or no good moves.\n\n---\n\n## Summary\n\n**Cross Over** is a simple yet strategically rich game that tests players' planning and tactical skills. With straightforward rules and fast-paced gameplay, it offers an engaging experience that rewards foresight and strategic thinking. Perfect for quick matches, the game ensures that a skilled player can consistently outmaneuver an unskilled opponent.\n\nHave fun crossing over to victory!",
    "# Prime Subtractor\n\n## Objective\n\nBe the player who reduces the shared number to **exactly zero** by strategically subtracting allowed prime numbers on your turn.\n\n## Setup\n\n- **Shared Number**: The game starts with a shared number set to **50**.\n\n## Game Components\n\n- **Shared Number**: An integer value that both players will manipulate during the game.\n- **Allowed Prime Numbers**: The prime numbers you can subtract are **2**, **3**, **5**, and **7**.\n\n## Turns\n\n- The game is played between two players who take turns alternately.\n- During your turn, you must subtract one of the allowed prime numbers from the shared number.\n\n## Rules and Mechanics\n\n### 1. Subtracting Primes\n\n- **Choose a Prime**: On your turn, select one of the allowed prime numbers: 2, 3, 5, or 7.\n- **Subtract from Shared Number**: Subtract the chosen prime from the shared number.\n- **Example**: If the shared number is 50 and you choose 7, the new shared number becomes 43.\n\n### 2. Valid Moves\n\n- **Non-Negative Result**: Your move is valid only if the shared number remains **zero or positive** after subtraction.\n- **Invalid Move**: If subtracting your chosen prime results in a negative number, you must pick a different prime.\n- **No Available Moves**: If none of the allowed primes can be subtracted without making the shared number negative, you lose your turn.\n\n### 3. Winning the Game\n\n- **Exact Zero**: The player who reduces the shared number to **exactly zero** wins the game.\n- **Forced Loss**: If you cannot make a valid move on your turn (no primes can be subtracted without going negative), you lose the game.\n\n### 4. Game Progression\n\n- **Turn Sequence**: Players alternate turns until the game ends.\n- **Shared Number Update**: After each valid move, the shared number is updated and the turn passes to the opponent.\n\n## Scoring\n\n- No points are tracked.\n- The goal is to be the player who successfully reduces the shared number to exactly zero.\n\n## Examples\n\n### Sample Game Play\n\n#### Starting the Game\n\n- **Shared Number**: 50\n\n#### Player 1's Turn\n\n- **Available Primes**: 2, 3, 5, 7\n- **Shared Number**: 50\n- **Action**: Subtract 7\n- **Calculation**: 50 - 7 = 43\n- **New Shared Number**: 43\n\n#### Player 2's Turn\n\n- **Available Primes**: 2, 3, 5, 7\n- **Shared Number**: 43\n- **Action**: Subtract 5\n- **Calculation**: 43 - 5 = 38\n- **New Shared Number**: 38\n\n#### Player 1's Turn\n\n- **Shared Number**: 38\n- **Action**: Subtract 7\n- **New Shared Number**: 31\n\n#### Player 2's Turn\n\n- **Shared Number**: 31\n- **Action**: Subtract 5\n- **New Shared Number**: 26\n\n#### Player 1's Turn\n\n- **Shared Number**: 26\n- **Action**: Subtract 7\n- **New Shared Number**: 19\n\n#### Player 2's Turn\n\n- **Shared Number**: 19\n- **Action**: Subtract 7\n- **New Shared Number**: 12\n\n#### Player 1's Turn\n\n- **Shared Number**: 12\n- **Action**: Subtract 7\n- **New Shared Number**: 5\n\n#### Player 2's Turn\n\n- **Shared Number**: 5\n- **Action**: Subtract 5\n- **New Shared Number**: 0\n- **Result**: Player 2 wins the game!\n\n## Command-Line Interaction Example\n\n```\nWelcome to Prime Subtractor!\nStarting Shared Number: 50\n\nPlayer 1's Turn\n----------------\nAvailable Primes to Subtract: 2, 3, 5, 7\nCurrent Shared Number: 50\nEnter a prime number to subtract: 7\nYou subtracted 7.\nNew Shared Number: 43\n\nPlayer 2's Turn\n----------------\nAvailable Primes to Subtract: 2, 3, 5, 7\nCurrent Shared Number: 43\nEnter a prime number to subtract: 5\nYou subtracted 5.\nNew Shared Number: 38\n\nPlayer 1's Turn\n----------------\nAvailable Primes to Subtract: 2, 3, 5, 7\nCurrent Shared Number: 38\nEnter a prime number to subtract: 7\nYou subtracted 7.\nNew Shared Number: 31\n\n... (game continues)\n\nPlayer 2's Turn\n----------------\nAvailable Primes to Subtract: 2, 3, 5, 7\nCurrent Shared Number: 5\nEnter a prime number to subtract: 5\nYou subtracted 5.\nNew Shared Number: 0\n\nCongratulations, Player 2! You reduced the number to zero and won the game!\n```\n\n## Strategic Tips\n\n- **Plan Ahead**: Think several moves ahead to anticipate your opponent's options.\n- **Control the Game**: Try to force the shared number into values where your opponent has fewer options.\n- **Avoid Negative Numbers**: Always ensure your chosen prime doesn't reduce the shared number below zero.\n\n## Game Summary\n\nPrime Subtractor is a simple yet strategic game that challenges players to think ahead and make calculated moves. With straightforward rules and minimal components, it's easy to code and perfect for a command-line interface. The game progresses quickly, ensuring that each session is engaging and concise. There are no draws—only a clear path to victory for the player who best manages their choices.\n\nEnjoy the challenge and may the best strategist win!",
    "# Game Title: Target Twenty-Three\n\n## Objective\n\nBe the player who reaches **exactly 23** by strategically adding numbers to a cumulative total. The game requires careful planning to force your opponent into a position where they cannot avoid losing. Overshooting 23 results in an immediate loss.\n\n## Setup\n\n- **Cumulative Total:** Starts at **0**.\n- **Players:** Two players decide who goes first (e.g., coin toss).\n\n## Game Components\n\n- **Available Numbers:** On each turn, players can choose an integer from **1 to 4** inclusive.\n- **Cumulative Total:** The sum of all numbers chosen so far, shared between both players.\n\n## Turns\n\n- Players alternate turns.\n- **Turn Structure:**\n  1. **Choose a Number:** On your turn, select a number between 1 and 4.\n  2. **Update Total:** Add the chosen number to the cumulative total.\n  3. **Announce Total:** Declare the new cumulative total aloud.\n\n## Rules and Mechanics\n\n1. **Number Selection:**\n   - You **must** choose an integer between 1 and 4 on your turn.\n   - No skipping turns or passing.\n\n2. **Cumulative Total:**\n   - The cumulative total is shared and continually updated each turn.\n   - Keep track of the total after each move.\n\n3. **Winning the Game:**\n   - If your move brings the cumulative total to **exactly 23**, you **win** the game.\n   - If your move causes the total to **exceed 23**, you **lose** immediately.\n\n4. **No Draws:**\n   - The game cannot end in a draw; play continues until there is a winner.\n\n5. **Strategy Tips:**\n   - Plan ahead to control the cumulative total.\n   - Aim to set up the total so that your opponent cannot reach 23 without overshooting.\n   - Keep track of the numbers already played to anticipate your opponent's options.\n\n## Scoring\n\n- **Winning Condition:** Be the player to reach exactly 23.\n- **Losing Condition:** If you cause the total to exceed 23, you lose.\n\nThere is no point-based scoring system; the focus is on strategic play to reach the target total.\n\n## Examples\n\n### Sample Game Play\n\n**Starting Total:** 0\n\n1. **Player 1's Turn:**\n   - Chooses **3**.\n   - **Cumulative Total:** 0 + 3 = **3**\n   - Announces: \"Total is now 3.\"\n\n2. **Player 2's Turn:**\n   - Chooses **4**.\n   - **Cumulative Total:** 3 + 4 = **7**\n   - Announces: \"Total is now 7.\"\n\n3. **Player 1's Turn:**\n   - Chooses **2**.\n   - **Cumulative Total:** 7 + 2 = **9**\n   - Announces: \"Total is now 9.\"\n\n4. **Player 2's Turn:**\n   - Chooses **4**.\n   - **Cumulative Total:** 9 + 4 = **13**\n   - Announces: \"Total is now 13.\"\n\n5. **Player 1's Turn:**\n   - Chooses **3**.\n   - **Cumulative Total:** 13 + 3 = **16**\n   - Announces: \"Total is now 16.\"\n\n6. **Player 2's Turn:**\n   - Chooses **3**.\n   - **Cumulative Total:** 16 + 3 = **19**\n   - Announces: \"Total is now 19.\"\n\n7. **Player 1's Turn:**\n   - Must choose a number between 1 and 4.\n\n   - **Option Analysis:**\n     - Choosing 1 brings total to 20.\n     - Choosing 2 brings total to 21.\n     - Choosing 3 brings total to 22.\n     - **Choosing 4 brings total to 23.**\n\n   - **Decision:**\n     - Chooses **4**.\n     - **Cumulative Total:** 19 + 4 = **23**\n     - Announces: \"Total is now 23.\"\n     - **Player 1 wins!**\n\n### Command-Line Interaction Example\n\n```\nGame Start! The target is to reach exactly 23.\n\nCurrent Total: 0\n\nPlayer 1, choose a number (1-4): 3\nYou chose 3.\nNew Total: 3\n\nPlayer 2, choose a number (1-4): 4\nYou chose 4.\nNew Total: 7\n\nPlayer 1, choose a number (1-4): 2\nYou chose 2.\nNew Total: 9\n\nPlayer 2, choose a number (1-4): 4\nYou chose 4.\nNew Total: 13\n\nPlayer 1, choose a number (1-4): 3\nYou chose 3.\nNew Total: 16\n\nPlayer 2, choose a number (1-4): 3\nYou chose 3.\nNew Total: 19\n\nPlayer 1, choose a number (1-4): 4\nYou chose 4.\nNew Total: 23\n\nCongratulations, Player 1! You've reached exactly 23 and won the game!\n```\n\n## Notes on Strategy\n\n- **Control Key Totals:**\n  - Aim to make the cumulative total reach numbers that are 5 steps away from 23 (e.g., 18).\n  - This can force your opponent into a position where they cannot win without exceeding 23.\n\n- **Anticipate Opponent Moves:**\n  - Keep track of possible totals your opponent can create based on their available choices.\n  - Plan your moves to limit their options.\n\n- **Stay Within Safe Range:**\n  - Avoid bringing the total to a number where your opponent can easily reach 23 on their next turn.\n\n## Summary\n\n**Target Twenty-Three** is a simple yet strategic game that requires players to think ahead and make calculated moves. It's easy to play in a command-line interface and can be coded with minimal complexity. The game is quick to play, ensures one player wins, and offers depth for players to develop and apply winning strategies.\n\nEnjoy the challenge, and may the best strategist win!",
    "# Sequence Builder\n\n## Objective\n\nBe the first player to reach the **target number** exactly by strategically adding or multiplying the **current number**. The player who successfully reaches the target number first **wins** the game.\n\n## Setup\n\n1. **Determine the Target Number**: Players agree on a target number to reach. The default target number is **23**, but any positive integer can be used to adjust the game's difficulty.\n\n2. **Initialize the Current Number**: The game starts with the **current number** set to **1**.\n\n3. **Player Assignment**: Decide which player goes first. This can be done by a coin toss, random selection, or mutual agreement.\n\n## Game Components\n\n- **Current Number**: An integer that starts at 1 and changes as players take their turns.\n\n- **Target Number**: The agreed-upon integer that players aim to reach exactly.\n\n- **Operations**:\n  - **Addition**: Players can add **1** or **2** to the current number.\n  - **Multiplication**: Players can multiply the current number by **2**.\n\n## Turns\n\n- Players alternate turns throughout the game.\n- **Turn Structure**:\n  1. **Display the Current Number**: The game shows the current number before each turn.\n  2. **Choose an Operation**: On their turn, a player selects one of the allowed operations:\n     - Add **1** to the current number.\n     - Add **2** to the current number.\n     - Multiply the current number by **2**.\n  3. **Apply the Operation**: The chosen operation is applied, and the current number is updated.\n  4. **Check for Victory**: If the current number equals the target number, the player wins.\n  5. **Turn Ends**: If the target number is not reached, the turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Allowed Operations**:\n   - **Addition**:\n     - Players may add **1** or **2** to the current number.\n   - **Multiplication**:\n     - Players may multiply the current number by **2**.\n2. **Staying Within Bounds**:\n   - The current number **must not exceed** the target number after an operation.\n   - If all possible operations would result in a number greater than the target number, the player **loses their turn**.\n3. **Reaching the Target**:\n   - The player who updates the current number to exactly match the target number **wins immediately**.\n4. **Invalid Moves**:\n   - If a player attempts an operation that would exceed the target number, they are prompted to choose a different operation.\n   - Repeated invalid attempts result in **loss of turn**.\n5. **No Draws**:\n   - The game cannot end in a draw. Play continues until one player reaches the target number.\n\n## Scoring\n\n- **Winning the Game**: The player who reaches the target number exactly is declared the **winner**.\n- **No Point System**: The game does not use points; victory is achieved by meeting the objective.\n- **Match Play (Optional)**:\n  - Players can play multiple rounds, keeping track of wins to determine an overall champion.\n\n## Examples\n\n### Example Scenario\n\n**Target Number**: 23  \n**Current Number**: 1  \n**Players**: Alice (Player 1) and Bob (Player 2)\n\n#### Turn-by-Turn Play\n\n1. **Turn 1 - Alice**\n   - Current Number: 1\n   - Alice chooses to add 2.\n   - New Current Number: 3\n\n2. **Turn 2 - Bob**\n   - Current Number: 3\n   - Bob chooses to multiply by 2.\n   - New Current Number: 6\n\n3. **Turn 3 - Alice**\n   - Current Number: 6\n   - Alice chooses to add 1.\n   - New Current Number: 7\n\n4. **Turn 4 - Bob**\n   - Current Number: 7\n   - Bob chooses to multiply by 2.\n   - New Current Number: 14\n\n5. **Turn 5 - Alice**\n   - Current Number: 14\n   - Alice chooses to add 2.\n   - New Current Number: 16\n\n6. **Turn 6 - Bob**\n   - Current Number: 16\n   - Bob wants to multiply by 2, but 16 * 2 = 32 exceeds the target number.\n   - Bob chooses to add 1.\n   - New Current Number: 17\n\n7. **Turn 7 - Alice**\n   - Current Number: 17\n   - Alice chooses to add 2.\n   - New Current Number: 19\n\n8. **Turn 8 - Bob**\n   - Current Number: 19\n   - Bob chooses to add 2.\n   - New Current Number: 21\n\n9. **Turn 9 - Alice**\n   - Current Number: 21\n   - Alice cannot multiply by 2 (would be 42) or add 2 (would be 23, which is acceptable).\n   - Alice chooses to add 2.\n   - New Current Number: 23\n   - Alice reaches the target number and **wins** the game.\n\n### Command-Line Interaction Sample\n\nBelow is how a command-line version of the game might look during play.\n\n```\nGame Start!\nTarget Number: 23\nCurrent Number: 1\n\nAlice's Turn:\nCurrent Number is 1\nChoose an operation:\n1. Add 1\n2. Add 2\n3. Multiply by 2\nEnter choice (1-3): 2\nYou chose to add 2.\nNew Current Number is 3\n\nBob's Turn:\nCurrent Number is 3\nChoose an operation:\n1. Add 1\n2. Add 2\n3. Multiply by 2\nEnter choice (1-3): 3\nYou chose to multiply by 2.\nNew Current Number is 6\n\nAlice's Turn:\nCurrent Number is 6\nChoose an operation:\n1. Add 1\n2. Add 2\n3. Multiply by 2\nEnter choice (1-3): 1\nYou chose to add 1.\nNew Current Number is 7\n\n...\n\nAlice's Turn:\nCurrent Number is 21\nChoose an operation:\n1. Add 1\n2. Add 2\n3. Multiply by 2\nEnter choice (1-3): 2\nYou chose to add 2.\nNew Current Number is 23\n\nCongratulations, Alice! You have reached the target number and won the game!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's moves and plan your operations to control the flow of the game.\n- **Avoid Overshooting**: Be cautious with multiplication as it can quickly overshoot the target number.\n- **Force the Win**: Try to set up the current number so that you can reach the target on your next turn, regardless of your opponent's moves.\n- **Learn Optimal Paths**: Familiarize yourself with number sequences that lead to a win to enhance your chances against less skilled players.\n\n## Conclusion\n\nSequence Builder is a simple yet strategic game that tests your arithmetic skills and foresight. With straightforward rules and quick gameplay, it offers an engaging experience that rewards planning and strategy.\n\nEnjoy the game and may the best strategist win!",
    "# Divisor Duel Rule Book\n\n## Objective\n\n**Divisor Duel** is a two-player, turn-based strategy game. The primary goal is to be the last player able to make a valid move. Players take turns subtracting proper divisors from a shared current number. A player wins by forcing their opponent into a position where they cannot make a valid move.\n\n## Setup\n\n1. **Starting Number**: The game begins with a positive integer called the **Current Number (N)**. For a standard game, N is set to **60**, but players can agree on a different positive integer to vary the game's difficulty and length.\n2. **Player Order**: Decide which player will take the first turn. This can be determined randomly or by mutual agreement.\n\n## Game Components\n\n- **Current Number (N)**: A shared positive integer that changes as the game progresses.\n- **Proper Divisors**: For any given N, the numbers used in gameplay are its proper divisors—positive integers greater than **1** and less than **N** that divide **N** without leaving a remainder.\n\n## Turns\n\n- Players alternate turns throughout the game.\n- **On Your Turn**:\n  1. **Determine Proper Divisors**: Identify all proper divisors of the Current Number (N).\n  2. **Select a Divisor**: Choose any one proper divisor to subtract from N.\n  3. **Subtract and Update N**: Subtract the chosen divisor from N to get a new N.\n  4. **Announce Move**: Clearly state the chosen divisor and the new Current Number.\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - A move is valid if:\n     - The chosen number is a proper divisor of N (greater than **1** and less than N).\n     - The chosen number divides N exactly (no remainder).\n2. **Updating N**:\n   - After a valid move, N is updated: **N = N - (Chosen Divisor)**.\n3. **Winning the Game**:\n   - A player loses if they cannot make a valid move on their turn. This occurs when:\n     - N is a prime number (only divisible by 1 and itself).\n     - N is less than or equal to **2** (no proper divisors greater than 1).\n4. **No Draws**:\n   - The game cannot end in a draw; play continues until one player is unable to make a valid move.\n\n## Scoring\n\n- **Victory**: The winning player is the one who successfully forces their opponent into a position with no valid moves.\n- **Tracking**: No points are accumulated during the game; only the final outcome (win or loss) matters.\n\n## Examples\n\n### Example Game Play\n\n#### Starting the Game\n\n- **Current Number (N)**: 60\n- **Player 1** starts the game.\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**:\n   - **Proper Divisors of 60**: 2, 3, 4, 5, 6, 10, 12, 15, 20, 30.\n   - **Chosen Divisor**: 15\n   - **Action**: Subtract 15 from 60.\n   - **New N**: 45\n   - **Announcement**: \"Subtracting 15 from 60. New number is 45.\"\n\n2. **Player 2's Turn**:\n   - **Proper Divisors of 45**: 3, 5, 9, 15.\n   - **Chosen Divisor**: 15\n   - **Action**: Subtract 15 from 45.\n   - **New N**: 30\n   - **Announcement**: \"Subtracting 15 from 45. New number is 30.\"\n\n3. **Player 1's Turn**:\n   - **Proper Divisors of 30**: 2, 3, 5, 6, 10, 15.\n   - **Chosen Divisor**: 15\n   - **Action**: Subtract 15 from 30.\n   - **New N**: 15\n   - **Announcement**: \"Subtracting 15 from 30. New number is 15.\"\n\n4. **Player 2's Turn**:\n   - **Proper Divisors of 15**: 3, 5.\n   - **Chosen Divisor**: 5\n   - **Action**: Subtract 5 from 15.\n   - **New N**: 10\n   - **Announcement**: \"Subtracting 5 from 15. New number is 10.\"\n\n5. **Player 1's Turn**:\n   - **Proper Divisors of 10**: 2, 5.\n   - **Chosen Divisor**: 5\n   - **Action**: Subtract 5 from 10.\n   - **New N**: 5\n   - **Announcement**: \"Subtracting 5 from 10. New number is 5.\"\n\n6. **Player 2's Turn**:\n   - **Proper Divisors of 5**: None (since 5 is a prime number).\n   - **Result**: Player 2 cannot make a valid move.\n   - **Game Over**: **Player 1 wins**.\n\n### Command-Line Interaction Sample\n\n```plaintext\nGame Start! Current Number (N): 60\n\nPlayer 1's turn.\nProper divisors of 60: 2,3,4,5,6,10,12,15,20,30\nEnter your chosen divisor: 15\nSubtracting 15 from 60. New N is 45.\n\nPlayer 2's turn.\nProper divisors of 45: 3,5,9,15\nEnter your chosen divisor: 15\nSubtracting 15 from 45. New N is 30.\n\nPlayer 1's turn.\nProper divisors of 30: 2,3,5,6,10,15\nEnter your chosen divisor: 15\nSubtracting 15 from 30. New N is 15.\n\nPlayer 2's turn.\nProper divisors of 15: 3,5\nEnter your chosen divisor: 5\nSubtracting 5 from 15. New N is 10.\n\nPlayer 1's turn.\nProper divisors of 10: 2,5\nEnter your chosen divisor: 5\nSubtracting 5 from 10. New N is 5.\n\nPlayer 2's turn.\nProper divisors of 5: None\nNo valid moves left. Player 1 wins!\n```\n\n## Strategic Tips\n\n- **Plan Ahead**: Anticipate future moves by considering how your choice will affect the available divisors on your opponent's turn.\n- **Avoid Prime Numbers**: Try to leave N as a prime number on your turn, forcing your opponent into a losing position.\n- **Large Divisors**: Subtracting larger proper divisors can reduce N rapidly but may limit your own future options. Balance is key.\n\n## Variations\n\n- **Different Starting Numbers**: Begin with a different N to change the game's complexity.\n- **Restricted Divisors**: Limit the set of proper divisors (e.g., only even divisors) to introduce new strategies.\n\n## Conclusion\n\nDivisor Duel is a simple yet strategic game that challenges players to think ahead and employ number theory tactics. With straightforward mechanics and quick gameplay, it's easy to learn but offers depth for those looking to master its strategies.\n\nEnjoy the duel!",
    "# GridLockdown\n\n## Objective\n\nGridLockdown is a strategic two-player turn-based game played on a 4x4 grid. The primary goal is to be the last player able to make a valid move. Players take turns moving their marker according to specific rules, and the first player who cannot move loses the game. Skillful planning and foresight are essential to outmaneuver your opponent and secure victory.\n\n## Setup\n\n- **Game Grid**: A 4x4 grid consisting of 16 cells numbered from 1 to 16.\n\n- **Player Markers**: Each player has a unique marker (`X` for Player 1 and `O` for Player 2).\n\n- **Starting Positions**:\n  - Player 1 begins by placing their marker on any one of the 16 cells.\n  - Player 2 then places their marker on any unoccupied cell.\n\n- **Occupied Cells**: Keep track of occupied cells, as they cannot be landed on again during the game.\n\n## Game Components\n\n- **Grid**:\n  ```\n   1   2   3   4\n   5   6   7   8\n   9  10  11  12\n  13  14  15  16\n  ```\n\n- **Markers**:\n  - Player 1: `X`\n  - Player 2: `O`\n\n- **Command-Line Interface**: Players input the number of the cell they wish to move to when prompted.\n\n## Turns\n\n1. **Turn Order**:\n   - Player 1 makes the first move.\n   - Players alternate turns thereafter.\n\n2. **Player Actions on Their Turn**:\n   - **Move Marker**: Move your marker to a valid adjacent unoccupied cell.\n   - **Pass**: If no valid moves are available, you must pass (which results in a loss).\n\n3. **Turn Progression**:\n   - After a player moves, the cell they moved from remains occupied and cannot be used again.\n   - The game continues until a player cannot make a valid move on their turn.\n\n## Rules and Mechanics\n\n### Movement Rules\n\n- **Adjacent Moves**:\n  - A move consists of sliding your marker to an adjacent unoccupied cell.\n  - Cells are considered adjacent if they are directly horizontal, vertical, or diagonal neighbors.\n\n- **Occupied Cells**:\n  - Neither player can move into a cell that is already occupied.\n  - Once a cell has been occupied by either player, it remains unavailable for the rest of the game.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - If a player has no valid moves on their turn, they lose the game.\n  - The opposing player is declared the winner.\n\n- **No Draws**:\n  - There is no possibility of a draw in GridLockdown; the game will always have a winner.\n\n### Special Conditions\n\n- **Edge of the Grid**:\n  - Movement wraps are not allowed; you cannot move off the grid or wrap around edges.\n  - All moves must stay within the boundaries of the 4x4 grid.\n\n## Scoring\n\n- **Single-Game Win**:\n  - The winner is the player who successfully forces their opponent into a position with no valid moves.\n\n- **Match Play (Optional)**:\n  - Players can play multiple games and keep track of victories to determine an overall champion.\n  - One point is awarded per game won.\n\n## Examples\n\n### Sample Game Play\n\nBelow is a sample turn-by-turn playthrough to illustrate how the game progresses.\n\n#### Initial Grid\n\n```\n 1  2  3  4\n 5  6  7  8\n 9 10 11 12\n13 14 15 16\n```\n\n#### Turn 1: Player 1\n\n- **Action**: Places `X` on cell **6**.\n\n#### Turn 2: Player 2\n\n- **Action**: Places `O` on cell **11**.\n\n#### Grid After Initial Placement\n\n```\n 1  2  3  4\n 5  X  7  8\n 9 10  O 12\n13 14 15 16\n```\n\n#### Turn 3: Player 1\n\n- **Possible Moves from Cell 6**:\n  - Adjacent cells: 1, 2, 3, 5, 7, 9, 10, 11 (cells occupied: 6 and 11).\n\n- **Action**: Moves `X` from cell **6** to cell **7**.\n\n- **Occupied Cells**: 6 (remains occupied), 7 (now occupied by `X`).\n\n#### Turn 4: Player 2\n\n- **Possible Moves from Cell 11**:\n  - Adjacent cells: 6, 7, 8, 10, 12, 14, 15, 16 (cells occupied: 6, 7, and 11).\n\n- **Action**: Moves `O` from cell **11** to cell **10**.\n\n- **Occupied Cells**: 6, 7, 10 (now occupied by `O`), 11.\n\n#### Grid After Two Full Turns\n\n```\n 1  2  3  4\n 5  X  X  8\n 9  O  O 12\n13 14 15 16\n```\n\n#### Subsequent Turns\n\nPlayers continue moving their markers to adjacent unoccupied cells, marking the cells as occupied.\n\n#### Endgame Scenario\n\nSuppose later in the game:\n\n- **Player 1's Marker Position**: Cell **3**\n\n- **Available Moves for Player 1**: Cells **2**, **4**, **7**\n\n- **All Adjacent Cells Occupied Except**: None\n\n- **Player 1 Action**: Cannot move (no available adjacent unoccupied cells).\n\n- **Result**: Player 1 loses, Player 2 wins.\n\n## Command-Line Interaction Example\n\n```\nWelcome to GridLockdown!\n\nPlayer 1, place your marker (enter cell number 1-16): 6\n\nPlayer 2, place your marker (enter cell number 1-16, excluding occupied cells): 11\n\nGame Start!\n\nPlayer 1's turn. Your marker is at cell 6.\nAvailable moves: 1, 2, 3, 5, 7, 9, 10\nEnter the cell number to move to: 7\n\nPlayer 2's turn. Your marker is at cell 11.\nAvailable moves: 8, 12, 14, 15, 16\nEnter the cell number to move to: 12\n\n...\n\nPlayer 1 has no valid moves left!\nPlayer 2 wins the game!\n```\n\n## Strategy Tips\n\n- **Control the Center**: Occupying central positions increases your movement options.\n\n- **Block Opponent Paths**: Anticipate your opponent's moves and occupy cells that limit their options.\n\n- **Plan Ahead**: Think several moves ahead to avoid getting trapped.\n\n- **Conserve Space**: Avoid moving into tight areas of the grid too early.\n\n## Conclusion\n\nGridLockdown is a simple yet deeply strategic game that tests your foresight and planning skills. Each move can have significant consequences, so play thoughtfully and enjoy the challenge!",
    "# Number Flip: Rule Book\n\n## Objective\n\n**Number Flip** is a two-player, turn-based strategy game where players take turns adding numbers to a cumulative total. The primary goal is to **force your opponent to reach or exceed a total of 50**. The player who causes the cumulative total to reach exactly 50 or surpass it **loses** the game.\n\n---\n\n## Setup\n\n- **Cumulative Total**: Initialize the game's cumulative total to **0** at the start.\n- **Available Numbers**: Players can choose any integer from **1 to 10** inclusive.\n- **First Player**: Decide which player goes first (e.g., by a coin toss or mutual agreement).\n\n---\n\n## Game Components\n\n- **Cumulative Total**: A shared running total that both players contribute to.\n- **Numbers (1-10)**: The set of integers players can choose from on their turn.\n- **Command-Line Interface**: The game is played by entering numbers via the command line.\n\n---\n\n## Turns\n\n1. **Player Action**: On their turn, a player selects a number from **1 to 10**.\n2. **Updating Total**: The chosen number is **added** to the cumulative total.\n3. **Turn Restrictions**:\n   - **No Repeat**: A player **cannot** choose the same number that was selected on the **immediately preceding turn** by the opponent.\n4. **Turn End**: After updating the total, the turn passes to the other player.\n5. **Victory Check**: If the cumulative total is **50 or more**, the player who made the move **loses**, and the opponent wins.\n\n---\n\n## Rules and Mechanics\n\n- **Number Selection**:\n  - Players must choose a number between **1 and 10** inclusive.\n  - The number selected cannot be the same as the opponent's last chosen number.\n- **Cumulative Total Management**:\n  - The cumulative total starts at **0** and increases as players add numbers.\n  - Players aim to avoid making the total reach **50 or more** on their turn.\n- **Winning the Game**:\n  - If a player causes the cumulative total to reach **exactly 50** or to exceed **50**, that player **loses**.\n  - If a player has **no legal moves** (all available numbers would result in a total of 50 or more), that player **loses**.\n- **Illegal Moves**:\n  - Selecting a number outside the **1-10** range is not allowed.\n  - Choosing the same number as the opponent's last turn is not allowed.\n  - If an illegal move is made, the player may be prompted to choose again or may automatically lose (as per agreed rules before the game starts).\n\n---\n\n## Scoring\n\n- **Winning**: The opponent of the player who causes the cumulative total to reach or exceed **50** is declared the **winner**.\n- **Game Tracking**: Players keep track of:\n  - The cumulative total after each turn.\n  - The last number selected (to enforce the \"No Repeat\" rule).\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Starting the Game\n\n- **Cumulative Total**: 0\n- **Player 1's Turn**:\n  - Chooses **8**.\n  - **Cumulative Total**: 0 + 8 = **8**\n- **Player 2's Turn**:\n  - Cannot choose **8** (since Player 1 just chose it).\n  - Chooses **7**.\n  - **Cumulative Total**: 8 + 7 = **15**\n\n#### Mid-Game\n\n- **Player 1's Turn**:\n  - Cannot choose **7** (Player 2's last number).\n  - Chooses **9**.\n  - **Cumulative Total**: 15 + 9 = **24**\n- **Player 2's Turn**:\n  - Cannot choose **9**.\n  - Chooses **8**.\n  - **Cumulative Total**: 24 + 8 = **32**\n\n#### End Game Scenario\n\n- **Player 1's Turn**:\n  - Cannot choose **8**.\n  - Chooses **7**.\n  - **Cumulative Total**: 32 + 7 = **39**\n- **Player 2's Turn**:\n  - Cannot choose **7**.\n  - Chooses **6**.\n  - **Cumulative Total**: 39 + 6 = **45**\n- **Player 1's Turn**:\n  - Cannot choose **6**.\n  - **Options**: 1-5, and 9-10.\n  - Chooses **5**.\n  - **Cumulative Total**: 45 + 5 = **50**\n  - **Player 1 loses** (total is exactly 50).\n- **Result**: **Player 2 wins**.\n\n---\n\n### Command-Line Interaction Sample\n\n```\nGame Start!\nCumulative Total: 0\n\nPlayer 1's Turn:\n- Choose a number (1-10), not repeating opponent's last number.\n- Your choice: 8\nCumulative Total is now 8.\n\nPlayer 2's Turn:\n- Last number played by opponent: 8\n- You cannot choose 8.\n- Your choice: 7\nCumulative Total is now 15.\n\nPlayer 1's Turn:\n- Last number played by opponent: 7\n- You cannot choose 7.\n- Your choice: 9\nCumulative Total is now 24.\n\n... [Game continues] ...\n\nPlayer 1's Turn:\n- Last number played by opponent: 6\n- You cannot choose 6.\n- Your choice: 5\nCumulative Total is now 50.\nTotal has reached 50. Player 1 loses.\n\nGame Over. Player 2 wins!\n```\n\n---\n\n## Strategy Tips\n\n- **Avoid Critical Numbers**: Keep track of the cumulative total to avoid being forced into a losing move.\n- **Force the Opponent's Hand**: Choose numbers that limit your opponent's options, potentially forcing them to reach 50.\n- **Remember the Restrictions**: Always be mindful of the \"No Repeat\" rule to plan your moves effectively.\n- **Calculate Ahead**: Think a few moves ahead to anticipate possible totals and avoid traps.\n\n---\n\n## Conclusion\n\n**Number Flip** is a simple yet strategic game that tests numerical skills and forward planning. By carefully selecting numbers and considering the cumulative total, players can outmaneuver their opponent and secure a win.\n\nEnjoy the game and may the best strategist win!\n\n---",
    "# Number Quest: A Strategic Numerical Showdown\n\n## Objective\n\n**Be the first player to correctly predict the final sum of a shared sequence of numbers, while strategically adding numbers to influence the outcome.** Victory is achieved by skillfully selecting numbers to reach a predicted sum, outmaneuvering your opponent through foresight and strategic play. A player wins by either:\n\n- Being the only player to correctly predict the final sum of the sequence.\n- Having a closer prediction to the final sum if neither player predicts it exactly.\n\nThere is no possibility of a draw; every game ends with a clear winner.\n\n## Setup\n\n1. **Shared Number Pool**: A set of numbers from **1** to **9**.\n2. **Shared Sequence**: An empty list where numbers will be added during the game.\n\nNo physical arrangement is needed beyond tracking the shared number pool and sequence. Both players have equal access to the shared number pool and sequence.\n\n## Game Components\n\n- **Numbers (1-9)**: Each number represents a unique value that can be added to the shared sequence. Once a number is used, it cannot be selected again by either player.\n- **Shared Sequence**: A list that accumulates the numbers chosen by both players throughout the game.\n- **Predictions**: Each player's declared guess of what the final sum of the shared sequence will be at the end of the game.\n\n## Turns\n\n- Players decide who goes first (Player 1 and Player 2).\n- Players take turns in alternating order.\n- During each turn, a player can perform the following actions:\n  1. **Declare a Prediction (Optional)**:\n     - A player may declare their prediction for the final sum of the sequence.\n     - **This can only be done once per player per game.**\n     - Once declared, the prediction cannot be changed.\n  2. **Select a Number**:\n     - Choose any unused number from **1** to **9**.\n     - Add the selected number to the end of the shared sequence.\n     - Remove the number from the shared number pool.\n\n- The turn ends after the player has completed the above actions.\n\n## Rules and Mechanics\n\n1. **Number Selection**:\n   - Players must select a number from the available numbers in the pool.\n   - Each number from **1** to **9** can only be used **once** in the game.\n   - Numbers must be added to the sequence; they cannot be skipped or discarded.\n\n2. **Predictions**:\n   - Each player has the opportunity to declare their prediction of the final sum **once per game**, **before selecting a number** on their turn.\n   - A prediction is made by stating the total sum they believe the sequence will reach once all numbers have been played.\n   - Predictions are public and must be communicated to the opponent.\n   - Players are not required to make a prediction on their first turn; they may choose the most strategic moment to declare.\n\n3. **End of Game**:\n   - The game ends when all numbers from **1** to **9** have been added to the sequence.\n   - Alternatively, if no legal moves remain (no numbers left to select), the game concludes.\n\n4. **Determining the Winner**:\n   - **Exact Prediction**: If a player correctly predicted the final sum, and the opponent did not, the predicting player wins.\n   - **Both Correct Predictions**: If both players correctly predicted the final sum:\n     - The player who **declared their prediction first** wins.\n   - **No Correct Prediction**: If neither player predicted the final sum correctly:\n     - The player whose prediction is **numerically closer** to the final sum wins.\n     - In the event of a tie in proximity, the player who declared their prediction **earlier** loses.\n\n5. **No Draw Rule**:\n   - The game is designed to ensure there is always a winner.\n   - Tie-breakers are resolved based on the timing of predictions and proximity to the final sum.\n\n## Scoring\n\n- **Winner**: Awards themselves 1 point for winning the game.\n- **Loser**: Receives 0 points.\n- Players can play multiple rounds, accumulating points to determine an overall champion if desired.\n\n## Examples\n\n### Sample Game Play\n\n#### Initialization\n\n- **Shared Number Pool**: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n- **Shared Sequence**: []\n\n#### Turn Sequence\n\n1. **Player 1's Turn**\n   - **Action**: Picks number **5**.\n   - **Sequence**: [5]\n   - **Numbers Remaining**: [1, 2, 3, 4, 6, 7, 8, 9]\n   - **Prediction**: No prediction made.\n\n2. **Player 2's Turn**\n   - **Action**: Declares prediction **30**.\n   - **Action**: Picks number **9**.\n   - **Sequence**: [5, 9]\n   - **Numbers Remaining**: [1, 2, 3, 4, 6, 7, 8]\n   - **Prediction**: Player 2 predicts the final sum will be **30**.\n\n3. **Player 1's Turn**\n   - **Action**: Declares prediction **35**.\n   - **Action**: Picks number **8**.\n   - **Sequence**: [5, 9, 8]\n   - **Numbers Remaining**: [1, 2, 3, 4, 6, 7]\n   - **Prediction**: Player 1 predicts the final sum will be **35**.\n\n4. **Player 2's Turn**\n   - **Action**: Picks number **7**.\n   - **Sequence**: [5, 9, 8, 7]\n   - **Numbers Remaining**: [1, 2, 3, 4, 6]\n   - **Prediction**: Already made.\n\n5. **Player 1's Turn**\n   - **Action**: Picks number **6**.\n   - **Sequence**: [5, 9, 8, 7, 6]\n   - **Numbers Remaining**: [1, 2, 3, 4]\n   - **Prediction**: Already made.\n\n6. **Player 2's Turn**\n   - **Action**: Picks number **4**.\n   - **Sequence**: [5, 9, 8, 7, 6, 4]\n   - **Numbers Remaining**: [1, 2, 3]\n   - **Prediction**: Already made.\n\n7. **Player 1's Turn**\n   - **Action**: Picks number **3**.\n   - **Sequence**: [5, 9, 8, 7, 6, 4, 3]\n   - **Numbers Remaining**: [1, 2]\n   - **Prediction**: Already made.\n\n8. **Player 2's Turn**\n   - **Action**: Picks number **2**.\n   - **Sequence**: [5, 9, 8, 7, 6, 4, 3, 2]\n   - **Numbers Remaining**: [1]\n   - **Prediction**: Already made.\n\n9. **Player 1's Turn**\n   - **Action**: Picks number **1**.\n   - **Sequence**: [5, 9, 8, 7, 6, 4, 3, 2, 1]\n   - **Numbers Remaining**: []\n   - **Prediction**: Already made.\n\n#### End of Game Calculations\n\n- **Final Sum**: 5 + 9 + 8 + 7 + 6 + 4 + 3 + 2 + 1 = **45**\n- **Player Predictions**:\n  - **Player 1**: 35\n  - **Player 2**: 30\n\n#### Determining the Winner\n\n- Neither player predicted the final sum correctly.\n- **Player 1**'s prediction is **10 units away** from 45.\n- **Player 2**'s prediction is **15 units away** from 45.\n- **Player 1** is closer to the final sum and **wins the game**.\n\n### Sample Command-Line Interaction\n\n```plaintext\n--- Number Quest Game Start ---\nAvailable Numbers: 1 2 3 4 5 6 7 8 9\nShared Sequence: \n--------------------------------\n\nPlayer 1's Turn:\nDo you want to declare a prediction? (yes/no): no\nSelect a number to add to the sequence: 5\nYou added 5 to the sequence.\n\nAvailable Numbers: 1 2 3 4 6 7 8 9\nShared Sequence: 5\n--------------------------------\n\nPlayer 2's Turn:\nDo you want to declare a prediction? (yes/no): yes\nEnter your prediction for the final sum: 30\nPrediction recorded: 30\nSelect a number to add to the sequence: 9\nYou added 9 to the sequence.\n\nAvailable Numbers: 1 2 3 4 6 7 8\nShared Sequence: 5 9\n--------------------------------\n\nPlayer 1's Turn:\nDo you want to declare a prediction? (yes/no): yes\nEnter your prediction for the final sum: 35\nPrediction recorded: 35\nSelect a number to add to the sequence: 8\nYou added 8 to the sequence.\n\nAvailable Numbers: 1 2 3 4 6 7\nShared Sequence: 5 9 8\n--------------------------------\n\nPlayer 2's Turn:\nYou have already declared a prediction.\nSelect a number to add to the sequence: 7\nYou added 7 to the sequence.\n\nAvailable Numbers: 1 2 3 4 6\nShared Sequence: 5 9 8 7\n--------------------------------\n\n... (game continues) ...\n\nGame Over!\nFinal Sequence: 5 9 8 7 6 4 3 2 1\nFinal Sum: 45\nPlayer 1's Prediction: 35\nPlayer 2's Prediction: 30\n\nWinner: Player 1\nCongratulations Player 1, you won the game!\n```\n\n## Strategic Tips\n\n- **Early Prediction**: Making an early prediction allows you to influence the sequence toward your predicted sum, but reveals your target to your opponent.\n- **Late Prediction**: Waiting to predict allows you to gather more information but risks the opponent's prediction being closer or identical to yours.\n- **Number Selection**: Choose numbers that steer the total sum toward your prediction and away from your opponent's.\n- **Denying Numbers**: Select numbers that your opponent may need to reach their predicted sum.\n- **Calculations**: Keep track of the running total and remaining numbers to adjust your strategy accordingly.\n\n## Conclusion\n\nNumber Quest is a dynamic and strategic numerical game that combines prediction, arithmetic, and tactical play. By carefully choosing when to declare your prediction and which numbers to add to the sequence, you can outmaneuver your opponent and secure victory. Remember, every choice counts, and the key to winning lies in anticipating your opponent's moves and guiding the game toward your desired outcome.\n\nEnjoy the challenge and may the best strategist win!",
    "# Quad Block\n\n## Objective\n\nBe the first player to form a connected group of **exactly four** of your own markers on a 5x5 grid. The markers must be orthogonally adjacent (connected horizontally or vertically). Forming a group larger than four does not count towards a win. Strategic placement is key to build your own group while preventing your opponent from forming theirs.\n\n## Setup\n\n1. **Grid Creation**: The game is played on a 5x5 grid, consisting of 25 cells numbered from 1 to 25.\n2. **Marker Assignment**:\n   - **Player 1** uses the marker `'X'`.\n   - **Player 2** uses the marker `'O'`.\n3. **Starting Condition**: The grid starts empty. Players decide who takes the first turn (e.g., by coin toss).\n\n## Game Components\n\n- **Grid**: A 5x5 grid represented in the command-line interface, with cells numbered for easy reference.\n  \n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  |  7  |  8  |  9  | 10\n  ----+-----+-----+-----+----\n  11  | 12  | 13  | 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n- **Markers**:\n  - `'X'` for Player 1.\n  - `'O'` for Player 2.\n  \n- **Turn Indicator**: Keeps track of whose turn it is.\n\n## Turns\n\n1. **Turn Order**: Players alternate turns, starting with the player chosen to go first during setup.\n2. **Action per Turn**: On your turn, place your marker on any empty cell by specifying the cell number.\n3. **Turn Progression**: After placing a marker, check for a winning condition. If none, the turn passes to the opponent.\n\n## Rules and Mechanics\n\n1. **Placing Markers**:\n   - You can place your marker on **any empty cell** by entering the cell's number.\n   - Once placed, markers do not move or get removed (except during sudden-death, see below).\n\n2. **Winning Condition**:\n   - **Form a connected group of exactly four of your own markers**.\n   - Markers must be **orthogonally adjacent** (horizontal or vertical neighbors).\n   - Diagonal adjacency does **not** count.\n   - **Groups larger than four do not qualify** for a win. Be careful not to create a connected group of five or more.\n\n3. **Blocking**:\n   - You can place markers to block your opponent's potential groups.\n   - Strategic placement is essential to prevent your opponent from winning while setting up your own win.\n\n4. **Game End Conditions**:\n   - **Win**: First player to form a valid group of exactly four connected markers wins.\n   - **Draw**: The game is designed to avoid draws. However, if the grid is completely filled without any player forming a valid group, proceed to sudden-death.\n   \n5. **Sudden-Death Phase**:\n   - If no valid groups are formed when the grid is full, players enter sudden-death.\n   - **During Sudden-Death**:\n     - Players take turns **relocating one of their own markers** to an empty cell.\n     - Normal placement rules apply.\n     - The first to form a valid group during this phase wins.\n\n## Scoring\n\n- **Winning the Game**: The player who forms a connected group of exactly four markers wins.\n- **No Points System**: The game is win/loss based with no point tracking.\n\n## Examples\n\n### Sample Game Play\n\n#### Turn 1: Player 1\n\n- **Action**: Player 1 places an 'X' on cell **13**.\n\n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  |  7  |  8  |  9  | 10\n  ----+-----+-----+-----+----\n  11  | 12  | 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 2: Player 2\n\n- **Action**: Player 2 places an 'O' on cell **8**.\n\n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  |  7  | 'O'|  9  | 10\n  ----+-----+-----+-----+----\n  11  | 12  | 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 3: Player 1\n\n- **Action**: Player 1 places an 'X' on cell **12**.\n\n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  |  7  | 'O'|  9  | 10\n  ----+-----+-----+-----+----\n  11  | 'X'| 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 4: Player 2\n\n- **Action**: Player 2 places an 'O' on cell **7**.\n\n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  | 'O'| 'O'|  9  | 10\n  ----+-----+-----+-----+----\n  11  | 'X'| 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 5: Player 1\n\n- **Action**: Player 1 places an 'X' on cell **17**.\n\n  ```\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  | 'O'| 'O'|  9  | 10\n  ----+-----+-----+-----+-----                                      \n  11  | 'X'| 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 'X'| 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 6: Player 2\n\n- **Action**: Player 2 places an 'O' on cell **2**.\n\n  ```\n   1  | 'O'|  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  | 'O'| 'O'|  9  | 10\n  ----+-----+-----+-----+----\n  11  | 'X'| 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 'X'| 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n  ```\n\n#### Turn 7: Player 1\n\n- **Action**: Player 1 places an 'X' on cell **22**.\n\n  ```\n   1  | 'O'|  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  | 'O'| 'O'|  9  | 10\n  ----+-----+-----+-----+----\n  11  | 'X'| 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 'X'| 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 'X'| 23  | 24  | 25\n  ```\n\n#### Checking for Win\n\n- **Player 1** now has a connected group of exactly four 'X's at cells **12, 13, 17,** and **22**.\n- **Connection**: Each of these markers is orthogonally adjacent.\n- **Win Condition Met**: Player 1 wins the game.\n\n### Command-Line Interaction Example\n\n#### Prompt for Turn\n\n```\nPlayer 1 ('X'), enter the cell number to place your marker: 13\n```\n\n#### After Placing Marker\n\n```\nCurrent Grid:\n   1  |  2  |  3  |  4  |  5\n  ----+-----+-----+-----+----\n   6  |  7  |  8  |  9  | 10\n  ----+-----+-----+-----+----\n  11  | 12  | 'X'| 14  | 15\n  ----+-----+-----+-----+----\n  16  | 17  | 18  | 19  | 20\n  ----+-----+-----+-----+----\n  21  | 22  | 23  | 24  | 25\n```\n\n#### Next Player's Turn\n\n```\nPlayer 2 ('O'), enter the cell number to place your marker: 8\n```\n\n#### Continuation\n\nThe game continues with each player prompted to enter their move, the grid updating after each move, and checking for the winning condition after each turn.\n\n## Strategic Tips\n\n- **Balance Offense and Defense**: While aiming to connect your own markers, be mindful of your opponent's formations.\n- **Avoid Overconnection**: Be cautious not to create a group larger than four, as it does not count towards a win.\n- **Plan Ahead**: Think multiple moves ahead to set traps and create opportunities for victory.\n- **Control the Center**: Occupying central cells can give you more options for connecting markers.\n\n## Conclusion\n\nQuad Block is a game of strategy and foresight. Quick to learn but with depth for skilled play, it provides a competitive experience where every move counts. Place your markers wisely, and may the best strategist win!",
    "# Gridlock\n\n## Objective\n\nBe the last player able to make a valid move on the grid. Strategize your moves to outmaneuver your opponent by claiming cells while preventing yourself from being blocked.\n\n## Setup\n\n1. **Grid Initialization**: A 5x5 grid is prepared with all cells unclaimed.\n\n2. **Player Assignment**:\n   - **Player 1**: Symbolized by `'X'`.\n   - **Player 2**: Symbolized by `'O'`.\n\n3. **Starting the Game**:\n   - Decide who goes first (e.g., flip a coin or mutual agreement).\n   - The game begins with Player 1 making the first move.\n\n## Game Components\n\n- **Grid**: A 5x5 grid representing the game board.\n- **Cells**: Individual squares within the grid that can be claimed by players.\n- **Player Symbols**:\n  - `'X'` for Player 1.\n  - `'O'` for Player 2.\n\n## Turns\n\n- Players take turns alternately.\n- **On Your Turn**:\n  - Enter the row and column number of an unclaimed cell you wish to claim.\n  - Ensure the cell is valid according to the rules.\n\n## Rules and Mechanics\n\n1. **Claiming a Cell**:\n   - You may claim any unclaimed cell **not adjacent** to any of your previously claimed cells.\n   - **Adjacency** includes horizontal, vertical, and diagonal neighbors.\n\n2. **Adjacency Definition**:\n   - A cell is adjacent if it shares a side or corner with your claimed cell.\n\n3. **Valid Moves**:\n   - On your first turn, you may claim any cell since you have no prior claims.\n   - Subsequent moves must comply with the non-adjacency rule relative to your claimed cells.\n\n4. **Invalid Moves**:\n   - If you cannot make a valid move on your turn, you lose the game.\n   - Attempting to claim an adjacent cell to your own or an already claimed cell is invalid.\n\n5. **Winning the Game**:\n   - The winner is the last player able to make a valid move.\n   - The game ends immediately when a player cannot make a valid move on their turn.\n\n## Scoring\n\n- No points are tracked; the objective is to win by making valid moves when your opponent cannot.\n\n## Examples\n\n### Example Game Play\n\n#### Initial Grid\n\n```\n   0 1 2 3 4\n0 [ ][ ][ ][ ][ ]\n1 [ ][ ][ ][ ][ ]\n2 [ ][ ][ ][ ][ ]\n3 [ ][ ][ ][ ][ ]\n4 [ ][ ][ ][ ][ ]\n```\n\n#### Turn Sequence\n\n1. **Player 1's Turn**:\n   - Claims cell at **(2,2)**.\n   - Grid Update:\n\n     ```\n        0   1   2   3   4\n     0 [ ][ ][ ][ ][ ]\n     1 [ ][ ][ ][ ][ ]\n     2 [ ][ ][X][ ][ ]\n     3 [ ][ ][ ][ ][ ]\n     4 [ ][ ][ ][ ][ ]\n     ```\n\n2. **Player 2's Turn**:\n   - Claims cell at **(0,0)**.\n   - Grid Update:\n\n     ```\n        0   1   2   3   4\n     0 [O][ ][ ][ ][ ]\n     1 [ ][ ][ ][ ][ ]\n     2 [ ][ ][X][ ][ ]\n     3 [ ][ ][ ][ ][ ]\n     4 [ ][ ][ ][ ][ ]\n     ```\n\n3. **Player 1's Turn**:\n   - Cannot claim adjacent cells to (2,2).\n   - Possible cells to claim: Any cell **not adjacent** to (2,2) and **not** adjacent to any of their own claimed cells.\n   - Chooses to claim cell at **(4,4)**.\n   - Grid Update:\n\n     ```\n        0   1   2   3   4\n     0 [O][ ][ ][ ][ ]\n     1 [ ][ ][ ][ ][ ]\n     2 [ ][ ][X][ ][ ]\n     3 [ ][ ][ ][ ][ ]\n     4 [ ][ ][ ][ ][X]\n     ```\n\n4. **Player 2's Turn**:\n   - Cannot claim adjacent cells to (0,0).\n   - Chooses to claim cell at **(0,2)**.\n   - Grid Update:\n\n     ```\n        0   1   2   3   4\n     0 [O][ ][O][ ][ ]\n     1 [ ][ ][ ][ ][ ]\n     2 [ ][ ][X][ ][ ]\n     3 [ ][ ][ ][ ][ ]\n     4 [ ][ ][ ][ ][X]\n     ```\n\n5. **Game Continues**:\n   - Players alternate turns, claiming cells according to the rules.\n   - They must avoid cells adjacent to their own claimed cells.\n\n6. **End Game Scenario**:\n   - Suppose Player 1 runs out of valid moves.\n   - **Player 2** wins the game.\n\n### Command-Line Interaction Example\n\n#### Game Start\n\n```\nWelcome to Gridlock!\n\nPlayer 1 (X) and Player 2 (O), prepare to battle!\n\nPlayer 1's Turn (X).\nEnter the row and column of the cell you want to claim (e.g., '2 2'):\n```\n\n#### Player Inputs\n\n- **Player 1**:\n  ```\n  2 2\n  ```\n  - Game Response:\n    ```\n    You have claimed cell (2,2).\n\n    Current Grid:\n       0   1   2   3   4\n    0 [ ][ ][ ][ ][ ]\n    1 [ ][ ][ ][ ][ ]\n    2 [ ][ ][X][ ][ ]\n    3 [ ][ ][ ][ ][ ]\n    4 [ ][ ][ ][ ][ ]\n\n    Player 2's Turn (O).\n    Enter the row and column of the cell you want to claim:\n    ```\n\n- **Player 2**:\n  ```\n  0 0\n  ```\n  - Game Response:\n    ```\n    You have claimed cell (0,0).\n\n    Current Grid:\n       0   1   2   3   4\n    0 [O][ ][ ][ ][ ]\n    1 [ ][ ][ ][ ][ ]\n    2 [ ][ ][X][ ][ ]\n    3 [ ][ ][ ][ ][ ]\n    4 [ ][ ][ ][ ][ ]\n\n    Player 1's Turn (X).\n    Enter the row and column of the cell you want to claim:\n    ```\n\n#### Invalid Move Attempt\n\n- **Player 1**:\n  ```\n  1 1\n  ```\n  - Game Response:\n    ```\n    Invalid move. The cell is adjacent to your previously claimed cell.\n\n    Current Grid:\n       0   1   2   3   4\n    0 [O][ ][ ][ ][ ]\n    1 [ ][ ][ ][ ][ ]\n    2 [ ][ ][X][ ][ ]\n    3 [ ][ ][ ][ ][ ]\n    4 [ ][ ][ ][ ][ ]\n\n    Please enter a valid cell:\n    ```\n\n#### Continuation\n\n- **Player 1** (chooses a valid cell):\n  ```\n  4 4\n  ```\n  - Game Response:\n    ```\n    You have claimed cell (4,4).\n\n    Current Grid:\n       0   1   2   3   4\n    0 [O][ ][ ][ ][ ]\n    1 [ ][ ][ ][ ][ ]\n    2 [ ][ ][X][ ][ ]\n    3 [ ][ ][ ][ ][ ]\n    4 [ ][ ][ ][ ][X]\n\n    Player 2's Turn (O).\n    Enter the row and column of the cell you want to claim:\n    ```\n\n## Strategic Considerations\n\n- **Planning Ahead**:\n  - Anticipate future moves to ensure you have valid cells to claim later in the game.\n  - Avoid isolating your claimed cells in a way that limits your options.\n\n- **Blocking Opponent**:\n  - While you cannot claim cells adjacent to your own, you might position your claims to limit the opponent's future moves.\n\n- **Space Management**:\n  - Control key areas of the grid to maximize your territory while restricting your opponent.\n\n## Game End\n\n- The game concludes when a player cannot make a valid move on their turn.\n- **Announcement**:\n  ```\n  Player 1 has no valid moves left.\n  Player 2 (O) wins the game! Congratulations!\n  ```\n\n## Summary\n\nGridlock is a game of strategic placement and foresight. Each move can open up new opportunities or close off paths. By carefully selecting which cells to claim, players can control the grid and outmaneuver their opponent.\n\nEnjoy the challenge and may the best strategist win!",
    "# Gridlock\n\n## Objective\n\nGridlock is a two-player turn-based strategy game played on a 4x4 grid. The primary goal is to be the first player to create a connected sequence of at least **three of your own tokens** in a straight line—horizontal, vertical, or diagonal—where the numbers on your tokens form a strict ascending or descending order.\n\n## Setup\n\n- **Grid Initialization**: Begin with an empty 4x4 grid. Each cell is identified by its row (A-D) and column (1-4), such as A1 or C3.\n- **Player Tokens**:\n  - **Player 1** receives tokens numbered **1 to 8**.\n  - **Player 2** receives tokens numbered **1 to 8**.\n- **Starting Conditions**:\n  - Both players have all their tokens unplaced.\n  - Decide who takes the first turn (e.g., by coin toss).\n\n## Game Components\n\n### Grid\n\n- **Structure**: A 4x4 grid consisting of 16 cells.\n- **Identification**: Rows labeled A to D; columns labeled 1 to 4.\n- **Example Grid**:\n\n  ```\n     1   2   3   4\n   +---+---+---+---+\n  A|   |   |   |   |\n   +---+---+---+---+\n  B|   |   |   |   |\n   +---+---+---+---+\n  C|   |   |   |   |\n   +---+---+---+---+\n  D|   |   |   |   |\n   +---+---+---+---+\n  ```\n\n### Tokens\n\n- **Quantity**: Each player has 8 tokens.\n- **Numbering**: Tokens are numbered from **1 to 8**.\n- **Identification**:\n  - Player 1's tokens are labeled as `P1-1` to `P1-8`.\n  - Player 2's tokens are labeled as `P2-1` to `P2-8`.\n- **Appearance**: In the command-line interface, tokens display the player number and token number (e.g., `P1-5`).\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with the player who goes first.\n- **Actions Per Turn**:\n  - **Place a Token**: Place one of your unplaced tokens on any empty cell on the grid.\n- **Token Placement**:\n  - Tokens can be placed in any order, regardless of their numbering.\n  - Once placed, tokens remain on the grid for the rest of the game.\n\n## Rules and Mechanics\n\n### Token Placement\n\n- **Mandatory Move**: On your turn, you must place one of your available tokens.\n- **Available Cells**: You can place a token on any empty cell.\n- **Order of Tokens**: You may choose any of your unplaced tokens to play.\n\n### Winning the Game\n\n- **Primary Victory Condition**: Form a connected sequence of at least **three of your own tokens** in a straight line (horizontal, vertical, or diagonal) where the numbers form a strict ascending or descending order.\n  - **Ascending Example**: Tokens `P1-3`, `P1-4`, `P1-5` in sequence.\n  - **Descending Example**: Tokens `P2-7`, `P2-6`, `P2-5` in sequence.\n- **Sequence Requirements**:\n  - Tokens must be directly adjacent—no gaps.\n  - The numerical sequence must be strictly increasing or decreasing without repeats.\n  - Only your own tokens count toward your sequence.\n\n### Blocking and Strategy\n\n- **Blocking Opponent**: You can place tokens to block potential sequences of your opponent.\n- **Shared Numbers**: Since both players have tokens numbered 1 to 8, anticipate which numbers your opponent may need.\n- **Grid Awareness**: Pay attention to the grid to prevent setting up sequences for your opponent.\n\n### Game End Conditions\n\n- **Victory**: The game ends immediately when a player achieves the primary victory condition.\n- **Secondary Victory Condition**:\n  - **Tie-Breaker**: If all grid cells are filled without a player forming a valid sequence, the player with the **higher total sum** of their placed token numbers wins.\n  - **No Draws**: If the sums are equal (highly unlikely due to token choices), the last player to place a token wins.\n\n## Scoring\n\n- **Primary Method**: Forming a valid numerical sequence as described in the winning conditions.\n- **Secondary Method**: If no sequence is formed, the sum of your tokens on the grid determines the winner.\n  - **Calculation**: Add up the numbers of all your placed tokens.\n  - **Example**: If your tokens on the grid are `P1-2`, `P1-5`, `P1-7`, your total sum is 14.\n\n## Examples\n\n### Example Game Play\n\n#### Game Start\n\n- **Player 1's Tokens**: 1, 2, 3, 4, 5, 6, 7, 8\n- **Player 2's Tokens**: 1, 2, 3, 4, 5, 6, 7, 8\n\n#### Turn Sequence\n\n1. **Player 1's Turn**:\n   - Places `P1-5` at **B2**.\n2. **Player 2's Turn**:\n   - Places `P2-4` at **A1**.\n3. **Player 1's Turn**:\n   - Places `P1-6` at **C2**.\n4. **Player 2's Turn**:\n   - Places `P2-3` at **A2**.\n5. **Player 1's Turn**:\n   - Places `P1-7` at **D2**.\n\n#### Game Analysis\n\n- **Player 1's Tokens on Grid**: `P1-5` (B2), `P1-6` (C2), `P1-7` (D2)\n- **Sequence Formed**: `P1-5` ➔ `P1-6` ➔ `P1-7` vertically aligned in ascending order.\n- **Result**: **Player 1 wins** by forming the required sequence.\n\n### Tie-Breaker Scenario\n\n#### Grid Filled Without Sequence\n\n- All cells are occupied, and no player has formed a valid sequence.\n\n#### Tokens on Grid\n\n- **Player 1's Tokens**: `P1-2`, `P1-4`, `P1-5`, `P1-7`, `P1-8`\n- **Player 2's Tokens**: `P2-1`, `P2-3`, `P2-6`, `P2-7`, `P2-8`, `P2-5`\n\n#### Sum Calculation\n\n- **Player 1's Total Sum**: 2 + 4 + 5 + 7 + 8 = **26**\n- **Player 2's Total Sum**: 1 + 3 + 5 + 6 + 7 + 8 = **30**\n- **Result**: **Player 2 wins** due to a higher total sum.\n\n## Command-Line Interaction Examples\n\n### Sample Turn\n\n- **Grid Display**:\n\n  ```\n     1     2     3     4\n   +----+----+----+----+\n  A|    |    |    |    |\n   +----+----+----+----+\n  B|    |    |    |    |\n   +----+----+----+----+\n  C|    |    |    |    |\n   +----+----+----+----+\n  D|    |    |    |    |\n   +----+----+----+----+\n  ```\n\n- **Player 1's Available Tokens**: 1, 2, 3, 4, 5, 6, 7, 8\n- **Player 1's Turn**:\n  - **Action**: Place token `P1-5`.\n  - **Input**:\n    ```\n    Enter the token number to place: 5\n    Enter the cell to place token P1-5 (e.g., B2): B2\n    ```\n- **Updated Grid**:\n\n  ```\n     1     2     3     4\n   +----+----+----+----+\n  A|    |    |    |    |\n   +----+----+----+----+\n  B|    | P1-5 |    |    |\n   +----+----+----+----+\n  C|    |    |    |    |\n   +----+----+----+----+\n  D|    |    |    |    |\n   +----+----+----+----+\n  ```\n\n### Game Continuation\n\n- Players continue to alternate turns, placing their tokens on the grid, aiming to form the required sequence while blocking their opponent.\n\n## Strategic Tips\n\n- **Plan Ahead**: Think multiple moves ahead to set up your sequence.\n- **Block Opponent**: Watch your opponent's placements and use your tokens to block potential sequences.\n- **Token Selection**:\n  - **Low Numbers**: Useful for starting ascending sequences or blocking.\n  - **High Numbers**: Useful for starting descending sequences or blocking higher-number sequences.\n- **Grid Control**: Occupying central cells can provide more opportunities for forming sequences.\n- **Balance**: Use a mix of high and low numbered tokens to keep your options open.\n\n## Summary\n\n- **Simple Mechanics**: Easy to learn and play.\n- **Strategic Depth**: Requires planning and foresight.\n- **Quick Gameplay**: Designed to end swiftly.\n- **No Draws**: Tie-breaker rules ensure a decisive winner.\n- **Skill-Based**: A skilled player can consistently outmaneuver an unskilled opponent.\n\nEnjoy playing Gridlock and may the best strategist win!",
    "# Divisor Duel\n\n## Objective\n\n**Divisor Duel** is a two-player, turn-based strategy game played in a command-line interface. Players take turns selecting numbers according to specific rules. The primary goal is to force your opponent into a position where they cannot make a valid move on their turn, thereby securing a win.\n\n---\n\n## Setup\n\n- **Number Pool**: The game begins with a shared pool of numbers from **1** to **30**.\n- **Initial Conditions**:\n  - All numbers are unclaimed and available for selection.\n  - Players agree on who takes the first turn (e.g., by mutual agreement or random selection).\n\n---\n\n## Game Components\n\n- **Number Pool**: A list of numbers from **1** to **30** displayed to both players.\n- **Selected Numbers List**: Keeps track of numbers that have been chosen and removes them from the available pool.\n- **Player Indicators**: Each player is identified (e.g., *Player 1* and *Player 2*).\n\n---\n\n## Turns\n\n### Turn Structure\n\n1. **Display Available Numbers**: At the start of each turn, the game displays the current list of available numbers.\n2. **Player Action**:\n   - The player selects an available number following the game rules.\n   - The selected number is recorded and removed from the number pool.\n3. **Turn Progression**: The turn passes to the other player.\n\n### Order of Play\n\n- Players alternate turns throughout the game.\n- The game continues until a player cannot make a valid move on their turn.\n\n---\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **First Move**:\n   - *Player 1* may select **any number** from **2** to **30**.\n   - The number **1** cannot be selected on the first move.\n\n2. **Subsequent Moves**:\n   - On each turn after the first, the player **must select a number** that is an **available divisor or multiple** of the **most recently selected number** by their opponent.\n   - The selected number must not have been previously chosen.\n\n3. **Selecting the Number 1**:\n   - The number **1** can be selected only if no other valid moves are available.\n   - Once **1** is selected, subsequent players can choose any remaining number (since all numbers are multiples of 1).\n\n4. **Invalid Moves**:\n   - If a player cannot select any valid number on their turn, they **lose the game**.\n   - If all numbers have been selected and the player cannot make a move, they lose.\n\n### Additional Mechanics\n\n- **Valid Numbers**: Numbers must be integers within the range of **1** to **30** inclusive.\n- **Tracking**: The game must keep an accurate record of selected numbers to prevent illegal moves.\n\n---\n\n## Scoring\n\n- **Win Condition**: The game is won when a player cannot make a valid move on their turn.\n- **No Points System**: The game does not use a points system; the outcome is a straightforward win or loss.\n- **Match Play (Optional)**: Players can play multiple rounds, keeping track of wins to decide an overall champion.\n\n---\n\n## Examples\n\n### Example Gameplay\n\n#### Starting the Game\n\n- **Available Numbers**: 1-30\n\n#### Turn 1: Player 1\n\n- **Action**: Selects **15** (any number from 2-30).\n- **Explanation**: *Player 1* chooses 15 as a strategic starting point.\n\n#### Turn 2: Player 2\n\n- **Available Numbers Divisible by or Multiples of 15**:\n  - Divisors of 15: **1**, **3**, **5**\n  - Multiples of 15: **30**\n- **Action**: Selects **5**.\n- **Explanation**: *Player 2* picks 5, a divisor of 15, narrowing options for *Player 1*.\n\n#### Turn 3: Player 1\n\n- **Available Numbers Divisible by or Multiples of 5**:\n  - Divisors: **1**\n  - Multiples: **10**, **20**, **25**\n- **Action**: Selects **10**.\n- **Explanation**: *Player 1* chooses 10, a multiple of 5.\n\n#### Turn 4: Player 2\n\n- **Available Numbers Divisible by or Multiples of 10**:\n  - Divisors: **1**, **2**, **5**\n  - Multiples: **20**, **30**\n- **Already Selected Numbers**: **1**, **5**, **10**, **15**\n- **Available Choices**: **2**, **20**, **30**\n- **Action**: Selects **20**.\n- **Explanation**: *Player 2* picks 20 to continue the chain.\n\n#### Turn 5: Player 1\n\n- **Available Numbers Divisible by or Multiples of 20**:\n  - Divisors: **1**, **2**, **4**, **5**, **10**\n  - Multiples: None (since 40 is beyond 30)\n- **Already Selected Numbers**: **1**, **2**, **4**, **5**, **10**, **15**, **20**\n- **Available Choices**: **4**\n- **Action**: Selects **4**.\n- **Explanation**: *Player 1* selects 4 to stay in the game.\n\n#### Turn 6: Player 2\n\n- **Available Numbers Divisible by or Multiples of 4**:\n  - Divisors: **1**, **2**\n  - Multiples: **8**, **12**, **16**, **20**, **24**, **28**\n- **Already Selected Numbers**: **1**, **2**, **4**, **5**, **10**, **15**, **20**\n- **Available Choices**: **8**, **12**, **16**, **24**, **28**\n- **Action**: Selects **8**.\n- **Explanation**: *Player 2* picks 8 to limit *Player 1*'s options.\n\n#### Turn 7: Player 1\n\n- **Available Numbers Divisible by or Multiples of 8**:\n  - Divisors: **1**, **2**, **4**\n  - Multiples: **16**, **24**\n- **Already Selected Numbers**: **1**, **2**, **4**, **5**, **8**, **10**, **15**, **20**\n- **Available Choices**: **16**, **24**\n- **Action**: Selects **16**.\n- **Explanation**: *Player 1* chooses 16 to continue the sequence.\n\n#### Turn 8: Player 2\n\n- **Available Numbers Divisible by or Multiples of 16**:\n  - Divisors: **1**, **2**, **4**, **8**\n  - Multiples: None (since 32 is beyond 30)\n- **Already Selected Numbers**: **1**, **2**, **4**, **5**, **8**, **10**, **15**, **16**, **20**\n- **Available Choices**: None.\n- **Action**: Cannot make a valid move.\n- **Result**: *Player 2* loses the game.\n- **Explanation**: No available numbers are divisors or multiples of 16 that haven't been selected.\n\n---\n\n### Sample Command-Line Interaction\n\n```plaintext\nWelcome to Divisor Duel!\n\nAvailable Numbers: 2, 3, 4, ..., 30\n\nPlayer 1's Turn:\nSelect any number from 2 to 30: 15\n\nAvailable Numbers: 2-14, 16-30 (excluding 15)\n\nPlayer 2's Turn:\nNumbers available that are divisors or multiples of 15: 3, 5, 30\nSelect a number: 5\n\nAvailable Numbers: 2-4, 6-14, 16-29 (excluding 5,15)\n\nPlayer 1's Turn:\nNumbers available that are divisors or multiples of 5: 10, 20, 25\nSelect a number: 10\n\nAvailable Numbers: 2-4, 6-9, 11-14, 16-19, 21-29 (excluding 5,10,15,20)\n\nPlayer 2's Turn:\nNumbers available that are divisors or multiples of 10: 20\nSelect a number: 20\n\n...\n\nPlayer 2 cannot make a valid move.\nPlayer 1 wins the game!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**: Anticipate the numbers that will be available to your opponent after your turn.\n- **Control the Game**: Choose numbers that limit your opponent's options.\n- **Avoid Dead Ends**: Be cautious of numbers that could leave you without valid moves on your next turn.\n- **Use the Number 1 Wisely**: Remember that selecting **1** can reset the game, but it can also open up options for your opponent.\n\n---\n\n## Conclusion\n\nDivisor Duel is a simple yet strategically deep game that challenges players to think ahead and outmaneuver their opponent. It's easy to code and play within a command-line interface, making it an excellent choice for quick, skill-based gameplay without the possibility of a draw.\n\nEnjoy the duel!",
    "# Prime Reduction\n\n## Objective\n\nReduce the shared total number to exactly zero by strategically subtracting prime numbers less than 20. The player who achieves this first wins the game. Be cautious not to reduce the total below zero, as this results in an immediate loss.\n\n---\n\n## Setup\n\n1. **Starting Total**: Decide on a starting total number (recommended between 20 and 100 for optimal gameplay). For example, **100**.\n2. **Player Order**: Determine who goes first (e.g., by mutual agreement or random selection).\n3. **Prime Numbers List**: Use the list of prime numbers less than 20:\n   - **Primes**: 2, 3, 5, 7, 11, 13, 17, 19\n4. **Game Interface**: Ensure both players have access to the command-line interface where the game will be played.\n\n---\n\n## Game Components\n\n- **Shared Total Number**: The central number from which players subtract primes (e.g., starts at 100).\n- **Prime Numbers**: The set of prime numbers less than 20 available for subtraction.\n- **Players**: Two players competing against each other.\n- **Command-Line Interface**: The medium through which players input their moves and receive game updates.\n\n---\n\n## Turns\n\n1. **Turn Sequence**: Players alternate turns, starting with the player designated to go first.\n2. **Player Actions During Turn**:\n   - **Input Move**: Enter a prime number less than 20 to subtract from the shared total.\n   - **Validation**: Ensure the chosen prime does not reduce the total below zero.\n3. **Updating Total**:\n   - After a valid move, subtract the prime from the shared total.\n   - Announce the new total to both players.\n4. **Turn Progression**: The turn passes to the next player after a valid move or if a player loses by making an invalid move.\n\n---\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Valid Primes Only**: Players can only subtract prime numbers less than 20 (2, 3, 5, 7, 11, 13, 17, 19).\n2. **No Negative Totals**: A move that would reduce the shared total below zero is invalid and results in an immediate loss.\n3. **Exact Zero to Win**: The objective is to be the player who reduces the shared total to exactly zero.\n4. **No Passes**: Players cannot skip their turn; a prime number must be subtracted if possible.\n5. **Unique Moves**: There is no restriction on reusing primes; any prime less than 20 can be used multiple times throughout the game.\n\n### Special Conditions\n\n- **Immediate Loss**: If a player cannot make a valid move on their turn (e.g., all primes would reduce the total below zero), they lose the game.\n- **Invalid Input**: Entering a non-prime number, a prime not less than 20, or invalid data prompts a reminder of valid options without penalty.\n\n---\n\n## Scoring\n\n- **Winning**: The player who reduces the shared total to exactly zero wins the game.\n- **Losing**: A player loses if they:\n  - Subtract a prime that reduces the total below zero.\n  - Cannot make a valid move on their turn due to the remaining total.\n- **No Point System**: The game operates on a win/loss basis without tracking points.\n\n---\n\n## Examples\n\n### Example Game Play\n\n**Starting Total**: 23\n\n#### Turn Sequence:\n\n1. **Player 1's Turn**\n   - Chooses to subtract **5**.\n   - Calculation: 23 - 5 = **18**\n   - Announces new total: **18**\n\n2. **Player 2's Turn**\n   - Chooses to subtract **7**.\n   - Calculation: 18 - 7 = **11**\n   - Announces new total: **11**\n\n3. **Player 1's Turn**\n   - Chooses to subtract **11**.\n   - Calculation: 11 - 11 = **0**\n   - Announces new total: **0**\n   - **Player 1 wins!**\n\n### Losing Move Example\n\n**Starting Total**: 4\n\n#### Turn Sequence:\n\n1. **Player 1's Turn**\n   - Available primes: 2, 3\n   - Chooses to subtract **5**.\n   - **Invalid Move**: 5 is a prime less than 20, but 4 - 5 = -1 (below zero).\n   - **Player 1 loses** due to reducing total below zero.\n\n### Command-Line Interaction\n\n```plaintext\nGame Start! The starting total is 23.\nAvailable primes: 2, 3, 5, 7, 11, 13, 17, 19\n\nPlayer 1's turn.\nEnter a prime number to subtract: 5\nYou subtracted 5. New total is 18.\n\nPlayer 2's turn.\nEnter a prime number to subtract: 7\nYou subtracted 7. New total is 11.\n\nPlayer 1's turn.\nEnter a prime number to subtract: 11\nYou subtracted 11. New total is 0.\nPlayer 1 wins! Congratulations!\n```\n\n### Invalid Move Interaction\n\n```plaintext\nPlayer 1's turn.\nThe current total is 4.\nAvailable primes: 2, 3\n\nEnter a prime number to subtract: 5\nInvalid move! Subtracting 5 would reduce the total below zero.\nPlayer 1 loses. Player 2 wins by default.\n```\n\n---\n\n## Strategy Tips\n\n- **Plan Ahead**: Consider the impact of your move on future turns. Aim to set up totals that are unfavorable for your opponent.\n- **Control Key Totals**: Familiarize yourself with key totals that can force a win or prevent a loss.\n- **Force Errors**: Try to leave the total in a state where your opponent has no valid moves or is forced into a losing scenario.\n- **Prime Awareness**: Keep track of available primes and how they can be combined to reach the remaining total.\n\n---\n\n## Conclusion\n\n**Prime Reduction** is a simple yet strategically rich game that combines basic arithmetic with forward-thinking strategy. Its straightforward rules make it easy to code in a command-line interface, and the need for planning ensures that skilled players can consistently outperform less experienced opponents. Enjoy the challenge of outsmarting your opponent in this battle of numbers!\n\n---\n\nHappy gaming!",
    "# Number Sequence Duel\n\n## Objective\n\n**Number Sequence Duel** is a two-player turn-based strategy game. The primary goal is to be the first player to form an arithmetic sequence of four numbers within your collection. An arithmetic sequence is a set of numbers where the difference between consecutive numbers is consistent (e.g., 3, 5, 7, 9 with a common difference of +2). Victory is achieved immediately upon forming such a sequence.\n\n---\n\n## Setup\n\n1. **Number Pool Initialization:**\n   - The game uses numbers from **1 to 20**.\n   - All numbers are initially unclaimed and available in a shared pool.\n\n2. **Player Assignment:**\n   - Two players are required: **Player A** and **Player B**.\n   - Determine who takes the first turn (e.g., coin toss, random selection).\n\n3. **Empty Collections:**\n   - Each player starts with an empty collection to hold their claimed numbers.\n\n---\n\n## Game Components\n\n1. **Number Pool:**\n   - A list of integers from **1 to 20**.\n   - Represents the shared pool of available numbers.\n\n2. **Player Collections:**\n   - **Player A’s Collection:** Holds numbers claimed by Player A.\n   - **Player B’s Collection:** Holds numbers claimed by Player B.\n\n3. **Game Interface (Command-Line):**\n   - Players interact with the game via a command-line interface.\n   - Prompts display available numbers and accept player input.\n\n---\n\n## Turns\n\n1. **Turn Order:**\n   - Players alternate turns throughout the game.\n   - **Player A** takes the first turn if designated to start.\n\n2. **Turn Structure:**\n   - **Display Available Numbers:** The game shows the current unclaimed numbers.\n   - **Player Selection:** The active player selects one number from the available pool.\n   - **Update Collections:** The selected number is added to the player’s collection and removed from the pool.\n   - **Sequence Check:** After each turn, the player’s collection is checked for an arithmetic sequence of four numbers.\n\n3. **Turn Progression:**\n   - The next player's turn begins after the current player completes their selection and sequence check.\n   - The game continues in this alternating fashion until a player wins.\n\n---\n\n## Rules and Mechanics\n\n### Number Selection\n\n- On your turn, you **must** select one unclaimed number from the shared pool.\n- Input the chosen number when prompted.\n- If an invalid or already claimed number is selected, you will be prompted to choose again.\n\n### Forming an Arithmetic Sequence\n\n- **Objective:** Collect numbers that form an arithmetic sequence of **exactly four numbers**.\n- **Definition of Arithmetic Sequence:**\n  - A sequence where the **difference between consecutive numbers is constant**.\n  - Common differences can be positive or negative.\n  - Example sequences:\n    - Positive difference: 4, 7, 10, 13 (common difference of +3)\n    - Negative difference: 15, 12, 9, 6 (common difference of -3)\n- **Sequence Formation Rules:**\n  - The numbers in your collection can be arranged in any order to form a sequence.\n  - Only your own collected numbers are considered for your sequence.\n  - You cannot use unclaimed numbers or numbers from your opponent's collection.\n\n### Winning the Game\n\n- The game is won by the first player who successfully forms a valid arithmetic sequence of four numbers within their collection.\n- The win is declared immediately after forming the sequence on your turn.\n- If no player can form a sequence because all numbers have been claimed, the game acknowledges no possible winner (though this scenario is highly unlikely given the game design).\n\n### Strategic Blocking\n\n- Players can select numbers to **block** their opponent from forming their sequence.\n- Pay attention to your opponent's collected numbers to anticipate and prevent their winning moves.\n\n---\n\n## Scoring\n\n- **No Point System:** The game does not track points.\n- **Win Condition:** Victory is solely based on forming the required arithmetic sequence.\n- **Instant Win:** As soon as a player forms the sequence, they win the game.\n\n---\n\n## Examples\n\n### Sample Game Playthrough\n\n**Initial Setup:**\n\n- **Available Numbers (Pool):** 1 to 20\n- **Player A’s Collection:** Empty\n- **Player B’s Collection:** Empty\n\n---\n\n**Turn 1: Player A**\n- **Available Numbers:** 1-20\n- **Player A selects:** **5**\n- **Player A’s Collection:** [5]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 2: Player B**\n- **Available Numbers:** 1-4, 6-20\n- **Player B selects:** **9**\n- **Player B’s Collection:** [9]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 3: Player A**\n- **Available Numbers:** 1-4, 6-8, 10-20\n- **Player A selects:** **10**\n- **Player A’s Collection:** [5, 10]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 4: Player B**\n- **Available Numbers:** 1-4, 6-8, 11-20\n- **Player B selects:** **13**\n- **Player B’s Collection:** [9, 13]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 5: Player A**\n- **Available Numbers:** 1-4, 6-8, 11-12, 14-20\n- **Player A selects:** **15**\n- **Player A’s Collection:** [5, 10, 15]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 6: Player B**\n- **Available Numbers:** 1-4, 6-8, 11-12, 14, 16-20\n- **Player B selects:** **17**\n- **Player B’s Collection:** [9, 13, 17]\n- **Sequence Check:** No sequence formed.\n\n---\n\n**Turn 7: Player A**\n- **Available Numbers:** 1-4, 6-8, 11-12, 14, 16, 18-20\n- **Player A selects:** **20**\n- **Player A’s Collection:** [5, 10, 15, 20]\n- **Sequence Check:**\n  - Possible sequence: 5, 10, 15, 20 (common difference of +5)\n  - **Player A wins the game!**\n\n---\n\n### Command-Line Interaction Example\n\n```\n--- Number Sequence Duel ---\n\nAvailable Numbers: 1 2 3 4 5 6 ... 20\n\nPlayer A, it's your turn.\nSelect a number: 5\nYou have selected: 5\nYour Collection: 5\nNo winning sequence yet.\n\nAvailable Numbers: 1 2 3 4 6 7 ... 20\n\nPlayer B, it's your turn.\nSelect a number: 9\nYou have selected: 9\nYour Collection: 9\nNo winning sequence yet.\n\n...\n\nAvailable Numbers: 1 2 3 4 6 7 ... 19\n\nPlayer A, it's your turn.\nSelect a number: 20\nYou have selected: 20\nYour Collection: 5 10 15 20\nChecking for winning sequence...\nCongratulations! You've formed an arithmetic sequence: 5, 10, 15, 20\nPlayer A wins!\n```\n\n---\n\n## Additional Notes\n\n- **Invalid Input Handling:**\n  - If a player inputs a number not in the available pool, an error message is displayed.\n  - The player is prompted to select a valid number.\n\n- **Game Length:**\n  - The game is designed to be quick, typically concluding within 7-10 turns.\n  - There is no possibility of a draw under normal gameplay conditions.\n\n- **Replaying the Game:**\n  - After a win, players can reset the game by reinitializing the number pool and clearing player collections.\n\n---\n\n## Strategy Tips\n\n- **Monitor Opponent's Collection:**\n  - Keep track of the numbers your opponent selects.\n  - Anticipate their potential sequences and act to block them.\n\n- **Plan Multiple Sequences:**\n  - Aim for numbers that fit into more than one potential sequence.\n  - Increases your chances of forming a sequence as the game progresses.\n\n- **Balance Offense and Defense:**\n  - While building your sequence, don't neglect the opportunity to hinder your opponent.\n\n- **Flexibility:**\n  - Be prepared to adjust your strategy based on the numbers available and your opponent's moves.\n\n---\n\n## Conclusion\n\n**Number Sequence Duel** is a simple yet strategically rich game that tests players' foresight and planning abilities. With a straightforward objective and minimal components, it is easy to code and play within a command-line interface. The game's design ensures a skilled player can consistently outmaneuver an unskilled opponent, providing depth and competitiveness in every match.\n\nEnjoy the duel, and may the best strategist win!",
    "**Game Name:** Number Bid\n\n---\n\n### **Objective**\n\nThe objective of **Number Bid** is to accumulate the highest total score by strategically bidding numbers from a shared pool. Players compete over multiple rounds, aiming to win rounds and earn points. The player with the highest cumulative score at the end of the game wins.\n\n---\n\n### **Setup**\n\n1. **Numbers Pool:** Create a shared pool of numbers from **1 to 10**.\n2. **Players:** Two players participate in the game.\n3. **Scoreboard:** Establish a method to keep track of each player's cumulative score (e.g., paper and pen, digital notepad).\n4. **Starting Conditions:** Both players have access to the full pool of numbers at the beginning. Decide on a method for simultaneous bidding (e.g., write bids privately and reveal them together).\n\n---\n\n### **Game Components**\n\n- **Numbers Pool (1-10):** A set of numbers available for both players to bid. Each number can be used only once.\n- **Scoreboard:** A record-keeping system to track each player's cumulative points throughout the game.\n- **Bidding Mechanism:** A way for players to select and submit their bids secretly and simultaneously.\n- **Rounds:** The game is played over multiple rounds until all numbers have been bid.\n\n---\n\n### **Turns**\n\n**Structure of a Round:**\n\n1. **Bidding Phase:**\n   - Both players **simultaneously** select a number from the available pool.\n   - Players keep their bids secret until both have made a selection.\n2. **Reveal Phase:**\n   - Both bids are revealed at the same time.\n3. **Resolution Phase:**\n   - Determine the winner of the round based on the bids.\n   - Update scores accordingly.\n   - Remove the bid numbers from the pool.\n4. **Next Round:**\n   - Proceed to the next round with the updated pool of numbers.\n   - Repeat the bidding process.\n\n**Turn Progression:**\n\n- The game progresses in rounds.\n- Each round consumes two numbers from the pool.\n- The game continues until all numbers have been used.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Bidding Rules:**\n   - Players must bid a number from the **available pool**.\n   - Each number can be bid **only once**. Once a number is bid, it is **removed from the pool**.\n   - Bids are made **secretly and simultaneously**.\n\n2. **Winning a Round:**\n   - The player who bids the **higher number** wins the round.\n   - The winner scores points equal to the **sum of both bids**.\n   - If both players bid the **same number**, the round is a tie:\n     - **No points** are awarded to either player.\n     - The bid numbers are still **removed from the pool**.\n\n3. **Scoring:**\n   - **Winner's Points:** Sum of both bids.\n   - **Tie:** No points awarded.\n\n4. **Removing Numbers:**\n   - After each round, the two numbers that were bid are **removed from the pool**, reducing the options for subsequent rounds.\n\n5. **End of the Game:**\n   - The game ends when **all numbers have been bid**.\n   - The player with the **highest cumulative score** wins.\n   - If both players have the **same total score**, the game is a draw (though draws are unlikely due to the game's mechanics).\n\n6. **Strategic Considerations:**\n   - Players must decide **when** to use high numbers to win valuable rounds and **when** to conserve them.\n   - Anticipate the opponent's potential bids based on the remaining numbers.\n\n---\n\n### **Scoring**\n\n- **Winning a Round:**\n  - The winner earns points equal to the **sum of both players' bids**.\n  - Example: If Player 1 bids **7** and Player 2 bids **5**, Player 1 wins and scores **12 points**.\n\n- **Cumulative Score:**\n  - Keep a running total of each player's score after each round.\n  - Update the scoreboard accordingly.\n\n- **Determining the Winner:**\n  - At the end of the game, compare the cumulative scores.\n  - The player with the **higher total score** is the winner.\n\n---\n\n### **Examples**\n\n**Initial Setup:**\n\n- **Available Numbers:** 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n- **Player Scores:** Player 1: 0, Player 2: 0\n\n---\n\n**Round 1:**\n\n- **Bidding Phase:**\n  - Player 1 bids **7**\n  - Player 2 bids **6**\n- **Reveal Phase:**\n  - Both bids are revealed.\n- **Resolution Phase:**\n  - Player 1 wins the round (7 > 6).\n  - Player 1 scores **13 points** (7 + 6).\n- **Updated Scores:**\n  - Player 1: 13\n  - Player 2: 0\n- **Numbers Removed:**\n  - 7 and 6\n- **Numbers Remaining:**\n  - 1, 2, 3, 4, 5, 8, 9, 10\n\n---\n\n**Round 2:**\n\n- **Bidding Phase:**\n  - Player 1 bids **5**\n  - Player 2 bids **9**\n- **Reveal Phase:**\n  - Bids are revealed.\n- **Resolution Phase:**\n  - Player 2 wins the round (9 > 5).\n  - Player 2 scores **14 points** (5 + 9).\n- **Updated Scores:**\n  - Player 1: 13\n  - Player 2: 14\n- **Numbers Removed:**\n  - 5 and 9\n- **Numbers Remaining:**\n  - 1, 2, 3, 4, 8, 10\n\n---\n\n**Round 3:**\n\n- **Bidding Phase:**\n  - Player 1 bids **10**\n  - Player 2 bids **8**\n- **Reveal Phase:**\n  - Bids are revealed.\n- **Resolution Phase:**\n  - Player 1 wins the round (10 > 8).\n  - Player 1 scores **18 points** (10 + 8).\n- **Updated Scores:**\n  - Player 1: 31\n  - Player 2: 14\n- **Numbers Removed:**\n  - 10 and 8\n- **Numbers Remaining:**\n  - 1, 2, 3, 4\n\n---\n\n**Round 4:**\n\n- **Bidding Phase:**\n  - Player 1 bids **2**\n  - Player 2 bids **4**\n- **Reveal Phase:**\n  - Bids are revealed.\n- **Resolution Phase:**\n  - Player 2 wins the round (4 > 2).\n  - Player 2 scores **6 points** (4 + 2).\n- **Updated Scores:**\n  - Player 1: 31\n  - Player 2: 20\n- **Numbers Removed:**\n  - 2 and 4\n- **Numbers Remaining:**\n  - 1, 3\n\n---\n\n**Round 5:**\n\n- **Bidding Phase:**\n  - Player 1 bids **3**\n  - Player 2 bids **1**\n- **Reveal Phase:**\n  - Bids are revealed.\n- **Resolution Phase:**\n  - Player 1 wins the round (3 > 1).\n  - Player 1 scores **4 points** (3 + 1).\n- **Updated Scores:**\n  - Player 1: 35\n  - Player 2: 20\n- **Numbers Removed:**\n  - 3 and 1\n- **Numbers Remaining:**\n  - **None**\n\n---\n\n**End of the Game:**\n\n- **Final Scores:**\n  - Player 1: 35\n  - Player 2: 20\n- **Winner:** Player 1 wins the game with a higher total score.\n\n---\n\n### **Command-Line Interaction Example**\n\n**Starting the Game:**\n\n```\nWelcome to Number Bid!\n\nAvailable Numbers: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nPlayer 1 Score: 0\nPlayer 2 Score: 0\n```\n\n**Round 1:**\n\n- **Players Enter Bids:**\n\n  ```\n  Player 1, enter your bid: [Input Hidden]\n  Player 2, enter your bid: [Input Hidden]\n  ```\n\n- **Revealing Bids:**\n\n  ```\n  Player 1 bid: 7\n  Player 2 bid: 6\n  ```\n\n- **Round Result:**\n\n  ```\n  Player 1 wins the round and scores 13 points!\n  ```\n\n- **Updated Game State:**\n\n  ```\n  Numbers Removed: 7, 6\n  Remaining Numbers: 1, 2, 3, 4, 5, 8, 9, 10\n  Player 1 Score: 13\n  Player 2 Score: 0\n  ```\n\n**Subsequent Rounds:**\n\n- The game continues with the same structure for each round until all numbers have been bid.\n\n---\n\n### **Strategy Tips**\n\n- **Balance High and Low Bids:** Use high numbers to win crucial rounds but save them for when they can maximize your score.\n- **Anticipate Opponent's Moves:** Consider which numbers your opponent might bid based on the remaining pool.\n- **Maximize Points:** Aim to win rounds where the sum of bids will be high to gain more points.\n- **Force Ties Strategically:** If you predict your opponent will bid a certain number, matching it can prevent them from scoring.\n\n---\n\n**Enjoy playing Number Bid, and may the savviest strategist win!**",
    "# Zero Sum Showdown\n\n---\n\n## Objective\n\nBe the first player to bring the **cumulative sum** of selected numbers to **exactly zero** on your turn. Use strategic number selection from a shared pool to achieve this goal while preventing your opponent from doing the same.\n\n---\n\n## Setup\n\n- **Cumulative Sum**: Start with a cumulative sum of **0**.\n- **Number Pool**: Create a shared pool of numbers ranging from **-10 to -1** and **1 to 10**, excluding zero. This results in the numbers:\n\n  ```\n  -10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n   1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n  ```\n\n- **Turn Order**: Decide which player goes first (e.g., by random selection or agreement).\n\n---\n\n## Game Components\n\n- **Number Pool**: A list of available numbers for selection.\n- **Cumulative Sum**: A running total that updates after each turn.\n- **Player Interface**: Command-line prompts for selecting numbers and displaying the current state.\n\n---\n\n## Turns\n\n1. **Player's Turn**:\n   - **Display**:\n     - The current **cumulative sum**.\n     - The **available numbers** in the pool.\n   - **Action**: Select **one** number from the pool.\n\n2. **Update**:\n   - **Cumulative Sum**: Add the selected number to the cumulative sum.\n   - **Number Pool**: Remove the selected number from the pool.\n\n3. **End of Turn**:\n   - **Check for Win**: If the cumulative sum is **exactly zero**, the player wins.\n   - **Next Player**: If not zero, the turn passes to the opponent.\n\n---\n\n## Rules and Mechanics\n\n### Number Selection\n\n- On your turn, you **must** select **one** number from the available pool.\n- Once a number is selected, it is **removed** from the pool and cannot be selected again.\n\n### Cumulative Sum Calculation\n\n- The selected number is **added** to the cumulative sum.\n  - *Example*: If the cumulative sum is `-5` and you select `7`, the new cumulative sum is `2`.\n\n### Winning the Game\n\n- **Win Condition**: If, after adding your selected number, the cumulative sum equals **zero**, you **win** the game.\n\n### Game Continuation\n\n- If the cumulative sum is **not zero**, the game continues with the next player's turn.\n- **No Draws**: The game cannot end in a draw. If all numbers are exhausted without reaching zero, the **last player to make a move loses**.\n\n### Strategic Play\n\n- Players must anticipate and prevent opponents from reaching a cumulative sum of zero on their turns.\n- **Planning Ahead**: Consider the impact of your selection on future moves.\n\n---\n\n## Scoring\n\n- **Victory**: Successfully bringing the cumulative sum to zero on your turn.\n- **Defeat**: Failing to prevent the opponent from bringing the cumulative sum to zero, or being the last to move when all numbers are exhausted without reaching zero.\n\n---\n\n## Examples\n\n### Sample Gameplay\n\n*Let's walk through a sample game between Player 1 and Player 2.*\n\n**Initial State**:\n\n- **Cumulative Sum**: `0`\n- **Available Numbers**:\n\n  ```\n  -10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n   1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n  ```\n\n**Turn 1: Player 1**\n\n- **Action**: Selects `5`.\n- **Cumulative Sum**: `0 + 5 = 5`\n- **Remaining Numbers**: Remove `5` from the pool.\n\n**Turn 2: Player 2**\n\n- **Action**: Selects `-7`.\n- **Cumulative Sum**: `5 + (-7) = -2`\n- **Remaining Numbers**: Remove `-7` from the pool.\n\n**Turn 3: Player 1**\n\n- **Action**: Selects `2`.\n- **Cumulative Sum**: `-2 + 2 = 0`\n- **Result**: Cumulative sum is zero. **Player 1 wins!**\n\n### Command-Line Interaction Example\n\n**Game Start**\n\n```\nCurrent Cumulative Sum: 0\nAvailable Numbers:\n-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n\nPlayer 1, select a number: 5\n```\n\n**After Player 1's Turn**\n\n```\nPlayer 1 chose 5\nNew Cumulative Sum: 5\n\nAvailable Numbers:\n-10, -9, -8, -7, -6, -5, -4, -3, -2, -1,\n 1, 2, 3, 4, 6, 7, 8, 9, 10\n\nPlayer 2, select a number: -7\n```\n\n**After Player 2's Turn**\n\n```\nPlayer 2 chose -7\nNew Cumulative Sum: -2\n\nAvailable Numbers:\n-10, -9, -8, -6, -5, -4, -3, -2, -1,\n 1, 2, 3, 4, 6, 7, 8, 9, 10\n\nPlayer 1, select a number: 2\n```\n\n**Player 1 Wins**\n\n```\nPlayer 1 chose 2\nNew Cumulative Sum: 0\n\nPlayer 1 wins! The cumulative sum is zero.\n```\n\n---\n\n## Strategic Tips\n\n- **Monitor the Cumulative Sum**: Always be aware of the current cumulative sum and how your selection will affect it.\n- **Block Your Opponent**: Anticipate numbers that could allow your opponent to win on their next turn and avoid setting them up.\n- **Plan Ahead**: Think multiple moves ahead to control the flow of the game.\n- **Use Negative Numbers Wisely**: Negative numbers can bring the cumulative sum down quickly but may also help your opponent if not used carefully.\n\n---\n\nRemember, **Zero Sum Showdown** is a game of both calculation and strategy. Each move can open opportunities for victory or create vulnerabilities. Stay sharp and plan your moves thoughtfully to outwit your opponent!\n\n---\n\nHappy gaming!",
    "# Battle Numbers: Rule Book\n\n## Objective\n\n**Battle Numbers** is a strategic two-player card game where each player aims to reduce their opponent's health points to zero. Players achieve victory by tactically playing number cards to attack while defending against their opponent's assaults. The game combines strategic hand management with simple arithmetic, allowing a skilled player to consistently outperform an unskilled opponent.\n\n---\n\n## Setup\n\n1. **Health Points**: Each player starts the game with **20 Health Points (HP)**.\n2. **Deck Preparation**:\n   - Each player has an identical deck consisting of number cards from **1** to **10**. There are **two copies of each card** in the deck, totaling **20 cards** per player.\n   - Shuffle your deck thoroughly before starting the game.\n3. **Initial Hand**:\n   - Each player draws **5 cards** from their deck to form their starting hand.\n4. **Determining the First Player**:\n   - Players decide who goes first by mutual agreement or by flipping a coin.\n\n---\n\n## Game Components\n\n- **Number Cards (1-10)**:\n  - Each card is labeled with a number from **1** to **10**.\n  - Cards represent both offensive and defensive capabilities.\n- **Health Points Indicator**:\n  - A simple counter to keep track of each player's HP (starting at 20 for each player).\n- **Deck and Discard Pile**:\n  - Each player manages their own deck and discard pile.\n- **Hand**:\n  - Players maintain a hand of **5 cards**, drawing from their deck.\n\n---\n\n## Turns\n\nThe game is played in alternating turns. Each turn consists of the following phases:\n\n1. **Play Phase**:\n   - The active player (**Attacker**) selects one card from their hand to play face-up as an attack against their opponent.\n2. **Defense Phase**:\n   - The opposing player (**Defender**) may choose one card from their hand to play face-up in defense.\n   - **Note**: Defending is optional. The Defender may choose not to play a card, resulting in full damage from the attack.\n3. **Resolution Phase**:\n   - Compare the Attacker's and Defender's cards to determine the outcome.\n4. **Draw Phase**:\n   - Both players draw cards from their decks to refill their hands to **5 cards**.\n5. **Turn End**:\n   - The turn passes to the other player, who now becomes the Attacker.\n\n---\n\n## Rules and Mechanics\n\n### Attack and Defense\n\n- **Attacker**:\n  - Selects one card from their hand to attack.\n  - The card represents the **Attack Value**.\n- **Defender**:\n  - May choose to defend by playing one card from their hand.\n  - The card represents the **Defense Value**.\n\n### Damage Calculation\n\n- **If the Defense Value is less than the Attack Value**:\n  - The **Damage Dealt** is calculated as `Attack Value - Defense Value`.\n  - The Damage Dealt is subtracted from the Defender's HP.\n- **If the Defense Value is equal to or greater than the Attack Value**:\n  - No damage is dealt.\n  - **Successful Block**: The Defender negates the attack.\n\n### Card Use and Discarding\n\n- **Used Cards**:\n  - After the attack is resolved, both the Attacker's and Defender's cards used in the turn are placed face-up in their respective **Discard Piles**.\n- **Hand Replenishment**:\n  - At the end of each turn, both players draw enough cards from their decks to have **5 cards** in hand.\n- **Deck Depletion**:\n  - If a player's deck runs out of cards, shuffle the Discard Pile to form a new deck.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - Reduce the opponent's HP to **0** or below.\n- **Losing Condition**:\n  - If a player's HP drops to **0** or below, they lose immediately.\n\n### Additional Rules\n\n- **No Passing**:\n  - The Attacker must play a card each turn.\n- **Optional Defense**:\n  - The Defender may choose not to defend against an attack.\n- **Tied Attack and Defense Values**:\n  - If the Defense Value equals the Attack Value, the attack is fully blocked.\n- **Face-Up Play**:\n  - All cards are played face-up during the Play and Defense phases.\n- **Information Visibility**:\n  - Players should be aware of the cards in their Discard Piles but not in their opponent's hand or deck.\n\n---\n\n## Scoring\n\n- **Health Points (HP)**:\n  - Each player starts with **20 HP**.\n  - Keep track of HP using a counter or a simple notation.\n- **Damage Tracking**:\n  - Deduct Damage Dealt from the Defender's current HP after each attack.\n- **Victory Declaration**:\n  - Once a player's HP reaches **0** or less, the game ends, and the other player is declared the winner.\n\n---\n\n## Examples\n\nBelow are sample command-line interactions illustrating how **Battle Numbers** is played.\n\n### Sample Turn Sequence\n\n**Initial Setup**:\n\n- Both players shuffle their decks and draw 5 cards.\n- **Player 1** and **Player 2** have 20 HP each.\n\n---\n\n**Turn 1: Player 1 Attacks**\n\n- **Player 1's Hand**: 2, 4, 7, 9, 10\n- **Player 1** plays **Card 7** as the Attack Value.\n\n_Command Line_:\n```\nPlayer 1 plays: 7\n```\n\n- **Player 2's Hand**: 3, 5, 6, 8, 10\n- **Player 2** decides to defend with **Card 5**.\n\n_Command Line_:\n```\nPlayer 2 defends with: 5\n```\n\n**Damage Calculation**:\n\n- Attack Value (7) - Defense Value (5) = 2 Damage Dealt\n- **Player 2's HP** is reduced from 20 to 18.\n\n_Command Line_:\n```\nPlayer 2 takes 2 damage. HP is now 18.\n```\n\n- Both used cards (7 and 5) are discarded.\n- Both players draw one card to replenish their hands to 5 cards.\n\n---\n\n**Turn 2: Player 2 Attacks**\n\n- **Player 2's Hand**: 3, 6, 8, 10, 1 (newly drawn)\n- **Player 2** plays **Card 10** as the Attack Value.\n\n_Command Line_:\n```\nPlayer 2 plays: 10\n```\n\n- **Player 1's Hand**: 2, 4, 9, 10, 5 (newly drawn)\n- **Player 1** decides to defend with **Card 10**.\n\n_Command Line_:\n```\nPlayer 1 defends with: 10\n```\n\n**Damage Calculation**:\n\n- Defense Value (10) is equal to Attack Value (10).\n- Attack is fully blocked; **Player 1** takes **no damage**.\n\n_Command Line_:\n```\nPlayer 1 blocks the attack. No damage taken.\n```\n\n- Both used cards (10 and 10) are discarded.\n- Both players draw one card to replenish their hands.\n\n---\n\n**Turn 3: Player 1 Attacks**\n\n- **Player 1's Hand**: 2, 4, 9, 5, 8 (newly drawn)\n- **Player 1** plays **Card 9** as the Attack Value.\n\n_Command Line_:\n```\nPlayer 1 plays: 9\n```\n\n- **Player 2's Hand**: 3, 6, 8, 1, 2 (newly drawn)\n- **Player 2** decides not to defend.\n\n_Command Line_:\n```\nPlayer 2 chooses not to defend.\n```\n\n**Damage Calculation**:\n\n- No Defense Value; full Attack Value applies.\n- **Player 2's HP** is reduced by **9** (from 18 to 9).\n\n_Command Line_:\n```\nPlayer 2 takes 9 damage. HP is now 9.\n```\n\n- Used card (9) is discarded.\n- **Player 1** draws one card to replenish their hand.\n\n---\n\n**Turn 4: Player 2 Attacks**\n\n- **Player 2's Hand**: 3, 6, 8, 1, 2\n- **Player 2** plays **Card 8** as the Attack Value.\n\n_Command Line_:\n```\nPlayer 2 plays: 8\n```\n\n- **Player 1's Hand**: 2, 4, 5, 8, 7 (newly drawn)\n- **Player 1** decides to defend with **Card 4**.\n\n_Command Line_:\n```\nPlayer 1 defends with: 4\n```\n\n**Damage Calculation**:\n\n- Attack Value (8) - Defense Value (4) = 4 Damage Dealt\n- **Player 1's HP** is reduced from 20 to 16.\n\n_Command Line_:\n```\nPlayer 1 takes 4 damage. HP is now 16.\n```\n\n- Both used cards (8 and 4) are discarded.\n- Both players draw one card to replenish their hands.\n\n---\n\n### Continuing the Game\n\nPlayers continue taking turns in this manner until one player's HP is reduced to zero or below. Strategic decisions include:\n\n- **When to use high-value cards** for maximum damage or defense.\n- **When to conserve certain cards** in anticipation of future moves.\n- **Choosing not to defend** to save cards for a stronger counter-attack.\n\n---\n\n## Strategies and Tips\n\n- **Hand Management**:\n  - Keep track of the cards you've used and those likely remaining in your deck.\n- **Anticipate Opponent's Moves**:\n  - Consider which cards your opponent may have based on what they've played.\n- **Balance Attack and Defense**:\n  - Decide when to prioritize defense over offense to preserve your HP.\n- **Card Value Timing**:\n  - Use higher-value cards when they're likely to cause significant damage or block a strong attack.\n\n---\n\n## Conclusion\n\n**Battle Numbers** is a simple yet strategic game that challenges players to outmaneuver their opponent through tactical card play. With straightforward rules and engaging mechanics, the game is easy to code for a command-line interface and offers depth for players seeking to refine their strategies.\n\nEnjoy the duel, and may the best strategist win!\n\n---",
    "**Game Name:** Target Sum Duel\n\n---\n\n**Objective:**\n\nBe the first player to reach **exactly** the target sum by strategically selecting numbers to add to your cumulative total without exceeding the target. The player who reaches the target sum on their turn **wins** the game. If a player exceeds the target sum, they **lose**.\n\n---\n\n**Setup:**\n\n1. **Decide on a Target Sum:** Players agree on a target sum to reach. The default target sum is **30**.\n2. **Determine Turn Order:** Choose which player will take the first turn. This can be decided randomly or by mutual agreement.\n3. **Initialize Totals:** Both players start with a cumulative total of **0**.\n\n---\n\n**Game Components:**\n\n- **Number Pool:** The integers from **1** to **9** inclusive. Each number can be selected multiple times by either player throughout the game.\n- **Cumulative Totals:** Each player maintains their own cumulative total, which is updated on each turn.\n\n---\n\n**Turns:**\n\n- Players alternate turns throughout the game.\n- On each turn, a player selects a number from **1** to **9** and adds it to their cumulative total.\n\n---\n\n**Rules and Mechanics:**\n\n1. **Selecting Numbers:**\n   - On your turn, you **must** select an integer between **1** and **9** (inclusive).\n   - Add the selected number to your cumulative total.\n   - There are **no restrictions** on the numbers, and numbers can be reused any number of times.\n\n2. **Cumulative Total Management:**\n   - Keep track of your cumulative total after each turn.\n   - You **cannot** exceed the target sum. If your cumulative total goes over the target sum after adding your selected number, you **lose** immediately.\n   - If your cumulative total is exactly one less than the target sum, you **must** select **1** on your next turn to reach the target sum and win.\n\n3. **Winning the Game:**\n   - If your cumulative total reaches **exactly** the target sum on your turn, you **win** the game.\n\n4. **Losing the Game:**\n   - If your cumulative total **exceeds** the target sum after your turn, you **lose** immediately, and your opponent wins.\n\n5. **Gameplay Continuation:**\n   - The game continues until one player wins by reaching the target sum or loses by exceeding it.\n\n---\n\n**Scoring:**\n\n- **Winning:** The player who reaches the target sum exactly on their turn **wins** the game.\n- **Losing:** The player whose cumulative total exceeds the target sum **loses** the game.\n- In case of multiple rounds or matches, players can keep track of wins, and the player with the most wins is declared the overall winner.\n\n---\n\n**Examples:**\n\n**Example 1:**\n\n*Target Sum is set to 30.*\n\n- **Turn 1:**\n  - **Player 1** selects **5**.\n  - **Player 1's cumulative total:** 0 + 5 = **5**\n\n- **Turn 2:**\n  - **Player 2** selects **7**.\n  - **Player 2's cumulative total:** 0 + 7 = **7**\n\n- **Turn 3:**\n  - **Player 1** selects **9**.\n  - **Player 1's cumulative total:** 5 + 9 = **14**\n\n- **Turn 4:**\n  - **Player 2** selects **8**.\n  - **Player 2's cumulative total:** 7 + 8 = **15**\n\n- **Turn 5:**\n  - **Player 1** selects **6**.\n  - **Player 1's cumulative total:** 14 + 6 = **20**\n\n- **Turn 6:**\n  - **Player 2** selects **9**.\n  - **Player 2's cumulative total:** 15 + 9 = **24**\n\n- **Turn 7:**\n  - **Player 1** selects **9**.\n  - **Player 1's cumulative total:** 20 + 9 = **29**\n\n- **Turn 8:**\n  - **Player 2** can only select numbers between **1** and **6** without exceeding the target sum.\n  - **Player 2** selects **6**.\n  - **Player 2's cumulative total:** 24 + 6 = **30**\n  - **Player 2** reaches the target sum and **wins the game**.\n\n**Example 2:**\n\n*Target Sum is set to 25.*\n\n- **Turn 1:**\n  - **Player 1** selects **9**.\n  - **Player 1's cumulative total:** 0 + 9 = **9**\n\n- **Turn 2:**\n  - **Player 2** selects **8**.\n  - **Player 2's cumulative total:** 0 + 8 = **8**\n\n- **Turn 3:**\n  - **Player 1** selects **9**.\n  - **Player 1's cumulative total:** 9 + 9 = **18**\n\n- **Turn 4:**\n  - **Player 2** selects **9**.\n  - **Player 2's cumulative total:** 8 + 9 = **17**\n\n- **Turn 5:**\n  - **Player 1** must be careful not to exceed the target sum.\n  - **Player 1** selects **7**.\n  - **Player 1's cumulative total:** 18 + 7 = **25**\n  - **Player 1** reaches the target sum and **wins the game**.\n\n---\n\n**Strategic Considerations:**\n\n- **Anticipate Opponent Moves:** Keep track of your opponent's cumulative total and consider which numbers they might select on their next turn.\n- **Force the Opponent's Hand:** Try to position your opponent so that they have no choice but to exceed the target sum on their next turn.\n- **Optimal Number Selection:** Choose numbers that advance you towards the target sum while limiting your opponent's options.\n- **Mathematical Planning:** Calculate future moves and possible sums to plan several turns ahead.\n\n---\n\n**Command-Line Interaction Examples:**\n\n*Below is a sample interaction between the game and players in a command-line interface.*\n\n```\n--- Target Sum Duel ---\nTarget Sum: 30\n\nPlayer 1's Turn\nCurrent Total: 0\nSelect a number between 1 and 9: 5\nPlayer 1's Total: 5\n\nPlayer 2's Turn\nCurrent Total: 0\nSelect a number between 1 and 9: 7\nPlayer 2's Total: 7\n\nPlayer 1's Turn\nCurrent Total: 5\nSelect a number between 1 and 9: 9\nPlayer 1's Total: 14\n\nPlayer 2's Turn\nCurrent Total: 7\nSelect a number between 1 and 9: 8\nPlayer 2's Total: 15\n\nPlayer 1's Turn\nCurrent Total: 14\nSelect a number between 1 and 9: 6\nPlayer 1's Total: 20\n\nPlayer 2's Turn\nCurrent Total: 15\nSelect a number between 1 and 9: 9\nPlayer 2's Total: 24\n\nPlayer 1's Turn\nCurrent Total: 20\nSelect a number between 1 and 9: 9\nPlayer 1's Total: 29\n\nPlayer 2's Turn\nCurrent Total: 24\nSelect a number between 1 and 6: 6\nPlayer 2's Total: 30\nCongratulations, Player 2! You have reached the target sum and win the game!\n```\n\n---\n\n**Summary:**\n\nTarget Sum Duel is a simple yet strategic game that requires players to make calculated decisions to reach the target sum before their opponent. The game is easy to code and can be played entirely within a command-line interface. It offers depth and complexity as players must anticipate their opponent's moves and plan several steps ahead to secure a win.\n\n---\n\n**Note on Uniqueness:**\n\nTarget Sum Duel is a unique game specifically designed for this purpose. It is not based on traditional games like Nim, Tic-Tac-Toe, or any other well-known games, ensuring a fresh and original experience for players.",
    "# Grid Conquest\n\n## Objective\n\nBe the player who controls the majority of cells on the grid at the end of the game. Victory is achieved by strategically claiming and challenging cells to control more regions than your opponent.\n\n## Setup\n\n- **Players**: 2\n- **Grid**: A 3x3 grid with cells numbered from 1 to 9 for easy reference.\n- **Markers**:\n  - Player 1: `'X'`\n  - Player 2: `'O'`\n- **Challenge Numbers**: Each player has a set of numbers from 1 to 5, available for use during challenges.\n\n## Game Components\n\n### 3x3 Grid\n\n```\n1 | 2 | 3\n--+---+--\n4 | 5 | 6\n--+---+--\n7 | 8 | 9\n```\n\n### Player Markers\n\n- **Player 1**: `'X'`\n- **Player 2**: `'O'`\n\n### Challenge Numbers\n\n- **Available Numbers**: `1`, `2`, `3`, `4`, `5` (per player)\n- **Usage**: Numbers are used during challenges and cannot be reused once spent.\n\n## Turns\n\n- Players take turns alternately, starting with **Player 1**.\n- On your turn, you **must** perform one of the following actions:\n  1. **Claim an Empty Cell**\n  2. **Challenge an Opponent's Cell**\n\n## Rules and Mechanics\n\n### 1. Claiming an Empty Cell\n\n- **Action**: Place your marker (`'X'` or `'O'`) in any unclaimed cell.\n- **Restriction**: The cell must be unoccupied.\n\n### 2. Challenging an Opponent's Cell\n\n- **Action**: Attempt to take over a cell occupied by your opponent.\n- **Procedure**:\n  - **Step 1**: Declare the cell number you wish to challenge.\n  - **Step 2**: Both players secretly select a challenge number from their available numbers.\n  - **Step 3**: Reveal the selected numbers simultaneously.\n  - **Outcome**:\n    - The player with the **higher** number wins the challenge and gains control of the cell.\n    - In case of a **tie**, the **defender** (current owner) retains control.\n  - **Spent Numbers**: Both numbers used in the challenge are **discarded** and cannot be used again.\n\n### Challenge Number Restrictions\n\n- You cannot use a number that has already been spent.\n- If you have no remaining numbers, you cannot initiate a challenge but can still be challenged.\n\n### 3. Game End\n\n- The game ends when **all cells are claimed**.\n- **Winning Condition**:\n  - The player who controls the **most cells** wins.\n  - If both players control an equal number of cells, apply the **Tie-Breaker Rule**.\n\n### Tie-Breaker Rule\n\n- If there's a tie in the number of cells controlled:\n  - The player with the **highest sum of unused challenge numbers** wins.\n- If still tied:\n  - The game proceeds to **Sudden Death**:\n    - Players take turns challenging opponent's cells until the tie is broken.\n\n## Scoring\n\n- **Cell Control**: Each cell you control at the end of the game counts as one point.\n- **Unused Challenge Numbers**: Total value of your unused numbers, used only in tie-breaker situations.\n\n## Examples\n\n### Example Turn Sequence\n\n#### Turn 1 - Player 1\n\n- **Action**: Claims cell `5`.\n- **Grid**:\n\n  ```\n  1 | 2 | 3\n  --+---+--\n  4 | X | 6\n  --+---+--\n  7 | 8 | 9\n  ```\n\n#### Turn 2 - Player 2\n\n- **Action**: Claims cell `1`.\n- **Grid**:\n\n  ```\n  O | 2 | 3\n  --+---+--\n  4 | X | 6\n  --+---+--\n  7 | 8 | 9\n  ```\n\n#### Turn 3 - Player 1\n\n- **Action**: Challenges cell `1`.\n- **Challenge Numbers**:\n  - Player 1 selects `4`.\n  - Player 2 selects `3`.\n- **Outcome**: Player 1 wins the challenge.\n- **Grid**:\n\n  ```\n  X | 2 | 3\n  --+---+--\n  4 | X | 6\n  --+---+--\n  7 | 8 | 9\n  ```\n- **Spent Numbers**:\n  - Player 1 discards `4`.\n  - Player 2 discards `3`.\n\n#### Turn 4 - Player 2\n\n- **Action**: Claims cell `2`.\n- **Grid**:\n\n  ```\n  X | O | 3\n  --+---+--\n  4 | X | 6\n  --+---+--\n  7 | 8 | 9\n  ```\n\n### End of Game Scenario\n\n- **Final Grid**:\n\n  ```\n  X | O | O\n  --+---+--\n  X | X | O\n  --+---+--\n  O | X | O\n  ```\n\n- **Cell Control**:\n  - Player 1 controls cells: `1`, `4`, `5`, `8` (4 cells).\n  - Player 2 controls cells: `2`, `3`, `6`, `7`, `9` (5 cells).\n- **Winner**: Player 2\n\n### Tie-Breaker Scenario\n\n- **Cells Controlled**: Both players control `4` cells.\n- **Unused Challenge Numbers**:\n  - Player 1: `1`, `3`, `5` (sum = `9`).\n  - Player 2: `1`, `2`, `4` (sum = `7`).\n- **Winner**: Player 1 (higher sum of unused numbers).\n\n## Command-Line Interaction Examples\n\n### Claiming an Empty Cell\n\n- **Player 1's Turn**:\n\n  ```\n  It's your turn, Player 1.\n  Available actions: [claim] an empty cell, [challenge] an opponent's cell.\n  Enter your action: claim\n  Enter the cell number you wish to claim (available cells: 2, 3, 4, 6, 7, 8, 9): 5\n  You have claimed cell 5.\n  ```\n\n### Challenging an Opponent's Cell\n\n- **Player 2's Turn**:\n\n  ```\n  It's your turn, Player 2.\n  Available actions: [claim] an empty cell, [challenge] an opponent's cell.\n  Enter your action: challenge\n  Enter the cell number you wish to challenge (opponent's cells: 5): 5\n  Select a challenge number from your available numbers [1, 2, 3, 4, 5]: 5\n  Waiting for Player 1 to select their challenge number...\n  Challenge results:\n  - Your number: 5\n  - Opponent's number: 4\n  You win the challenge and now control cell 5.\n  ```\n\n### Attempting to Use a Spent Number\n\n- **Player 1's Turn**:\n\n  ```\n  It's your turn, Player 1.\n  Available actions: [claim] an empty cell, [challenge] an opponent's cell.\n  Enter your action: challenge\n  Enter the cell number you wish to challenge (opponent's cells: 5): 5\n  Select a challenge number from your available numbers [1, 2, 3, 5]: 4\n  Error: Number 4 has already been used. Please select a valid number.\n  ```\n\n## Strategy Tips\n\n- **Manage Your Challenge Numbers**: Use higher numbers strategically, as they cannot be reused.\n- **Predict Opponent's Moves**: Keep track of numbers your opponent has used.\n- **Cell Priority**: Focus on controlling key positions that may give you an advantage.\n- **Plan for Tie-Breakers**: Retain higher unused numbers if you anticipate a tie.\n\n## Conclusion\n\n\"Grid Conquest\" is a strategic game that combines territory control with resource management. By carefully choosing when to claim cells and when to challenge, and by judiciously using your limited challenge numbers, you can outmaneuver your opponent and dominate the grid.\n\nEnjoy the game and may the best strategist win!",
    "# Number Ninjas\n\n## Objective\n\nBecome the ultimate Number Ninja by strategically reducing your opponent's Health Points (HP) to **zero** before they do the same to you. Utilize numbers to inflict damage, with opportunities for powerful strikes when timing and number choices align perfectly.\n\n## Setup\n\n- **Health Points**: Both players start with **100 HP**.\n- **Number Pool**: Numbers from **1 to 10** are available for selection each turn.\n- **Turn Order**: Decide who takes the first turn (e.g., by agreement or random selection).\n\n## Game Components\n\n- **Players**: Two participants acting as rival Number Ninjas.\n- **Health Tracker**: A display or record of each player's current HP.\n- **Number Pool**: Integers from **1** to **10**, inclusive.\n\n## Turns\n\n### Turn Structure\n\n1. **Number Selection**: The active player selects an integer **N** where **1 ≤ N ≤ 10**.\n2. **Attack Resolution**:\n   - Check if **N** divides evenly into the opponent's current HP **before** the attack.\n   - Calculate damage based on the **Rules and Mechanics**.\n3. **Update HP**: Subtract the calculated damage from the opponent's HP.\n4. **Check for Victory**: If the opponent's HP is **zero** or less, the game ends.\n5. **Next Turn**: The opposing player becomes the active player.\n\n### Example Turn\n\n- **Player 1's Turn**:\n  - Player 1 chooses **N = 5**.\n  - Opponent's HP is **100**, and **5** divides evenly into **100**.\n  - Damage is **2 × 5 = 10**.\n  - Opponent's HP is updated to **90**.\n\n## Rules and Mechanics\n\n### 1. Number Selection\n\n- On your turn, select any integer **N** where **1 ≤ N ≤ 10**.\n- You may choose the same number multiple times during the game.\n\n### 2. Damage Calculation\n\n- **Standard Attack**: If **N** does **not** divide evenly into the opponent's current HP **before** the attack, you deal **damage equal to N**.\n- **Critical Strike**: If **N** **does** divide evenly into the opponent's current HP **before** the attack, you deal **damage equal to 2 × N** (double damage).\n\n### 3. Updating Health Points\n\n- Subtract the calculated damage from the opponent's current HP.\n- If the opponent's HP drops to **zero** or below, they are defeated.\n\n### 4. Winning the Game\n\n- The first player to reduce their opponent's HP to **zero** or below **wins** the game.\n- There are **no draws**; the game continues until a player wins.\n\n## Scoring\n\n- **Health Points (HP)**: The vital statistic representing each player's life total.\n- **Damage Dealt**: The amount subtracted from the opponent's HP during your turn.\n- **Critical Strikes**: Special attacks that deal double damage when conditions are met.\n\n## Examples\n\n### Example 1: Standard Attack\n\n- **Player 1's HP**: 100\n- **Player 2's HP**: 100\n- **Player 1's Turn**:\n  - Chooses **N = 7**.\n  - **7** does **not** divide evenly into **Player 2's HP (100)**.\n  - Damage dealt: **7**.\n  - **Player 2's HP** is updated to **93**.\n\n### Example 2: Critical Strike\n\n- **Player 2's HP**: 93\n- **Player 1's Turn**:\n  - Chooses **N = 3**.\n  - **3** divides evenly into **93**.\n  - Damage dealt: **2 × 3 = 6**.\n  - **Player 2's HP** is updated to **87**.\n\n### Example 3: Strategy in Action\n\n- **Player 1's HP**: 50\n- **Player 2's HP**: 20\n- **Player 2's Turn**:\n  - Chooses **N = 5**.\n  - **5** divides evenly into **Player 1's HP (50)**.\n  - Damage dealt: **2 × 5 = 10**.\n  - **Player 1's HP** is updated to **40**.\n  - *Player 2 aims for numbers that are factors of Player 1's HP to maximize damage.*\n\n### Sample Command-Line Interaction\n\n```\n[Turn 1] Player 1's HP: 100 | Player 2's HP: 100\nPlayer 1, choose a number (1-10): 7\n7 does not divide evenly into 100.\nYou deal 7 damage to Player 2.\nPlayer 2's HP is now 93.\n\n[Turn 2] Player 1's HP: 100 | Player 2's HP: 93\nPlayer 2, choose a number (1-10): 9\n9 does not divide evenly into 100.\nYou deal 9 damage to Player 1.\nPlayer 1's HP is now 91.\n\n[Turn 3] Player 1's HP: 91 | Player 2's HP: 93\nPlayer 1, choose a number (1-10): 7\n7 divides evenly into 91.\nCritical Strike! You deal 14 damage to Player 2.\nPlayer 2's HP is now 79.\n```\n\n## Additional Rules\n\n- **Invalid Input**: If a player selects a number outside the 1-10 range, prompt them to choose a valid number.\n- **Negative HP**: If a player's HP drops below zero, consider it as zero for game-ending purposes.\n- **No Healing**: There are no mechanisms for restoring HP.\n- **Conceding**: A player may concede at any time, resulting in a loss.\n\n## Strategic Tips\n\n- **Monitor Opponent's HP**: Choose numbers that are factors of their HP to maximize damage.\n- **Avoid Predictability**: Vary your number choices to keep your opponent guessing.\n- **Plan Ahead**: Anticipate how your choices affect future turns and potential critical strikes.\n- **Defensive Play**: Sometimes selecting numbers that prevent your HP from being divisible by common numbers can reduce the risk of receiving a critical strike.\n\n## Summary\n\n\"Number Ninjas\" is a fast-paced, turn-based strategy game that combines basic arithmetic with tactical decision-making. The game is easy to learn but offers strategic depth, rewarding players who think ahead and make calculated choices. With no possibility of a draw and straightforward mechanics, each game is quick and engaging, perfect for play in a command-line interface.\n\n---\n\nEnjoy battling wits and numbers in \"Number Ninjas\"! May the best strategist win.",
    "**Trail Blazer**\n\n---\n\n### **Objective**\n\nBe the first player to navigate your Trail Blazer from your base to your opponent's base on a shared 5x5 grid. Strategically block your opponent while carving a unique path to victory. The first player to reach the opponent's base wins the game. If a player has no legal moves remaining, they lose the game.\n\n---\n\n### **Setup**\n\n1. **Game Board Initialization**\n   - The game is played on a 5x5 grid represented in the command-line interface.\n   - The grid coordinates are as follows:\n     - Rows are numbered from `0` to `4` top to bottom.\n     - Columns are numbered from `0` to `4` left to right.\n\n2. **Player Bases and Starting Positions**\n   - **Player A (Trail Blazer A)**\n     - Base located at the top-left corner `(0,0)`.\n     - Starts with their Trail Blazer on their base at `(0,0)`.\n   - **Player B (Trail Blazer B)**\n     - Base located at the bottom-right corner `(4,4)`.\n     - Starts with their Trail Blazer on their base at `(4,4)`.\n\n3. **Initial Grid State**\n   - All grid cells are empty except for the starting positions of the players' Trail Blazers.\n   - No trails have been created yet.\n\n---\n\n### **Game Components**\n\n1. **Grid Board**\n   - A 5x5 grid that serves as the game board.\n   - Each cell on the grid can be in one of the following states:\n     - **Empty (`.`)**: The cell has not been occupied.\n     - **Trail Blazer A (`A`)**: Occupied by Player A's Trail Blazer.\n     - **Trail Blazer B (`B`)**: Occupied by Player B's Trail Blazer.\n     - **Trail of A (`a`)**: A cell previously occupied by Player A's Trail Blazer.\n     - **Trail of B (`b`)**: A cell previously occupied by Player B's Trail Blazer.\n\n2. **Trail Blazers**\n   - Each player controls one Trail Blazer.\n   - The Trail Blazer leaves a permanent trail on the grid as it moves.\n\n---\n\n### **Turns**\n\n1. **Turn Order**\n   - Players take turns alternately.\n   - **Player A** takes the first turn.\n\n2. **Player Actions During a Turn**\n   - **Move the Trail Blazer**:\n     - Move your Trail Blazer to an adjacent unoccupied cell.\n     - Allowed movements include horizontal, vertical, and diagonal directions.\n     - The destination cell must be empty (not occupied by any trail or Trail Blazer).\n   - **Trail Creation**:\n     - After moving, the cell you leave becomes part of your trail.\n     - Mark your trail on the grid (`a` for Player A, `b` for Player B).\n\n3. **Movement Restrictions**\n   - You cannot move onto a cell that is occupied by your own trail (`a` or `b`), your opponent's trail, or either Trail Blazer.\n   - You must move each turn if a legal move is available.\n\n4. **No Pass Rule**\n   - Passing a turn is not allowed.\n   - If you have at least one legal move, you must make a move.\n\n5. **Turn Progression**\n   - After completing your move and updating the grid, it becomes the opponent's turn.\n\n---\n\n### **Rules and Mechanics**\n\n1. **Winning the Game**\n   - **Victory Condition**:\n     - Reach the opponent's base with your Trail Blazer.\n     - For Player A, reach cell `(4,4)`.\n     - For Player B, reach cell `(0,0)`.\n\n2. **Losing the Game**\n   - **No Legal Moves**:\n     - If it's your turn and you have no legal moves (all adjacent cells are occupied), you lose the game.\n\n3. **Trail Mechanics**\n   - Trails are permanent and block movement.\n   - Neither player can occupy a cell that is part of a trail (their own or the opponent's).\n\n4. **Movement Directions**\n   - A Trail Blazer can move to any of the eight adjacent cells (including diagonals) provided they are unoccupied.\n\n5. **Grid Boundaries**\n   - The grid edges represent the boundaries.\n   - Movement off the grid is not allowed.\n\n---\n\n### **Scoring**\n\n- **Win Condition**:\n  - The first player to reach the opponent's base wins.\n- **Lose Condition**:\n  - A player loses if they have no legal moves on their turn.\n- **Game Conclusion**:\n  - The game ends immediately when either win or lose condition is met.\n\n---\n\n### **Examples**\n\n#### **Sample Game Playthrough**\n\n**Initial Grid State**\n\n```\nA . . . .\n. . . . .\n. . . . .\n. . . . .\n. . . . B\n```\n\n**Turn 1: Player A**\n\n- **Current Position**: `(0,0)`\n- **Possible Moves**: `(0,1)`, `(1,0)`, `(1,1)`\n- **Player A Moves to**: `(1,1)`\n- **Grid Update**:\n  - Mark `(0,0)` as part of Player A's trail (`a`).\n  - Place `A` at `(1,1)`.\n\n**Grid After Turn 1**\n\n```\na . . . .\n. A . . .\n. . . . .\n. . . . .\n. . . . B\n```\n\n---\n\n**Turn 2: Player B**\n\n- **Current Position**: `(4,4)`\n- **Possible Moves**: `(3,3)`, `(3,4)`, `(4,3)`\n- **Player B Moves to**: `(3,3)`\n- **Grid Update**:\n  - Mark `(4,4)` as part of Player B's trail (`b`).\n  - Place `B` at `(3,3)`.\n\n**Grid After Turn 2**\n\n```\na . . . .\n. A . . .\n. . . . .\n. . . B .\n. . . . b\n```\n\n---\n\n**Turn 3: Player A**\n\n- **Current Position**: `(1,1)`\n- **Possible Moves**: Adjacent empty cells\n- Assume Player A moves strategically towards Player B's base.\n\n---\n\n#### **Command-Line Interaction Example**\n\n**Player A's Turn**\n\n```\nPlayer A, it's your turn.\nYour current position: (1,1)\nEnter your move (row and column): 2 2\n```\n\n- **Validation**:\n  - Check if `(2,2)` is a valid move.\n  - Confirm it's adjacent and unoccupied.\n- **Update**:\n  - Move Trail Blazer to `(2,2)`.\n  - Mark `(1,1)` as part of the trail.\n\n**Player B's Turn**\n\n```\nPlayer B, it's your turn.\nYour current position: (3,3)\nEnter your move (row and column): 2 2\n```\n\n- **Validation**:\n  - `(2,2)` is occupied by Player A's Trail Blazer.\n  - Inform Player B to choose another move.\n\n**Player B Chooses an Available Cell**\n\n---\n\n**Endgame Scenario**\n\nIf Player A reaches `(4,4)`:\n\n```\nPlayer A has reached Player B's base at (4,4).\nPlayer A wins the game!\n```\n\nIf Player B has no legal moves:\n\n```\nPlayer B has no legal moves remaining.\nPlayer B loses the game.\nPlayer A wins by default!\n```\n\n---\n\n### **Strategy Tips**\n\n- **Plan Ahead**: Anticipate your opponent's moves and block their paths when possible.\n- **Balance Offense and Defense**: While advancing towards the opponent's base, be mindful of protecting your own.\n- **Control the Center**: Dominating the center of the grid provides more movement options.\n- **Avoid Traps**: Be cautious not to corner yourself without legal moves.\n\n---\n\n**Enjoy your game of Trail Blazer! May the best strategist win.**",
    "# Prime Challenge\n\n## Objective\n\nThe objective of **Prime Challenge** is to be the last player able to produce a valid prime number by adding an integer between 1 and 10 to the current shared number. The game requires strategic thinking and knowledge of prime numbers. The player who cannot produce a prime number on their turn loses the game.\n\n## Setup\n\n- **Starting Number**: The game begins with the shared number set to **2**, the smallest prime number.\n- **Players**: Two players participate, taking turns.\n\n## Game Components\n\n- **Shared Number**: A single integer value visible to both players, starting at **2**.\n- **Allowed Additions**: Integers from **1** to **10** inclusive.\n- **Command-Line Interface**: Players input their chosen addition via command-line prompts.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, with Player 1 starting the game.\n- **Player Actions**:\n  - **Add an Integer**: On their turn, a player adds any integer between **1** and **10** to the shared number.\n  - **Produce New Number**: The addition result becomes the new shared number.\n- **Turn Progression**: After a player completes their turn, control passes to the other player.\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - On their turn, a player must add an integer between **1** and **10** to the shared number.\n   - The sum must result in a **prime number**.\n2. **Prime Number Verification**:\n   - After the addition, the new shared number must be a prime number.\n   - If the result is not a prime number, the move is invalid, and the player loses the game.\n3. **Winning the Game**:\n   - If a player cannot produce a prime number on their turn, they lose.\n   - The opposing player is declared the winner.\n4. **Repeated Numbers**:\n   - Numbers can be repeated; there is no restriction on using previously obtained prime numbers.\n5. **Allowed Additions**:\n   - Players can use the same addition values multiple times throughout the game.\n\n## Scoring\n\n- **Winning Condition**: The game is won by the player who successfully forces their opponent into a position where no valid move is possible.\n- **No Points System**: The game does not track points. Victory is determined solely by the winning condition.\n\n## Examples\n\n### Example Game Playthrough\n\n**Starting Shared Number**: 2\n\n---\n\n**Player 1's Turn**:\n\n- **Action**: Adds **3** to the shared number.\n- **Calculation**: 2 + 3 = **5**\n- **Verification**: 5 is a prime number.\n- **New Shared Number**: **5**\n\n---\n\n**Player 2's Turn**:\n\n- **Action**: Adds **2** to the shared number.\n- **Calculation**: 5 + 2 = **7**\n- **Verification**: 7 is a prime number.\n- **New Shared Number**: **7**\n\n---\n\n**Player 1's Turn**:\n\n- **Action**: Adds **4** to the shared number.\n- **Calculation**: 7 + 4 = **11**\n- **Verification**: 11 is a prime number.\n- **New Shared Number**: **11**\n\n---\n\n**Player 2's Turn**:\n\n- **Action**: Adds **2** to the shared number.\n- **Calculation**: 11 + 2 = **13**\n- **Verification**: 13 is a prime number.\n- **New Shared Number**: **13**\n\n---\n\n**Player 1's Turn**:\n\n- **Action**: Adds **6** to the shared number.\n- **Calculation**: 13 + 6 = **19**\n- **Verification**: 19 is a prime number.\n- **New Shared Number**: **19**\n\n---\n\n**Player 2's Turn**:\n\n- **Action**: Adds **2** to the shared number.\n- **Calculation**: 19 + 2 = **21**\n- **Verification**: 21 is not a prime number.\n- **Outcome**: Invalid move. **Player 2 loses.**\n\n**Winner**: **Player 1**\n\n### Command-Line Interaction Sample\n\n```\nStarting Number: 2\n\nPlayer 1's Turn:\nEnter a number to add (1-10): 3\nNew Number: 5\n\nPlayer 2's Turn:\nEnter a number to add (1-10): 2\nNew Number: 7\n\nPlayer 1's Turn:\nEnter a number to add (1-10): 4\nNew Number: 11\n\nPlayer 2's Turn:\nEnter a number to add (1-10): 2\nNew Number: 13\n\nPlayer 1's Turn:\nEnter a number to add (1-10): 6\nNew Number: 19\n\nPlayer 2's Turn:\nEnter a number to add (1-10): 2\nNew Number: 21\n21 is not a prime number.\nPlayer 2 cannot make a valid move.\nPlayer 1 wins the game!\n```\n\n## Strategy Tips\n\n- **Prime Awareness**: Familiarity with prime numbers helps in planning moves.\n- **Forcing Moves**: Try to leave the shared number in a state where the opponent has fewer options to produce a prime number.\n- **Avoiding Traps**: Be cautious of numbers that can only be followed by non-prime results within the allowed additions.\n\n---\n\n**Prime Challenge** offers a quick and strategic gameplay experience where mathematical skill can provide a competitive edge. The simplicity of the rules makes it easy to code and play in a command-line interface, while the depth of strategy allows skilled players to consistently outperform less experienced opponents.",
    "# Sequence Duel\n\n## Objective\n\nSequence Duel is a strategic two-player, turn-based game played on a shared number line. The primary goal is to be the last player able to make a valid move by claiming numbers according to the game rules. A player wins by forcing their opponent into a position where they cannot claim any more numbers on their turn.\n\n## Setup\n\n- **Number Line**: The game uses a number line containing integers from **1** to **20**.\n- **Starting Player**: Decide which player goes first (Player 1 and Player 2). This can be determined randomly or by mutual agreement.\n- **Initial State**: At the start, all numbers are unclaimed and available for selection.\n\n## Game Components\n\n- **Number Line (1-20)**: Represents the pool of numbers available for players to claim. Each number is either unclaimed, claimed by Player 1, or claimed by Player 2.\n- **Player Tokens**: While not physical tokens, each player will have a record of the numbers they've claimed.\n  - **Player 1**: Represented by `P1`.\n  - **Player 2**: Represented by `P2`.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with Player 1.\n- **Turn Actions**:\n  1. **Select a Number**: On their turn, a player selects an unclaimed number from the number line that is **not adjacent** to any number claimed by the opponent.\n  2. **Claim the Number**: The selected number is marked as claimed by the player.\n- **Progression**: The game continues with players alternating turns until a player is unable to make a valid move on their turn.\n\n## Rules and Mechanics\n\n### Number Selection Rules\n\n- **Valid Selection**: A player can select any unclaimed number that is **not adjacent** (i.e., does not have a difference of 1) to any number already claimed by the opponent.\n  - **Adjacency**: Two numbers are adjacent if the absolute difference between them is **1**.\n- **Invalid Selection**: A player **cannot** select:\n  - A number already claimed by either player.\n  - A number adjacent to any of the opponent's claimed numbers.\n\n### Claiming Numbers\n\n- Once a number is claimed by a player, it remains under their control for the rest of the game.\n- Each player's claimed numbers are recorded and visible to both players.\n\n### Winning the Game\n\n- **Win Condition**: A player wins if their opponent has no valid numbers to select on their turn.\n- **Loss Condition**: A player loses if they have no valid numbers to select when it's their turn.\n\n### Additional Mechanics\n\n- **Strategy**: Players can block their opponent's options by strategically claiming numbers that limit available moves.\n- **No Draws**: The game is designed to always produce a winner; there are no scenarios where a draw is possible.\n\n## Scoring\n\n- **Single-Game Victory**: The winner is the player who successfully prevents their opponent from making a valid move.\n- **Match Play**: For extended play, players can compete in multiple rounds, keeping track of victories:\n  - **Win**: 1 point\n  - **Loss**: 0 points\n- **Overall Winner**: The player with the most points after a predetermined number of rounds wins the match.\n\n## Examples\n\n### Sample Game Turn-by-Turn\n\n#### Initial State\n\n- **Number Line (Unclaimed Numbers)**: 1, 2, 3, ..., 20\n- **Player 1 Claimed Numbers**: None\n- **Player 2 Claimed Numbers**: None\n\n#### Turn 1: Player 1\n\n- **Action**: Player 1 selects number **10**.\n- **Reason**: It's the center number, providing strategic options.\n- **Updated State**:\n  - **Player 1 Claimed Numbers**: 10\n  - **Number Line**: 1-9, 11-20 (10 is marked as `P1`)\n\n#### Turn 2: Player 2\n\n- **Action**: Player 2 cannot select numbers **9** or **11** (adjacent to 10).\n- **Valid Options**: Any number except 9, 10, 11.\n- **Selection**: Player 2 selects number **13**.\n- **Updated State**:\n  - **Player 2 Claimed Numbers**: 13\n  - **Number Line**: 1-9, 11,12,14-20 (10 is `P1`, 13 is `P2`)\n\n#### Turn 3: Player 1\n\n- **Action**: Cannot select numbers adjacent to **13** (12 and 14).\n- **Valid Options**: Numbers not adjacent to opponent's numbers or already claimed.\n- **Selection**: Player 1 selects **7**.\n- **Updated State**:\n  - **Player 1 Claimed Numbers**: 10, 7\n  - **Number Line**: 1-6,8,9,11,12,14-20\n\n#### Turn 4: Player 2\n\n- **Action**: Cannot select numbers adjacent to **10** or **7** (6,8,9,11).\n- **Selection**: Player 2 selects **16**.\n- **Updated State**:\n  - **Player 2 Claimed Numbers**: 13,16\n  - **Number Line**: 1-6,8,9,11,12,14,15,17-20\n\n#### Subsequent Turns\n\n- Players continue selecting numbers following the rules.\n- Players aim to limit the opponent's options by blocking.\n- The game proceeds until a player cannot make a valid move.\n\n### Sample Command-Line Interaction\n\nBelow is a simulated command-line interaction between the game and the players.\n\n#### Game Start\n\n```plaintext\nWelcome to Sequence Duel!\n\nNumbers Available: [1-20]\n\nPlayer 1, enter your name: Alice\nPlayer 2, enter your name: Bob\n\nAlice will go first.\n```\n\n#### Turn 1: Alice\n\n```plaintext\nNumbers Available: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]\nAlice's Claimed Numbers: []\nBob's Claimed Numbers: []\n\nAlice, select a number: 10\n\nYou have claimed number 10.\n```\n\n#### Turn 2: Bob\n\n```plaintext\nNumbers Available: [1-9,11-20] (Note: 10 is claimed by Alice)\nNumbers adjacent to Alice's numbers (cannot be selected): [9,11]\nBob's Claimed Numbers: []\n\nBob, select a number: 13\n\nYou have claimed number 13.\n```\n\n#### Turn 3: Alice\n\n```plaintext\nNumbers Available: [1-9,11,12,14-20]\nNumbers adjacent to Bob's numbers (cannot be selected): [12,14]\nAlice's Claimed Numbers: [10]\n\nAlice, select a number: 7\n\nYou have claimed number 7.\n```\n\n#### Turn 4: Bob\n\n```plaintext\nNumbers Available: [1-6,8,9,11,12,14-20]\nNumbers adjacent to Alice's numbers (cannot be selected): [6,8]\nBob's Claimed Numbers: [13]\n\nBob, select a number: 16\n\nYou have claimed number 16.\n```\n\n#### Turns Continue...\n\nThe game continues in this fashion until a player cannot make a valid move.\n\n#### Ending the Game\n\nSuppose later in the game, Bob cannot make a move.\n\n```plaintext\nBob, you have no valid moves left.\nAlice wins the game!\n```\n\n## Strategies and Tips\n\n- **Center Control**: Claiming central numbers like 10 can maximize your options.\n- **Blocking**: Anticipate your opponent's possible moves and claim numbers that limit their options.\n- **Avoid Isolation**: Be cautious about selecting numbers that don't contribute to blocking your opponent.\n- **Plan Ahead**: Think several moves ahead to create a path to victory.\n\n## Conclusion\n\nSequence Duel is a simple yet strategic game that tests players' foresight and planning abilities. With easy-to-understand rules and quick gameplay, it's perfect for a command-line interface and provides a competitive experience where skillful play is rewarded.\n\nEnjoy your game of Sequence Duel!",
    "---\n\n# Divisor Duel Rule Book\n\n## Objective\n\nDivisor Duel is a strategic, two-player, turn-based game played in a command-line interface. The primary goal of the game is to force your opponent into a position where they cannot make a valid move under the game's rules. Players achieve victory by reducing a shared number to a state where the opponent has no valid proper divisors to subtract, thereby winning the game. There is no draw mechanism; the game continues until one player wins.\n\n---\n\n## Setup\n\n1. **Initialize the Game:**\n   - The shared number, known as the **Current Number**, is initialized to **100** at the start of the game.\n\n2. **Determine the First Player:**\n   - Players decide who goes first by mutual agreement or through a random method, such as flipping a coin or generating a random number.\n\n3. **Player Identification:**\n   - Assign players as **Player 1** and **Player 2** for clarity during gameplay.\n\n4. **No Physical Components:**\n   - Since the game is played in a command-line interface, there are no physical boards, pieces, or cards required.\n\n---\n\n## Game Components\n\n- **Current Number:**\n  - A shared integer value that players manipulate during the game.\n  - Initialized to **100** at the start.\n  - Updated after each player's turn.\n\n- **Players:**\n  - **Player 1** and **Player 2**, who take turns altering the Current Number according to the game rules.\n\n- **Valid Moves:**\n  - Proper divisors of the Current Number (excluding 1 and the number itself).\n\n---\n\n## Turns\n\n1. **Turn Order:**\n   - Players alternate turns, starting with the player determined during the setup phase.\n\n2. **Player Actions:**\n   - On their turn, a player must:\n     - Identify all proper divisors of the Current Number (excluding 1 and the Current Number itself).\n     - Choose one proper divisor to subtract from the Current Number.\n     - Perform the subtraction to obtain a new Current Number.\n     - Announce their chosen divisor and the new Current Number.\n\n3. **Progression of Turns:**\n   - After a player completes their turn, control passes to the other player.\n   - The game continues in this alternating fashion until a win condition is met.\n\n---\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Valid Moves:**\n   - Players can only subtract proper divisors of the Current Number from the Current Number.\n   - **Proper Divisors** are positive integers that exactly divide the Current Number, excluding 1 and the Current Number itself.\n   - **Example:** If the Current Number is 28, valid proper divisors are 2, 4, 7, and 14.\n\n2. **Invalid Moves:**\n   - Players cannot subtract 1 or the Current Number itself.\n   - If a player attempts to subtract an invalid number, they must choose a valid proper divisor instead.\n\n3. **No Available Moves:**\n   - If a player's turn begins and the Current Number has no proper divisors (i.e., it is a prime number or 1), that player loses the game.\n\n4. **Winning the Game:**\n   - A player wins by reducing the Current Number to **0** on their turn.\n   - Alternatively, a player wins if the opponent has no valid moves on their turn due to the Current Number being prime or 1.\n\n5. **Losing the Game:**\n   - A player loses if they cannot make a valid move on their turn.\n   - This occurs when the Current Number is a prime number or 1, leaving no proper divisors to subtract.\n\n### Special Conditions\n\n- **Negative Numbers:**\n  - The Current Number must always be a non-negative integer.\n  - If a move would result in a negative Current Number, it is invalid, and the player must choose a different proper divisor.\n\n- **Zero as Current Number:**\n  - If a player reduces the Current Number to **0**, they win the game immediately.\n\n---\n\n## Scoring\n\n- **Victory Determination:**\n  - The game does not employ a points-based scoring system.\n  - The winner is determined solely by achieving the game's objective as outlined in the rules.\n\n- **No Draws:**\n  - The game is designed with no draw mechanism; play continues until one player wins.\n\n---\n\n## Examples\n\n### Sample Game Playthrough\n\n**Starting Current Number:** 100\n\n---\n\n#### Turn 1: Player 1\n\n- **Current Number:** 100\n- **Proper Divisors (excluding 1 and 100):** 2, 4, 5, 10, 20, 25, 50\n- **Player 1's Move:**\n  - Chooses to subtract **50**.\n  - Calculation: 100 - 50 = **50**\n- **New Current Number:** 50\n\n---\n\n#### Turn 2: Player 2\n\n- **Current Number:** 50\n- **Proper Divisors (excluding 1 and 50):** 2, 5, 10, 25\n- **Player 2's Move:**\n  - Chooses to subtract **25**.\n  - Calculation: 50 - 25 = **25**\n- **New Current Number:** 25\n\n---\n\n#### Turn 3: Player 1\n\n- **Current Number:** 25\n- **Proper Divisors (excluding 1 and 25):** 5\n- **Player 1's Move:**\n  - Chooses to subtract **5**.\n  - Calculation: 25 - 5 = **20**\n- **New Current Number:** 20\n\n---\n\n#### Turn 4: Player 2\n\n- **Current Number:** 20\n- **Proper Divisors (excluding 1 and 20):** 2, 4, 5, 10\n- **Player 2's Move:**\n  - Chooses to subtract **10**.\n  - Calculation: 20 - 10 = **10**\n- **New Current Number:** 10\n\n---\n\n#### Turn 5: Player 1\n\n- **Current Number:** 10\n- **Proper Divisors (excluding 1 and 10):** 2, 5\n- **Player 1's Move:**\n  - Chooses to subtract **5**.\n  - Calculation: 10 - 5 = **5**\n- **New Current Number:** 5\n\n---\n\n#### Turn 6: Player 2\n\n- **Current Number:** 5\n- **Proper Divisors (excluding 1 and 5):** None (5 is prime)\n- **Player 2's Situation:**\n  - No valid moves available.\n  - **Player 2 loses the game.**\n\n---\n\n### Command-Line Interaction Example\n\nBelow is an example of how the game might look in a command-line interface:\n\n```\n--- Divisor Duel ---\n\nStarting Current Number: 100\n\nPlayer 1's turn.\nCurrent Number: 100\nAvailable Divisors: 2, 4, 5, 10, 20, 25, 50\nEnter the divisor to subtract: 50\nYou subtracted 50. New Current Number is 50.\n\nPlayer 2's turn.\nCurrent Number: 50\nAvailable Divisors: 2, 5, 10, 25\nEnter the divisor to subtract: 25\nYou subtracted 25. New Current Number is 25.\n\nPlayer 1's turn.\nCurrent Number: 25\nAvailable Divisors: 5\nEnter the divisor to subtract: 5\nYou subtracted 5. New Current Number is 20.\n\nPlayer 2's turn.\nCurrent Number: 20\nAvailable Divisors: 2, 4, 5, 10\nEnter the divisor to subtract: 10\nYou subtracted 10. New Current Number is 10.\n\nPlayer 1's turn.\nCurrent Number: 10\nAvailable Divisors: 2, 5\nEnter the divisor to subtract: 5\nYou subtracted 5. New Current Number is 5.\n\nPlayer 2's turn.\nCurrent Number: 5\nAvailable Divisors: None\nNo valid moves available. Player 2 loses!\nPlayer 1 wins the game!\n```\n\n---\n\n## Strategic Depth\n\nDivisor Duel, while simple to learn and program, offers strategic depth and complexity:\n\n- **Planning Ahead:**\n  - Players must consider the possible outcomes of their moves, anticipating the opponent's responses.\n\n- **Divisor Selection:**\n  - Choosing which proper divisor to subtract can alter the game's trajectory significantly.\n\n- **Prime Numbers:**\n  - Forcing the Current Number into a prime value can trap an opponent, leading to a strategic advantage.\n\n---\n\n## Conclusion\n\nDivisor Duel is an engaging and strategic game that challenges players to think critically about number properties and anticipate their opponent's moves. Its simplicity makes it easy to code and play in a command-line interface, while the strategic elements ensure that skilled players can consistently outperform unskilled ones. The game ends quickly and does not allow for draws, making it an excellent choice for a quick and competitive match between two players.\n\n---\n\nHappy playing!",
    "# Divisor Duel: Rule Book\n\n## Objective\n\n**Divisor Duel** is a strategic two-player turn-based game where the primary goal is to force your opponent into a position where they cannot make a valid move. Players take turns reducing a shared number by choosing its proper divisors. The player who reduces the number to 1, leaving the opponent with no valid moves, wins the game.\n\n## Setup\n\n- **Starting Number**: The game begins with a positive integer called the **Starting Number**. For a standard game, the Starting Number is **50**, but players can agree on any positive integer.\n- **Players**: Two players, referred to as **Player 1** and **Player 2**.\n\n## Game Components\n\n- **Shared Number (N)**: A positive integer that both players manipulate during the game. It starts at the Starting Number and decreases as the game progresses.\n- **Proper Divisors**: All positive integers that divide N evenly, excluding N itself.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with **Player 1**.\n- **Actions per Turn**:\n  1. **Determine Divisors**: Identify all proper divisors of the current shared number N.\n  2. **Choose Divisor**: Select one proper divisor to subtract from N.\n  3. **Update N**: Subtract the chosen divisor from N to get the new N.\n- The updated N becomes the shared number for the next player's turn.\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - On their turn, a player **must** choose a proper divisor of N.\n   - A proper divisor is any positive integer that divides N evenly, excluding N itself.\n2. **Subtracting the Divisor**:\n   - The chosen divisor is subtracted from N:  \n     New N = Current N - Chosen Divisor\n3. **Winning the Game**:\n   - If a player reduces N to **1** on their turn, leaving the opponent with no valid moves, that player **wins**.\n4. **Losing the Game**:\n   - If a player has no valid moves (i.e., N is 1 at the start of their turn), they **lose** the game.\n5. **No Skipping Turns**:\n   - Players cannot skip their turn; if a valid move exists, they must make one.\n6. **No Repetition**:\n   - Divisors can be reused in subsequent turns as long as they are valid for the current N.\n\n## Scoring\n\n- This game does not have a point-based scoring system.\n- **Victory Condition**: The player who forces the shared number N to 1 on their turn, leaving the opponent without a valid move, wins the game.\n- **Loss Condition**: A player loses if they start their turn when N is 1, leaving them with no valid moves.\n\n## Example Gameplay\n\n### Starting the Game\n\n- Starting Number (N): **50**\n- Players: **Player 1** and **Player 2**\n\n### Turn-by-Turn Play\n\n1. **Player 1's Turn**:\n   - **Current N**: 50\n   - **Proper Divisors of 50**: 1, 2, 5, 10, 25\n   - **Chosen Divisor**: 25\n   - **New N**: 50 - 25 = **25**\n\n2. **Player 2's Turn**:\n   - **Current N**: 25\n   - **Proper Divisors of 25**: 1, 5\n   - **Chosen Divisor**: 5\n   - **New N**: 25 - 5 = **20**\n\n3. **Player 1's Turn**:\n   - **Current N**: 20\n   - **Proper Divisors of 20**: 1, 2, 4, 5, 10\n   - **Chosen Divisor**: 10\n   - **New N**: 20 - 10 = **10**\n\n4. **Player 2's Turn**:\n   - **Current N**: 10\n   - **Proper Divisors of 10**: 1, 2, 5\n   - **Chosen Divisor**: 5\n   - **New N**: 10 - 5 = **5**\n\n5. **Player 1's Turn**:\n   - **Current N**: 5\n   - **Proper Divisors of 5**: 1\n   - **Chosen Divisor**: 1\n   - **New N**: 5 - 1 = **4**\n\n6. **Player 2's Turn**:\n   - **Current N**: 4\n   - **Proper Divisors of 4**: 1, 2\n   - **Chosen Divisor**: 2\n   - **New N**: 4 - 2 = **2**\n\n7. **Player 1's Turn**:\n   - **Current N**: 2\n   - **Proper Divisors of 2**: 1\n   - **Chosen Divisor**: 1\n   - **New N**: 2 - 1 = **1**\n\n8. **Player 2's Turn**:\n   - **Current N**: 1\n   - **No proper divisors** (since 1 has no divisors other than itself)\n   - **Player 2 Cannot Move**: N is 1, so Player 2 loses.\n   - **Winner**: **Player 1**\n\n### Command-Line Interaction Example\n\n- **Player 1's Turn**:\n  ```\n  Current N: 50\n  Proper divisors: 1, 2, 5, 10, 25\n  Choose a divisor to subtract from N: 25\n  New N is 25\n  ```\n\n- **Player 2's Turn**:\n  ```\n  Current N: 25\n  Proper divisors: 1, 5\n  Choose a divisor to subtract from N: 5\n  New N is 20\n  ```\n\n*(Subsequent turns follow the same pattern.)*\n\n## Strategic Tips\n\n- **Plan Ahead**: Anticipate your opponent's possible moves based on the new N you leave them with.\n- **Avoid Leaving Low N**: Try not to reduce N to a small number where your opponent can control the endgame.\n- **Force the Win**: Aim to reduce N to numbers where the available divisors work in your favor for the next turn.\n\n## Summary\n\n**Divisor Duel** is a simple yet strategic game that challenges players to think ahead and manipulate numbers. With straightforward rules and mechanics, it is easy to code and play in a command-line interface. The absence of chance elements ensures that skillful play is rewarded, allowing a proficient player to consistently triumph over a less experienced one. Enjoy the duel of wits and numbers!",
    "# Number Duel\n\n## Objective\n\nBe the first player to **capture all of your opponent's numbers**. Utilize strategic selection and timing to outmaneuver your opponent. Victory is achieved when your opponent has no numbers remaining in their set.\n\n---\n\n## Setup\n\n1. **Number Range Selection**:\n   - Determine the value of **N**, the maximum number in each player's set. A recommended starting value is **N = 10**.\n   \n2. **Initial Number Sets**:\n   - Each player receives a set of unique numbers ranging from **1 to N** inclusive.\n   - Example for **N = 10**:\n     - Player 1's Numbers: `{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}`\n     - Player 2's Numbers: `{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}`\n\n3. **Determine First Attacker**:\n   - Decide randomly or mutually agree on which player will take on the role of **attacker** in the first round.\n\n---\n\n## Game Components\n\n- **Number Sets**:\n  - Each player has their own set of numbers from **1 to N**.\n  - Numbers represent the strength of an **attack** or **defense**.\n  - Used numbers are **removed** from the player's set according to the game rules.\n\n- **Roles**:\n  - **Attacker**: The player initiating the challenge in a round.\n  - **Defender**: The player responding to the attack in a round.\n\n- **Captured Numbers**:\n  - Numbers that have been lost during the game and are no longer available for play.\n\n---\n\n## Turns\n\n1. **Round Structure**:\n   - The game proceeds in rounds, with each round consisting of:\n     - **Attacker's Turn**: The attacker selects a number to use for the attack.\n     - **Defender's Turn**: The defender selects a number to use for defense.\n   \n2. **Role Alternation**:\n   - After each round, roles switch:\n     - The previous defender becomes the new attacker.\n     - The previous attacker becomes the new defender.\n\n3. **Simultaneous Selection**:\n   - Both players select their numbers **privately and simultaneously**.\n   - Selections are revealed at the same time to ensure fairness.\n\n---\n\n## Rules and Mechanics\n\n### Number Selection\n\n- **Attacker**:\n  - Chooses any one number from their remaining set to initiate an attack.\n- **Defender**:\n  - Chooses any one number from their remaining set to defend against the attack.\n\n### Reveal and Outcome\n\n1. **Reveal**:\n   - Both players reveal their selected numbers simultaneously.\n\n2. **Outcome Determination**:\n   - **Attack Success**:\n     - If the attacker's number is **greater than** the defender's number, the attack is successful.\n   - **Defense Success**:\n     - If the defender's number is **greater than or equal to** the attacker's number, the defense is successful.\n\n### Number Resolution\n\n- **Successful Attack**:\n  - The defender's number is **captured** and removed from their set.\n  - The attacker's number **remains** in their set and can be used again.\n- **Successful Defense**:\n  - The attacker's number is **captured** and removed from their set.\n  - The defender's number **remains** in their set and can be used again.\n\n### Captured Numbers\n\n- **Removal**:\n  - Captured numbers are permanently removed from the game.\n- **Availability**:\n  - Remaining numbers can be reused in future rounds unless captured.\n\n### Victory Condition\n\n- **Winning the Game**:\n  - A player wins when their opponent has **no numbers remaining** in their set after the numbers have been resolved at the end of a round.\n\n### Special Cases\n\n- **Last Numbers Used**:\n  - If both players have only one number left and both numbers are captured in the same round, the **defender wins the game**.\n- **No Valid Moves**:\n  - If a player cannot select a number because they have none remaining at the start of their turn, they **lose the game**.\n\n---\n\n## Scoring\n\n- **Victory**:\n  - The winner is the player who captures all of their opponent's numbers.\n- **No Point System**:\n  - The game does not track points; victory is achieved through elimination.\n\n---\n\n## Examples\n\n### Example Game Setup\n\n- **N = 5**\n- **Player 1's Numbers**: `{1, 2, 3, 4, 5}`\n- **Player 2's Numbers**: `{1, 2, 3, 4, 5}`\n- **First Attacker**: Player 1\n\n### Round 1\n\n- **Player 1** (Attacker) selects **3**.\n- **Player 2** (Defender) selects **2**.\n- **Reveal**:\n  - Player 1: **3**\n  - Player 2: **2**\n- **Outcome**:\n  - 3 (Attacker) > 2 (Defender): Attack successful.\n  - **Player 2's number 2 is captured**.\n  - Player 1's number **3 remains** in their set.\n\n### Round 2\n\n- **Roles Switch**:\n  - **Player 2** becomes the Attacker.\n  - **Player 1** becomes the Defender.\n- **Player 2** (Attacker) selects **5**.\n- **Player 1** (Defender) selects **4**.\n- **Reveal**:\n  - Player 2: **5**\n  - Player 1: **4**\n- **Outcome**:\n  - 5 (Attacker) > 4 (Defender): Attack successful.\n  - **Player 1's number 4 is captured**.\n  - Player 2's number **5 remains** in their set.\n\n### Round 3\n\n- **Roles Switch**:\n  - **Player 1** becomes the Attacker.\n  - **Player 2** becomes the Defender.\n- **Player 1** (Attacker) selects **5**.\n- **Player 2** (Defender) selects **5**.\n- **Reveal**:\n  - Player 1: **5**\n  - Player 2: **5**\n- **Outcome**:\n  - 5 (Attacker) = 5 (Defender): Defense successful.\n  - **Player 1's number 5 is captured**.\n  - Player 2's number **5 remains** in their set.\n\n### Subsequent Rounds\n\n- Players continue alternating roles and selecting numbers strategically.\n- The game proceeds until one player has all their numbers captured.\n\n### Endgame Scenario\n\n- **Player 1** has remaining numbers: `{1, 2, 3}`\n- **Player 2** has remaining numbers: `{1, 3, 4, 5}`\n- If **Player 1** loses all remaining numbers, **Player 2 wins**.\n\n---\n\n## Command-Line Interactions\n\n### Sample Turn Interaction\n\n1. **Prompt for Number Selection**:\n   - Attacker's turn:\n     ```\n     [Attacker] Select your number from your remaining numbers {1, 2, 3}:\n     ```\n   - Defender's turn:\n     ```\n     [Defender] Select your number from your remaining numbers {1, 3, 4, 5}:\n     ```\n2. **Input Handling**:\n   - Players input their chosen numbers privately.\n   - Ensure inputs are valid and from the player's remaining set.\n3. **Reveal and Outcome Display**:\n   ```\n   Attacker selected: 3\n   Defender selected: 4\n   Outcome: Defense successful! Attacker's number 3 is captured.\n   ```\n4. **Update Remaining Numbers**:\n   - Display updated sets for each player.\n     ```\n     Attacker's remaining numbers: {1, 2}\n     Defender's remaining numbers: {1, 3, 4, 5}\n     ```\n5. **Role Switch Notice**:\n   ```\n   Roles have switched. It is now the Defender's turn to attack.\n   ```\n\n### Game End\n\n- When a player has no numbers remaining:\n  ```\n  Player 1 has no numbers left. Player 2 wins the game!\n  ```\n\n---\n\n## Strategic Tips\n\n- **Predict Opponent's Moves**:\n  - Pay attention to the numbers your opponent has used and which ones remain.\n- **Conserve High Numbers**:\n  - Save your higher numbers for critical moments or when defending against expected strong attacks.\n- **Bluffing**:\n  - Use lower numbers when you suspect your opponent might use a lower number, conserving higher numbers for future rounds.\n- **Role Strategy**:\n  - Adjust your strategy based on whether you're the attacker or defender. Defenders have the advantage when numbers are equal.\n\n---\n\n## Additional Notes\n\n- **Game Variations**:\n  - For a shorter game, use a smaller N (e.g., N = 5).\n  - For more complexity, increase N or introduce special numbers with unique properties.\n  \n- **Fair Play**:\n  - Ensure that both players cannot see each other's selections until both have made their choices.\n\n- **Game Balance**:\n  - The rules are designed to prevent draws and ensure that skillful play leads to victory.\n\n---\n\nEnjoy the challenge of the **Number Duel** and may the best strategist win!",
    "# Token Sprint: Rule Book\n\n## Objective\n\n**Token Sprint** is a competitive two-player turn-based game where each player aims to be the first to reach the end of a numbered path. The primary goal is to strategically move your token along the path to land exactly on the final position, **Position 20**, before your opponent does. Careful planning is required to navigate skip-turn positions and outmaneuver your opponent.\n\n---\n\n## Setup\n\n### Game Board\n\n- **Path Length**: A linear path consisting of positions numbered from **1** to **20**.\n- **Starting Position**: Both players begin off the path at **Position 0**.\n\n### Players\n\n- **Player Tokens**: Each player has a unique token to represent their position on the path.\n  - **Player 1**: Token `\"X\"`\n  - **Player 2**: Token `\"O\"`\n\n### Starting the Game\n\n- Decide which player will take the first turn. This can be determined by mutual agreement or a simple random method (e.g., coin toss).\n\n---\n\n## Game Components\n\n- **Path Positions**: Numbers **1** through **20**, representing the steps along the path.\n- **Player Tokens**: Symbols representing each player on the path.\n  - Tokens are moved forward along the path according to the rules.\n\n---\n\n## Turns\n\n- Players take turns alternately.\n- **Turn Structure**:\n  1. **Movement Phase**: The player moves their token forward by **1**, **2**, or **3** positions.\n  2. **Skip Mechanic**: If the player lands on a skip-turn position, they will miss their next turn.\n\n- **Skip-Turn Positions**:\n  - Positions that are **multiples of 5** (**5, 10, 15, 20**).\n  - Landing on these positions triggers the skip mechanic.\n\n---\n\n## Rules and Mechanics\n\n### Movement Rules\n\n1. **Moving the Token**:\n   - On your turn, choose to move your token forward by **1**, **2**, or **3** positions.\n   - Movement must be within the path boundaries (Positions **1** to **20**).\n\n2. **Exact Landing Required to Win**:\n   - To win, you must land **exactly** on **Position 20**.\n   - If you cannot move exactly to Position 20 on your turn, you must choose a smaller move or forfeit the move if no valid options exist.\n\n### Skip-Turn Mechanic\n\n- **Triggering a Skip**:\n  - If you land on a skip-turn position (**5, 10, 15, 20**), you **skip your next turn**.\n- **Consecutive Skips**:\n  - Skipping turns can accumulate. If a player lands on multiple skip-turn positions consecutively (e.g., by opponent's missed turns), they skip the corresponding number of future turns.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - The first player to move their token to **Position 20** wins the game.\n- **Invalid Moves**:\n  - If a player cannot make a valid move without overshooting Position 20, they must pass their turn.\n\n### Additional Rules\n\n- **Passing Turns**:\n  - If no valid moves are available (e.g., all options overshoot Position 20), the player must pass, and the turn goes to the opponent.\n- **Skip Overrides Pass**:\n  - If a player is supposed to skip a turn but has no valid moves, the skip is consumed, and play proceeds to the other player.\n\n---\n\n## Scoring\n\n- **Winning**:\n  - The player who reaches Position 20 first is declared the winner.\n- **No Point System**:\n  - There is no cumulative scoring; each game is a standalone contest to reach Position 20.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Initial State\n\n- **Player Positions**: Player 1 (`X`) at Position 0, Player 2 (`O`) at Position 0.\n- **Player 1** begins the game.\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**:\n   - Moves **3** steps to Position **3**.\n   - **Position**: Player 1 at Position 3.\n\n2. **Player 2's Turn**:\n   - Moves **2** steps to Position **2**.\n   - **Position**: Player 2 at Position 2.\n\n3. **Player 1's Turn**:\n   - Moves **2** steps to Position **5** (skip-turn position).\n   - **Position**: Player 1 at Position 5.\n   - **Skip**: Player 1 will skip their next turn.\n\n4. **Player 2's Turn**:\n   - Moves **3** steps to Position **5** (skip-turn position).\n   - **Position**: Player 2 at Position 5.\n   - **Skip**: Player 2 will skip their next turn.\n\n5. **Player 1's Turn**:\n   - **Skipped** due to landing on Position 5.\n\n6. **Player 2's Turn**:\n   - **Skipped** due to landing on Position 5.\n\n7. **Player 1's Turn**:\n   - Moves **3** steps to Position **8**.\n   - **Position**: Player 1 at Position 8.\n\n8. **Player 2's Turn**:\n   - Moves **2** steps to Position **7**.\n   - **Position**: Player 2 at Position 7.\n\n9. **Player 1's Turn**:\n   - Moves **2** steps to Position **10** (skip-turn position).\n   - **Position**: Player 1 at Position 10.\n   - **Skip**: Player 1 will skip their next turn.\n\n10. **Player 2's Turn**:\n    - Moves **3** steps to Position **10** (skip-turn position).\n    - **Position**: Player 2 at Position 10.\n    - **Skip**: Player 2 will skip their next turn.\n\n11. **Player 1's Turn**:\n    - **Skipped** due to landing on Position 10.\n\n12. **Player 2's Turn**:\n    - **Skipped** due to landing on Position 10.\n\n13. **Player 1's Turn**:\n    - Attempts to move **3** steps to Position **13**.\n    - **Position**: Player 1 at Position 13.\n\n14. **Player 2's Turn**:\n    - Moves **2** steps to Position **12**.\n    - **Position**: Player 2 at Position 12.\n\n15. **Player 1's Turn**:\n    - Moves **2** steps to Position **15** (skip-turn position).\n    - **Position**: Player 1 at Position 15.\n    - **Skip**: Player 1 will skip their next turn.\n\n16. **Player 2's Turn**:\n    - Moves **3** steps to Position **15** (skip-turn position).\n    - **Position**: Player 2 at Position 15.\n    - **Skip**: Player 2 will skip their next turn.\n\n17. **Player 1's Turn**:\n    - **Skipped** due to landing on Position 15.\n\n18. **Player 2's Turn**:\n    - **Skipped** due to landing on Position 15.\n\n19. **Player 1's Turn**:\n    - Moves **1** step to Position **16**.\n    - **Position**: Player 1 at Position 16.\n\n20. **Player 2's Turn**:\n    - Moves **3** steps to Position **18**.\n    - **Position**: Player 2 at Position 18.\n\n21. **Player 1's Turn**:\n    - Moves **3** steps but cannot move to Position **19** (would need to move beyond Position 20).\n    - Moves **1** step to Position **17**.\n    - **Position**: Player 1 at Position 17.\n\n22. **Player 2's Turn**:\n    - Moves **2** steps to Position **20**.\n    - **Position**: Player 2 at Position 20.\n    - **Victory**: Player 2 wins the game by landing exactly on Position 20.\n\n---\n\n## Command-Line Interaction Sample\n\nBelow is a sample interaction illustrating how the game might be played in a command-line interface.\n\n### Game Start\n\n```\nWelcome to Token Sprint!\n\nPlayer 1 (X) and Player 2 (O) are at Position 0.\n\nPlayer 1's turn.\nEnter move (1, 2, or 3): 3\nPlayer 1 moves to Position 3.\n\nPlayer 2's turn.\nEnter move (1, 2, or 3): 2\nPlayer 2 moves to Position 2.\n\nPlayer 1's turn.\nEnter move (1, 2, or 3): 2\nPlayer 1 moves to Position 5.\nPlayer 1 landed on a skip-turn position and will miss the next turn.\n\nPlayer 2's turn.\nEnter move (1, 2, or 3): 3\nPlayer 2 moves to Position 5.\nPlayer 2 landed on a skip-turn position and will miss the next turn.\n\nPlayer 1's turn is skipped.\n\nPlayer 2's turn is skipped.\n\nPlayer 1's turn.\nEnter move (1, 2, or 3): 3\nPlayer 1 moves to Position 8.\n\nPlayer 2's turn.\nEnter move (1, 2, or 3): 2\nPlayer 2 moves to Position 7.\n\n... (additional turns)\n\nPlayer 2's turn.\nEnter move (1, 2, or 3): 2\nPlayer 2 moves to Position 20.\nCongratulations! Player 2 wins the game!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**: Anticipate the consequences of landing on skip-turn positions. Sometimes it's advantageous to land on them to control the flow of the game.\n- **Count Remaining Spaces**: Keep track of the number of positions left to Position 20 to avoid overshooting.\n- **Force Opponent's Moves**: Position yourself to limit your opponent's options, potentially forcing them into unfavorable moves.\n\n---\n\n## Conclusion\n\n**Token Sprint** is a simple yet strategic game that can be easily played in a command-line environment. It emphasizes forward-thinking and planning, providing a quick and engaging experience where skill prevails over chance.\n\nEnjoy the race to Position 20, and may the best strategist win!",
    "# Operation Reach\n\n## Objective\n\nBe the first player to reach the **target number** exactly by strategically applying mathematical operations to a shared **current number**. Avoid exceeding the target number, as doing so results in an immediate loss.\n\n## Setup\n\n1. **Current Number**: Start with an initial number, typically **1**.\n2. **Target Number**: Agree upon a target number that players aim to reach, such as **31**.\n3. **Allowed Operations**: Decide on a set of mathematical operations that can be used during the game. For example:\n   - Addition: **`+1`**, **`+2`**, **`+3`**\n   - Multiplication: **`x2`**\n\n## Game Components\n\n- **Current Number**: A shared integer that is updated each turn based on players' actions.\n- **Target Number**: The predetermined integer that players aim to reach exactly.\n- **Allowed Operations**: The mathematical operations that players can apply to the current number. These are consistent throughout the game.\n- **Players**: Two players who alternate turns.\n\n## Turns\n\n- **Turn Structure**:\n  1. The active player selects one operation from the allowed operations.\n  2. They apply this operation to the current number.\n  3. The result becomes the new current number.\n  4. The turn passes to the other player.\n\n- **Order of Play**: Players decide who goes first (e.g., by coin toss or mutual agreement) and then alternate turns.\n\n## Rules and Mechanics\n\n1. **Applying Operations**:\n   - On their turn, a player must choose **one** of the allowed operations.\n   - The chosen operation is applied to the current number to generate a new current number.\n\n2. **Winning the Game**:\n   - The player who reaches the target number **exactly** wins the game.\n\n3. **Exceeding the Target**:\n   - If a player's move results in the current number exceeding the target number, that player **loses** immediately.\n\n4. **Allowed Operations**:\n   - Only the predefined operations agreed upon at the start may be used.\n   - Players cannot skip their turn or pass; an operation must be applied each turn.\n\n5. **Gameplay Limitations**:\n   - Players cannot perform more than one operation per turn.\n   - Modifying the operations or current number outside of the allowed mechanics is prohibited.\n\n6. **No Draws**:\n   - The game cannot end in a draw due to the rules governing exceeding the target number.\n\n## Scoring\n\n- **Victory Condition**:\n  - **Win**: Achieved by reaching the target number exactly.\n  - **Loss**: Occurs if a player's move causes the current number to exceed the target number.\n\n- **Tracking Progress**:\n  - The current number is updated and announced after each turn.\n  - Players should keep track of the sequence of moves to plan strategically.\n\n## Examples\n\n### Example Game\n\n**Settings**:\n- Current Number: **1**\n- Target Number: **31**\n- Allowed Operations: **`+1`**, **`+2`**, **`+3`**, **`x2`**\n\n**Players**: Player 1 and Player 2\n\n---\n\n#### Turn 1\n\n- **Player 1's Turn**:\n  - Current Number: **1**\n  - Chooses operation: **`+3`**\n  - Calculation: **1 + 3 = 4**\n  - New Current Number: **4**\n\n#### Turn 2\n\n- **Player 2's Turn**:\n  - Current Number: **4**\n  - Chooses operation: **`x2`**\n  - Calculation: **4 x 2 = 8**\n  - New Current Number: **8**\n\n#### Turn 3\n\n- **Player 1's Turn**:\n  - Current Number: **8**\n  - Chooses operation: **`+3`**\n  - Calculation: **8 + 3 = 11**\n  - New Current Number: **11**\n\n#### Turn 4\n\n- **Player 2's Turn**:\n  - Current Number: **11**\n  - Chooses operation: **`x2`**\n  - Calculation: **11 x 2 = 22**\n  - New Current Number: **22**\n\n#### Turn 5\n\n- **Player 1's Turn**:\n  - Current Number: **22**\n  - Chooses operation: **`+3`**\n  - Calculation: **22 + 3 = 25**\n  - New Current Number: **25**\n\n#### Turn 6\n\n- **Player 2's Turn**:\n  - Current Number: **25**\n  - Chooses operation: **`+3`**\n  - Calculation: **25 + 3 = 28**\n  - New Current Number: **28**\n\n#### Turn 7\n\n- **Player 1's Turn**:\n  - Current Number: **28**\n  - Chooses operation: **`+3`**\n  - Calculation: **28 + 3 = 31**\n  - New Current Number: **31**\n\n**Result**: **Player 1 wins** by reaching the target number exactly.\n\n---\n\n### Command-Line Interaction Example\n\n```\nGame Start:\nCurrent Number: 1\nTarget Number: 31\nAllowed Operations: +1, +2, +3, x2\n------------------------------------\n\nPlayer 1's Turn:\nCurrent Number: 1\nChoose an operation to apply (+1, +2, +3, x2): +3\nYou chose: +3\nNew Current Number: 4\n\n------------------------------------\n\nPlayer 2's Turn:\nCurrent Number: 4\nChoose an operation to apply (+1, +2, +3, x2): x2\nYou chose: x2\nNew Current Number: 8\n\n------------------------------------\n\nPlayer 1's Turn:\nCurrent Number: 8\nChoose an operation to apply (+1, +2, +3, x2): +3\nYou chose: +3\nNew Current Number: 11\n\n------------------------------------\n\nPlayer 2's Turn:\nCurrent Number: 11\nChoose an operation to apply (+1, +2, +3, x2): x2\nYou chose: x2\nNew Current Number: 22\n\n------------------------------------\n\nPlayer 1's Turn:\nCurrent Number: 22\nChoose an operation to apply (+1, +2, +3, x2): +3\nYou chose: +3\nNew Current Number: 25\n\n------------------------------------\n\nPlayer 2's Turn:\nCurrent Number: 25\nChoose an operation to apply (+1, +2, +3, x2): +3\nYou chose: +3\nNew Current Number: 28\n\n------------------------------------\n\nPlayer 1's Turn:\nCurrent Number: 28\nChoose an operation to apply (+1, +2, +3, x2): +3\nYou chose: +3\nNew Current Number: 31\n\n------------------------------------\n\nCongratulations, Player 1! You have reached the target number 31 and won the game!\n```\n\n## Strategic Considerations\n\n- **Anticipate Opponent Moves**: Think ahead about how your operation will affect the current number and what options it will leave for your opponent.\n- **Control the Game Flow**: Use multiplication to make large jumps when advantageous, but be cautious not to overshoot the target.\n- **Force the Opponent's Hand**: Set the current number such that the opponent has limited safe operations, increasing the chance they might exceed the target.\n- **Avoid Risky Moves**: As the current number approaches the target, prefer smaller additions to fine-tune your position.\n\n## Additional Variations\n\n- **Varying the Target Number**: Changing the target number can adjust the game's difficulty and length.\n- **Changing Allowed Operations**: Modify the set of allowed operations to include subtraction or division for added complexity.\n- **Multiple Rounds**: Play a series of rounds with different target numbers and operations, keeping score over time.\n\n## Conclusion\n\n**Operation Reach** is a simple yet strategic game that challenges players to think ahead and make calculated moves. Easy to implement in a command-line interface, it provides quick gameplay with clear win conditions, ensuring that a skilled player can consistently outperform an unskilled opponent.\n\nEnjoy the challenge and may the best strategist win!",
    "# Stone Pile Battle\n\n## Objective\n\n**Stone Pile Battle** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to be the first player to reduce your opponent's stone pile to zero. Players must carefully choose actions that deplete their opponent's stones while managing their own pile. The game ends when one player's stone pile reaches zero, resulting in their loss and the opponent's victory.\n\n## Setup\n\n- **Initial Stone Piles**: Each player starts with a pile of **15 stones**.\n- **Player Identification**: Decide who will be **Player 1** and **Player 2**. This can be determined by mutual agreement or a random method.\n- **Starting Player**: Player 1 takes the first turn.\n\n## Game Components\n\n- **Stone Piles**: Two separate counts representing each player's stones.\n  - **Player 1's Stone Pile**: Starts at 15 stones.\n  - **Player 2's Stone Pile**: Starts at 15 stones.\n- **Actions**: Options available to players on their turn.\n  - **Transfer Actions**: Strategies to manipulate stone counts.\n\n## Turns\n\n- Players alternate turns, starting with **Player 1**.\n- During a turn, a player must perform **one** of the allowed actions.\n- After the action is completed, the turn passes to the other player.\n\n## Rules and Mechanics\n\n### Allowed Actions\n\nOn your turn, you may choose **one** of the following actions:\n\n1. **Self-Reduce and Transfer to Opponent**:\n   - **Remove** 1, 2, or 3 stones from **your own** pile.\n   - **Add** half (rounded down) of the removed stones to your opponent's pile.\n   - **Example**:\n     - Remove 3 stones from your pile.\n     - Add ⎣3 / 2⎦ = 1 stone to your opponent's pile.\n\n2. **Attack Opponent's Pile and Steal Stones**:\n   - **Remove** 1, 2, or 3 stones from your **opponent's** pile.\n   - **Add** half (rounded down) of the removed stones to **your own** pile.\n   - **Example**:\n     - Remove 2 stones from opponent's pile.\n     - Add ⎣2 / 2⎦ = 1 stone to your own pile.\n\n### Additional Rules\n\n- **Stone Removal Limits**:\n  - You cannot remove more stones than are available in the pile you're targeting.\n  - If the pile has fewer stones than the maximum allowed removal (3), you may only remove up to the number of stones remaining.\n- **No Negative Stones**:\n  - Stone piles cannot have negative values. Ensure that stone counts remain zero or positive after each action.\n- **Game End Condition**:\n  - The game ends immediately when **one player's stone pile reaches zero** at the end of any turn.\n  - The player with zero stones **loses** the game.\n\n## Scoring\n\n- **Victory**: Achieved by reducing your opponent's stone pile to zero.\n- **Loss**: Occurs when your stone pile reaches zero.\n- **No Draws**: The game cannot end in a draw; there is always a winner and a loser.\n\n## Examples\n\nBelow are example scenarios with command-line interactions to illustrate how the game is played.\n\n### Example Game\n\n#### Initial State\n\n- **Player 1's Stone Pile**: 15 stones\n- **Player 2's Stone Pile**: 15 stones\n\n#### Turn-by-Turn Breakdown\n\n---\n\n**Player 1's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 2's pile (15 - 3 = 12).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 1's pile (15 + 1 = 16).\n- **Result**:\n  - **Player 1's Stone Pile**: 16 stones\n  - **Player 2's Stone Pile**: 12 stones\n\n**Command-Line Interaction**:\n```\nPlayer 1's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 2 and gained 1 stone.\n```\n\n---\n\n**Player 2's Turn**\n\n- **Action**: Self-reduce and transfer to opponent.\n- **Stones to Remove**: 2\n- **Calculation**:\n  - Remove 2 stones from Player 2's pile (12 - 2 = 10).\n  - Add ⎣2 / 2⎦ = 1 stone to Player 1's pile (16 + 1 = 17).\n- **Result**:\n  - **Player 1's Stone Pile**: 17 stones\n  - **Player 2's Stone Pile**: 10 stones\n\n**Command-Line Interaction**:\n```\nPlayer 2's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 1\nEnter number of stones to remove from your own pile (1-3): 2\nYou removed 2 stones from your pile and transferred 1 stone to Player 1.\n```\n\n---\n\n**Player 1's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 2's pile (10 - 3 = 7).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 1's pile (17 + 1 = 18).\n- **Result**:\n  - **Player 1's Stone Pile**: 18 stones\n  - **Player 2's Stone Pile**: 7 stones\n\n**Command-Line Interaction**:\n```\nPlayer 1's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 2 and gained 1 stone.\n```\n\n---\n\n**Player 2's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 1's pile (18 - 3 = 15).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 2's pile (7 + 1 = 8).\n- **Result**:\n  - **Player 1's Stone Pile**: 15 stones\n  - **Player 2's Stone Pile**: 8 stones\n\n**Command-Line Interaction**:\n```\nPlayer 2's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 1 and gained 1 stone.\n```\n\n---\n\n**Player 1's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 2's pile (8 - 3 = 5).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 1's pile (15 + 1 = 16).\n- **Result**:\n  - **Player 1's Stone Pile**: 16 stones\n  - **Player 2's Stone Pile**: 5 stones\n\n**Command-Line Interaction**:\n```\nPlayer 1's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 2 and gained 1 stone.\n```\n\n---\n\n**Player 2's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 1's pile (16 - 3 = 13).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 2's pile (5 + 1 = 6).\n- **Result**:\n  - **Player 1's Stone Pile**: 13 stones\n  - **Player 2's Stone Pile**: 6 stones\n\n**Command-Line Interaction**:\n```\nPlayer 2's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 1 and gained 1 stone.\n```\n\n---\n\n**Player 1's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 2's pile (6 - 3 = 3).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 1's pile (13 + 1 = 14).\n- **Result**:\n  - **Player 1's Stone Pile**: 14 stones\n  - **Player 2's Stone Pile**: 3 stones\n\n**Command-Line Interaction**:\n```\nPlayer 1's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 2 and gained 1 stone.\n```\n\n---\n\n**Player 2's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 1's pile (14 - 3 = 11).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 2's pile (3 + 1 = 4).\n- **Result**:\n  - **Player 1's Stone Pile**: 11 stones\n  - **Player 2's Stone Pile**: 4 stones\n\n**Command-Line Interaction**:\n```\nPlayer 2's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 1 and gained 1 stone.\n```\n\n---\n\n**Player 1's Turn**\n\n- **Action**: Attack opponent's pile.\n- **Stones to Remove**: 3\n- **Calculation**:\n  - Remove 3 stones from Player 2's pile (4 - 3 = 1).\n  - Add ⎣3 / 2⎦ = 1 stone to Player 1's pile (11 + 1 = 12).\n- **Result**:\n  - **Player 1's Stone Pile**: 12 stones\n  - **Player 2's Stone Pile**: 1 stone\n\n**Command-Line Interaction**:\n```\nPlayer 1's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 2\nEnter number of stones to remove from opponent's pile (1-3): 3\nYou removed 3 stones from Player 2 and gained 1 stone.\n(Note: Since Player 2 only had 4 stones, you could only remove up to 3 stones.)\n```\n\n---\n\n**Player 2's Turn**\n\n- **Action**: Self-reduce and transfer to opponent.\n- **Stones to Remove**: 1\n- **Calculation**:\n  - Remove 1 stone from Player 2's pile (1 - 1 = 0).\n  - Add ⎣1 / 2⎦ = 0 stones to Player 1's pile (no change).\n- **Result**:\n  - **Player 1's Stone Pile**: 12 stones\n  - **Player 2's Stone Pile**: 0 stones\n- **Game Over**: Player 2's stone pile has reached zero.\n\n**Command-Line Interaction**:\n```\nPlayer 2's turn.\nChoose action:\n1. Remove stones from your pile and transfer to opponent.\n2. Remove stones from opponent's pile and add to your own.\nEnter choice (1 or 2): 1\nEnter number of stones to remove from your own pile (1-3): 1\nYou removed 1 stone from your pile and transferred 0 stones to Player 1.\nPlayer 2's stone pile has reached zero.\nPlayer 1 wins!\n```\n\n---\n\n### Strategic Considerations\n\n- **Balancing Attacks and Defense**: Players must decide when to deplete their opponent's stones and when to manage their own pile.\n- **Predicting Opponent's Moves**: Anticipate how your opponent might respond to your actions to plan effectively.\n- **Resource Management**: Keep an eye on both stone piles to avoid unintended consequences.\n\n## Conclusion\n\n**Stone Pile Battle** is a simple yet strategic game that tests players' ability to manage resources and anticipate their opponent's moves. With straightforward rules and quick gameplay, it's easy to code and play in a command-line interface. The game's mechanics ensure that there are no draws, and skillful play will consistently lead to victory over less experienced opponents.\n\nPlayers are encouraged to think critically about each move and consider the long-term effects on both their own and their opponent's stone piles. Enjoy the challenge and may the best strategist win!\n\n---\n\nFeel free to customize the game's starting conditions or rules to introduce new strategic elements or adjust the difficulty level. Have fun battling!",
    "**Game Name: Number Stack Battle**\n\n---\n\n### **Objective**\n\nOutscore your opponent by strategically building your own number stack while managing your opponent's stack. The player with the highest total sum after deductions wins the game.\n\n---\n\n### **Setup**\n\n- **Deck Creation**: Create a deck of numbered cards from **1 to 10**, with each number appearing **twice** (a total of **20 cards**). Shuffle the deck thoroughly.\n- **Player Areas**: Designate individual stack areas for each player where they will place their cards during the game.\n- **Starting the Game**: Decide who will take the first turn (e.g., flip a coin or have the youngest player start).\n\n---\n\n### **Game Components**\n\n- **Deck of Cards**:\n  - **Numbers**: Cards are numbered from **1** to **10**.\n  - **Quantity**: Each number appears **twice**, making a total of **20 cards**.\n  - **Appearance**: Cards display their number clearly for easy recognition.\n- **Player Stacks**:\n  - Each player has a personal stack area where they will place cards during the game.\n  - Stacks are visible to both players, with the top card being the most recently placed.\n\n---\n\n### **Turns**\n\nPlayers alternate turns throughout the game.\n\n**Structure of a Turn**:\n\n1. **Draw a Card**:\n   - The player draws the top card from the draw pile.\n   - The drawn card is revealed to both players.\n2. **Decide Placement**:\n   - The player must choose to place the card either:\n     - On **their own stack**.\n     - On their **opponent's stack**.\n3. **Place the Card**:\n   - The card is placed on top of the chosen player's stack.\n   - Once placed, the decision cannot be changed.\n4. **End of Turn**:\n   - The turn ends, and it becomes the other player's turn.\n\n---\n\n### **Rules and Mechanics**\n\n#### **Core Rules**\n\n- **Card Placement**:\n  - The drawn card must be placed immediately after drawing.\n  - Players cannot skip their turn or hold onto cards.\n- **Visibility**:\n  - All cards in both stacks are visible to both players at all times.\n  - The order of cards in the stacks matters for strategic planning.\n- **Deck Depletion**:\n  - The game continues until all cards have been drawn and placed.\n- **Card Effects**:\n  - **Number 5 Penalty**:\n    - For every **5** in a player's stack, **subtract 5 points** from their total score at the end of the game.\n\n#### **Winning the Game**\n\n- **Scoring**:\n  - At the end of the game, each player calculates their score by:\n    - **Adding up** all the numbers in their stack.\n    - **Subtracting** **5 points** for each **number 5** in their stack.\n- **Victory Condition**:\n  - The player with the **higher total score** after deductions **wins**.\n- **Tie-Breaker**:\n  - If scores are equal, the player with **fewer number 5s** in their stack wins.\n  - If still tied, proceed to **Sudden Death** (see below).\n\n---\n\n### **Scoring**\n\n- **Total Score Formula**:\n  - **Total Score** = (Sum of all numbers in the stack) - (Number of 5s × 5)\n- **Example Calculation**:\n  - If a player's stack has cards: 7, 5, 3, 9\n    - Sum of numbers: 7 + 5 + 3 + 9 = 24\n    - Number of 5s: 1\n    - Penalty: 1 × 5 = 5\n    - **Total Score**: 24 - 5 = 19\n\n---\n\n### **Examples**\n\n#### **Example Game Play**\n\n1. **Turn 1**:\n   - **Player 1** draws a **7**.\n     - Chooses to place it on their **own stack**.\n   - **Player 1's Stack**: 7\n2. **Turn 2**:\n   - **Player 2** draws a **5**.\n     - Chooses to place it on **Player 1's stack** to impose a penalty.\n   - **Player 1's Stack**: 5 (top), 7\n3. **Turn 3**:\n   - **Player 1** draws a **3**.\n     - Chooses to place it on their **own stack**.\n   - **Player 1's Stack**: 3 (top), 5, 7\n4. **Turn 4**:\n   - **Player 2** draws a **9**.\n     - Chooses to place it on their **own stack**.\n   - **Player 2's Stack**: 9\n5. **...Game continues until all cards are drawn and placed...**\n\n#### **End of Game Scoring**\n\n- **Player 1's Stack**: 2, 3, 5, 7\n  - Sum: 2 + 3 + 5 + 7 = 17\n  - Penalties: 1 number 5\n  - Total Score: 17 - 5 = **12**\n- **Player 2's Stack**: 4, 6, 8, 9\n  - Sum: 4 + 6 + 8 + 9 = 27\n  - Penalties: 0\n  - Total Score: 27 - 0 = **27**\n- **Winner**: Player 2\n\n---\n\n### **Sudden Death**\n\nIf there is a tie after applying the tie-breaker:\n\n- **Setup**:\n  - Collect all the **number 5 cards** used in the game.\n  - Shuffle them to form a new draw pile.\n- **Rules**:\n  - Players take turns drawing and placing cards following the standard rules.\n  - The game continues until the tie is broken.\n- **Victory Condition**:\n  - The first player to cause their opponent to have more penalties (additional number 5s) loses.\n\n---\n\n### **Strategic Tips**\n\n- **High-Value Cards**:\n  - Place high numbers (e.g., 8, 9, 10) on your **own stack** to boost your score.\n- **Penalty Cards (Number 5s)**:\n  - Place **5s** on your **opponent's stack** to reduce their score.\n- **Low-Value Cards**:\n  - Consider placing low numbers on your **opponent's stack** to clutter it with low points.\n- **Anticipate Opponent's Moves**:\n  - Keep track of which cards have been played.\n  - Predict which cards your opponent might draw next.\n\n---\n\n### **Command-Line Interaction Examples**\n\n#### **Game Start**\n\n```\nWelcome to Number Stack Battle!\nPlayer 1 and Player 2 are ready to begin.\nPlayer 1 will take the first turn.\n```\n\n#### **Example Turn**\n\n**Player 1's Turn**:\n\n```\nPlayer 1, it's your turn.\nYou draw a card... It's a '9'.\nDo you want to place this card on your 'own' stack or your 'opponent's' stack?\nType 'own' or 'opponent':\n> own\nYou placed '9' on your own stack.\n```\n\n**Player 2's Turn**:\n\n```\nPlayer 2, it's your turn.\nYou draw a card... It's a '5'.\nDo you want to place this card on your 'own' stack or your 'opponent's' stack?\nType 'own' or 'opponent':\n> opponent\nYou placed '5' on Player 1's stack.\n```\n\n#### **End of Game**\n\n```\nAll cards have been played!\nCalculating final scores...\n\nPlayer 1's Stack: 5, 9\nTotal before penalties: 14\nPenalties (Number of 5s x 5): 1 x 5 = 5\nFinal Score: 14 - 5 = 9\n\nPlayer 2's Stack: 7, 8\nTotal before penalties: 15\nPenalties (Number of 5s x 5): 0 x 5 = 0\nFinal Score: 15 - 0 = 15\n\nCongratulations, Player 2! You win with a score of 15 to 9.\n```\n\n---\n\n### **Game Summary**\n\nNumber Stack Battle is a quick and engaging two-player game where strategy and foresight are key. Players must decide each turn whether to boost their own score or hinder their opponent's chances. The inclusion of penalty cards (number 5s) adds a layer of complexity, requiring players to think carefully about the impact of each move. With simple rules and a clear objective, it's easy to learn but offers depth for those seeking a strategic challenge.\n\nEnjoy the battle of numbers, and may the best strategist win!",
    "# Game Name: Double Up\n\n## Objective\n\nThe objective of **Double Up** is to be the last player able to make a valid move by strategically selecting numbers to build a sequence without repeating numbers. Players take turns adding numbers to a shared sequence, aiming to force their opponent into a position where they cannot make a valid selection according to the game's rules.\n\n## Setup\n\n- **Starting Number**: The game begins with the number **1** as the initial element in the sequence.\n- **Sequence List**: A list that records all numbers chosen during the game. Initially, it contains only the starting number `[1]`.\n- **Players**: Two players participate, alternating turns throughout the game.\n\n## Game Components\n\n- **Sequence List**: A shared list that tracks the sequence of numbers selected by the players.\n- **Numbers Used**: A record of all numbers that have been selected to prevent repetition.\n- **Players**: Identified as **Player 1** and **Player 2**, they take turns according to the game's rules.\n\n## Turns\n\n- Players alternate turns, starting with **Player 1**.\n- On their turn, a player must select a valid number based on the rules and add it to the sequence.\n\n## Rules and Mechanics\n\n### 1. Number Selection Rules\n\nOn your turn, you must select a number (**M**) that satisfies all the following conditions:\n\n- **Condition A**: **M** is greater than the last number in the sequence (**N**).\n  - **M > N**\n- **Condition B**: **M** is less than or equal to twice the last number in the sequence.\n  - **M ≤ 2 × N**\n- **Condition C**: **M** has not been previously selected in the sequence.\n  - **M** is not in the **Numbers Used** list.\n\n### 2. Updating the Sequence\n\n- Add the chosen number **M** to the end of the **Sequence List**.\n- Update the **Numbers Used** list to include **M**.\n- Announce your selected number and display the updated sequence to your opponent.\n\n### 3. Winning the Game\n\n- **Cannot Make a Valid Move**: If a player cannot select any valid number on their turn (due to all possible options being previously used or no numbers satisfying the conditions), they lose the game.\n- **Victory**: The last player to make a valid move wins the game.\n\n## Scoring\n\n- **Win**: The player who forces their opponent into a position with no valid moves wins the game.\n- **No Draws**: The game cannot end in a draw; there is always a clear winner.\n\n## Examples\n\nBelow are sample turns to illustrate how the game is played:\n\n### Example Game\n\n**Initial State**:\n- Sequence: `[1]`\n- Numbers Used: `{1}`\n\n---\n\n**Player 1's Turn**:\n- **Last Number (N)**: 1\n- **Valid Numbers (M)**: Greater than 1 and less than or equal to 2 (2 × 1)\n  - Valid options: `2`\n- **Selection**: Player 1 chooses **2**\n- **Sequence Updated**: `[1, 2]`\n- **Numbers Used Updated**: `{1, 2}`\n\n---\n\n**Player 2's Turn**:\n- **Last Number (N)**: 2\n- **Valid Numbers (M)**: Greater than 2 and ≤ 4 (2 × 2)\n  - Valid options: `3, 4`\n- **Selection**: Player 2 chooses **3**\n- **Sequence Updated**: `[1, 2, 3]`\n- **Numbers Used Updated**: `{1, 2, 3}`\n\n---\n\n**Player 1's Turn**:\n- **Last Number (N)**: 3\n- **Valid Numbers (M)**: Greater than 3 and ≤ 6 (2 × 3)\n  - Valid options: `4, 5, 6`\n- **Selection**: Player 1 chooses **5**\n- **Sequence Updated**: `[1, 2, 3, 5]`\n- **Numbers Used Updated**: `{1, 2, 3, 5}`\n\n---\n\n**Player 2's Turn**:\n- **Last Number (N)**: 5\n- **Valid Numbers (M)**: Greater than 5 and ≤ 10 (2 × 5)\n  - Valid options: `6, 7, 8, 9, 10`\n- **Selection**: Player 2 chooses **6**\n- **Sequence Updated**: `[1, 2, 3, 5, 6]`\n- **Numbers Used Updated**: `{1, 2, 3, 5, 6}`\n\n---\n\n**Player 1's Turn**:\n- **Last Number (N)**: 6\n- **Valid Numbers (M)**: Greater than 6 and ≤ 12 (2 × 6)\n  - Valid options: `7, 8, 9, 10, 11, 12`\n- **Selection**: Player 1 chooses **9**\n- **Sequence Updated**: `[1, 2, 3, 5, 6, 9]`\n- **Numbers Used Updated**: `{1, 2, 3, 5, 6, 9}`\n\n---\n\n**Player 2's Turn**:\n- **Last Number (N)**: 9\n- **Valid Numbers (M)**: Greater than 9 and ≤ 18 (2 × 9)\n  - Valid options: `10, 11, 12, 13, 14, 15, 16, 17, 18`\n- **Selection**: Player 2 chooses **10**\n- **Sequence Updated**: `[1, 2, 3, 5, 6, 9, 10]`\n- **Numbers Used Updated**: `{1, 2, 3, 5, 6, 9, 10}`\n\n---\n\n**Player 1's Turn**:\n- **Last Number (N)**: 10\n- **Valid Numbers (M)**: Greater than 10 and ≤ 20 (2 × 10)\n  - Valid options: `11, 12, 13, 14, 15, 16, 17, 18, 19, 20`\n- **Selection**: Player 1 chooses **19**\n- **Sequence Updated**: `[1, 2, 3, 5, 6, 9, 10, 19]`\n- **Numbers Used Updated**: `{1, 2, 3, 5, 6, 9, 10, 19}`\n\n---\n\n**Player 2's Turn**:\n- **Last Number (N)**: 19\n- **Valid Numbers (M)**: Greater than 19 and ≤ 38 (2 × 19)\n  - Valid options: `20, 21, 22, ..., 38`\n- **Selection**: Player 2 chooses **20**\n- **Sequence Updated**: `[1, 2, 3, 5, 6, 9, 10, 19, 20]`\n- **Numbers Used Updated**: `{1, 2, 3, 5, 6, 9, 10, 19, 20}`\n\n---\n\n**Continuation**: The game continues in this manner until a player cannot make a valid move on their turn. That player loses, and their opponent wins.\n\n## Command-Line Interaction Example\n\nBelow is a sample interaction showing how the game might proceed in a command-line interface.\n\n```\nStarting Number: 1\nSequence: [1]\nNumbers Used: {1}\n\nPlayer 1's Turn:\nLast Number (N): 1\nValid Numbers to Choose From: [2]\nEnter your selection: 2\nSequence Updated: [1, 2]\nNumbers Used Updated: {1, 2}\n\nPlayer 2's Turn:\nLast Number (N): 2\nValid Numbers to Choose From: [3, 4]\nEnter your selection: 4\nSequence Updated: [1, 2, 4]\nNumbers Used Updated: {1, 2, 4}\n\nPlayer 1's Turn:\nLast Number (N): 4\nValid Numbers to Choose From: [5, 6, 7, 8]\nEnter your selection: 8\nSequence Updated: [1, 2, 4, 8]\nNumbers Used Updated: {1, 2, 4, 8}\n\nPlayer 2's Turn:\nLast Number (N): 8\nValid Numbers to Choose From: [9, 10, 11, 12, 13, 14, 15, 16]\nEnter your selection: 16\nSequence Updated: [1, 2, 4, 8, 16]\nNumbers Used Updated: {1, 2, 4, 8, 16}\n\nPlayer 1's Turn:\nLast Number (N): 16\nValid Numbers to Choose From: [17, 18, ..., 32]\nEnter your selection: 17\nSequence Updated: [1, 2, 4, 8, 16, 17]\nNumbers Used Updated: {1, 2, 4, 8, 16, 17}\n\nPlayer 2's Turn:\nLast Number (N): 17\nValid Numbers to Choose From: [18, 19, ..., 34]\nEnter your selection: 34\nSequence Updated: [1, 2, 4, 8, 16, 17, 34]\nNumbers Used Updated: {1, 2, 4, 8, 16, 17, 34}\n\nPlayer 1's Turn:\nLast Number (N): 34\nValid Numbers to Choose From: [35, 36, ..., 68]\nEnter your selection: 50\nSequence Updated: [1, 2, 4, 8, 16, 17, 34, 50]\nNumbers Used Updated: {1, 2, 4, 8, 16, 17, 34, 50}\n\n... (Game continues)\n\nPlayer X cannot make a valid move.\nPlayer Y wins the game!\n```\n\n## Strategy Tips\n\n- **Forward Planning**: Anticipate the range of numbers your opponent will have to choose from after your move to limit their options.\n- **Number Management**: By selecting numbers that create less favorable ranges for your opponent, you can increase your chances of winning.\n- **Avoiding Repetition**: Keep track of all numbers that have been used to ensure you do not attempt to select an invalid number.\n\n## Summary\n\n**Double Up** is a simple yet strategic game that challenges players to think ahead and make tactical decisions based on numerical sequences. Its straightforward rules make it easy to code and play in a command-line interface, and the game's design ensures that there is always a clear winner, with no possibility of a draw. Players who master the strategy can consistently outperform less experienced opponents, adding depth and competitiveness to the gameplay.",
    "# Digit Dilemma\n\n## Objective\n\n**Be the player with the higher numerical value of your constructed number at the end of the game.** Players take turns selecting digits from a shared sequence to build their own numbers. Strategic selection is key to outmaneuvering your opponent and achieving victory.\n\n## Setup\n\n- **Shared Digit Sequence**: A sequence of 20 random digits (0-9) is generated and displayed to both players. The digits are arranged in a line and are accessible from either end.\n  \n  Example:\n  ```\n  Shared Sequence: 4 7 1 9 3 2 8 5 0 6 2 3 7 4 8 1 5 9 0 6\n  ```\n\n- **Player Numbers**: Each player starts with an empty number (no digits).\n\n- **Player Roles**: Decide which player goes first. You can flip a coin, have the system choose at random, or agree between players.\n\n## Game Components\n\n- **Shared Sequence**: A mutable list of digits accessible from both ends.\n  \n- **Player Numbers**: Each player's number is a string or array of digits that they build during the game.\n\n- **Turns Tracker**: Keeps track of whose turn it is.\n\n## Turns\n\n- **Turn Structure**:\n  \n  1. **Display Current State**:\n     - Current shared sequence of digits.\n     - Each player's current number.\n  \n  2. **Player Action**:\n     - The active player chooses **one digit** from **either the start or the end** of the shared sequence.\n     - The chosen digit is appended to the **right end** of their own number.\n  \n  3. **Update Sequence**:\n     - Remove the chosen digit from the shared sequence.\n  \n  4. **Switch Turns**:\n     - The other player becomes the active player.\n\n- **Example Turn**:\n  \n  - **Shared Sequence**: `4 7 1 9 3 2 8 5 0 6 2 3 7 4 8 1 5 9 0 6`\n  - **Player 1's Number**: (empty)\n  - **Player 2's Number**: (empty)\n  \n  **Player 1's Turn**:\n  - Chooses `4` from the start.\n  - **Player 1's Number**: `4`\n  - **Updated Sequence**: `7 1 9 3 2 8 5 0 6 2 3 7 4 8 1 5 9 0 6`\n\n## Rules and Mechanics\n\n1. **Digit Selection**:\n   - On your turn, you **must** select one digit.\n   - You may only choose from the **start or the end** of the shared sequence.\n   - You **cannot** skip your turn or pass.\n\n2. **Building Your Number**:\n   - Append the chosen digit to the **right end** of your current number.\n   - The number builds from left to right based on your selections.\n\n3. **Sequence Depletion**:\n   - The game ends when all digits have been selected and the shared sequence is empty.\n\n4. **No Skipping Digits**:\n   - You cannot select digits from the middle of the sequence.\n   - Only the **first** (leftmost) or **last** (rightmost) digit is available on your turn.\n\n5. **No Draws**:\n   - If both players end up with numbers of equal value, the **second player** (the one who did not start first) is declared the winner. This rule ensures that there are no ties.\n\n## Scoring\n\n- **Number Evaluation**:\n  - At the game's end, each player's number is considered as a whole integer.\n  - Example: If your selected digits were `4`, `9`, `2`, your number is `492`.\n\n- **Determining the Winner**:\n  - The player with the **higher numerical value** wins the game.\n  - If both numbers are equal, the **second player wins**, as per the no-draw rule.\n\n## Examples\n\n### Example Game\n\n**Initial Shared Sequence**:\n\n```\nShared Sequence: 3 6 1 9 4 7 2 5 8 0\n```\n\n**Player 1's Number**: (empty)\n\n**Player 2's Number**: (empty)\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**:\n   - Chooses `3` from the start.\n   - **Player 1's Number**: `3`\n   - **Updated Sequence**: `6 1 9 4 7 2 5 8 0`\n  \n2. **Player 2's Turn**:\n   - Chooses `0` from the end.\n   - **Player 2's Number**: `0`\n   - **Updated Sequence**: `6 1 9 4 7 2 5 8`\n\n3. **Player 1's Turn**:\n   - Chooses `6` from the start.\n   - **Player 1's Number**: `3 6`\n   - **Updated Sequence**: `1 9 4 7 2 5 8`\n\n4. **Player 2's Turn**:\n   - Chooses `8` from the end.\n   - **Player 2's Number**: `0 8`\n   - **Updated Sequence**: `1 9 4 7 2 5`\n\n5. **Player 1's Turn**:\n   - Chooses `1` from the start.\n   - **Player 1's Number**: `3 6 1`\n   - **Updated Sequence**: `9 4 7 2 5`\n\n6. **Player 2's Turn**:\n   - Chooses `5` from the end.\n   - **Player 2's Number**: `0 8 5`\n   - **Updated Sequence**: `9 4 7 2`\n\n7. **Player 1's Turn**:\n   - Chooses `9` from the start.\n   - **Player 1's Number**: `3 6 1 9`\n   - **Updated Sequence**: `4 7 2`\n\n8. **Player 2's Turn**:\n   - Chooses `2` from the end.\n   - **Player 2's Number**: `0 8 5 2`\n   - **Updated Sequence**: `4 7`\n\n9. **Player 1's Turn**:\n   - Chooses `4` from the start.\n   - **Player 1's Number**: `3 6 1 9 4`\n   - **Updated Sequence**: `7`\n\n10. **Player 2's Turn**:\n    - Chooses `7` from the start (only option left).\n    - **Player 2's Number**: `0 8 5 2 7`\n    - **Updated Sequence**: (empty)\n\n**Final Numbers**:\n\n- **Player 1's Number**: `36194`\n- **Player 2's Number**: `08527`\n\n**Scoring**:\n\n- **Player 1's Value**: `36194`\n- **Player 2's Value**: `8527` (Note that leading zero is ignored in numerical value)\n\n**Winner**: **Player 1**, because `36194` > `8527`.\n\n### Strategic Considerations\n\n- **High vs. Low Digits**: Prioritize selecting higher digits to build a larger number.\n- **Blocking**: Anticipate your opponent's moves. If a high digit is at one end and a low digit at the other, you may need to decide between increasing your own number or preventing your opponent from accessing a high digit.\n- **Positioning**: Remember that you always append digits to the **right end** of your number. The order of digits can significantly impact the final value.\n\n## Command-Line Interaction Sample\n\nAssuming a command-line interface where inputs and outputs are displayed textually.\n\n**System Displays**:\n\n```\nCurrent Shared Sequence: 4 9 1 7 2 5 8 6 3 0\nPlayer 1's Number:\nPlayer 2's Number:\nPlayer 1, it's your turn.\nChoose 'start' to select 4 or 'end' to select 0:\n```\n\n**Player 1 Inputs**:\n\n```\nstart\n```\n\n**System Updates**:\n\n```\nPlayer 1 chose 4 from the start.\nPlayer 1's Number: 4\nUpdated Shared Sequence: 9 1 7 2 5 8 6 3 0\nPlayer 2, it's your turn.\nChoose 'start' to select 9 or 'end' to select 0:\n```\n\n**Player 2 Inputs**:\n\n```\nend\n```\n\n**System Updates**:\n\n```\nPlayer 2 chose 0 from the end.\nPlayer 2's Number: 0\nUpdated Shared Sequence: 9 1 7 2 5 8 6 3\nPlayer 1, it's your turn.\nChoose 'start' to select 9 or 'end' to select 3:\n```\n\n*...and so on until the sequence is depleted.*\n\n## Conclusion\n\n\"Digit Dilemma\" is a simple yet strategic game that challenges players to think ahead and make tactical decisions based on the shared sequence of digits. By carefully selecting digits and anticipating your opponent's moves, you can build a higher-value number and claim victory.\n\nEnjoy the game and may the best strategist win!",
    "# Rule Book for \"Numerical Nexus\"\n\n## Objective\n\n**Be the first player to reach exactly 50 points.**\n\nPlayers take turns performing mathematical operations to increase their individual scores. The primary goal is to reach a score of exactly 50 points before your opponent does. Strategic selection and management of operations are key to victory.\n\n## Setup\n\n- **Players:** 2\n- **Starting Scores:** Both players begin with a score of **0**.\n- **Operations Pool:** Each player has access to a set of mathematical operations with limited uses.\n- **Interface:** The game is played in a command-line interface where players input their commands.\n\n## Game Components\n\n### Operations\n\nEach player can perform the following operations on their score:\n\n1. **Addition (+):**\n   - **+1** (usable **3** times)\n   - **+3** (usable **2** times)\n   - **+5** (usable **1** time)\n\n2. **Multiplication (×):**\n   - **×2** (usable **2** times)\n   - **×3** (usable **1** time)\n\n3. **Special Operation:**\n   - **Reset to 0** (usable **once** per game)\n\n**Notes:**\n\n- Each operation has a limited number of uses per player.\n- Players must track their remaining uses for each operation.\n\n## Turns\n\n1. **Turn Order:** Players alternate turns, starting with **Player 1**.\n2. **Turn Actions:** On their turn, a player must:\n   - Select an available operation.\n   - Apply the operation to their score.\n   - Announce their new score and remaining uses of that operation.\n\n## Rules and Mechanics\n\n### Performing Operations\n\n- **Valid Operations:** A player may only use an operation if they have remaining uses for it.\n- **Score Limit:** A player's score must not exceed **50**. If an operation would cause the score to surpass 50, that operation is invalid and cannot be used.\n- **Exact Victory:** A player wins by reaching a score of **exactly 50**.\n- **Special Operation - Reset to 0:**\n  - Can be used on **either player's score**.\n  - Resets the chosen player's score back to **0**.\n  - Counts as the player's turn action.\n  - Usable **once per game** by each player.\n\n### Winning the Game\n\n- **Victory Condition:** The first player to reach exactly **50** points wins.\n- **Forced Loss:** If a player cannot make a valid move on their turn (no operations can be performed without exceeding 50 or no operations remain), they lose the game.\n\n### Game End Scenarios\n\n- **Win:** A player reaches exactly 50 points.\n- **Loss:** A player cannot perform any valid operation on their turn.\n- **Forfeit:** A player chooses to concede the game.\n\n## Scoring\n\n- **Tracking Scores:** Players must keep an accurate record of their current score after each turn.\n- **Operation Usage:** Players must also track the number of uses remaining for each operation.\n\n## Examples\n\n### Sample Gameplay\n\n**Initial State:**\n\n- Player 1 Score: 0\n- Player 2 Score: 0\n\n#### Turn 1: Player 1\n\n- **Action:** Uses **+5**.\n- **Calculation:** 0 + 5 = **5**.\n- **Remaining Uses of +5:** 0.\n- **Announcement:** \"Player 1's score is now 5. Remaining +5 uses: 0.\"\n\n#### Turn 2: Player 2\n\n- **Action:** Uses **×2**.\n- **Calculation:** 0 × 2 = **0** (since 0 × 2 = 0).\n- **Strategic Choice:** Realizing multiplication won't help at zero, decides to use **+3** instead.\n- **Calculation:** 0 + 3 = **3**.\n- **Remaining Uses of +3:** 1.\n- **Announcement:** \"Player 2's score is now 3. Remaining +3 uses: 1.\"\n\n#### Turn 3: Player 1\n\n- **Action:** Uses **×2**.\n- **Calculation:** 5 × 2 = **10**.\n- **Remaining Uses of ×2:** 1.\n- **Announcement:** \"Player 1's score is now 10. Remaining ×2 uses: 1.\"\n\n#### Turn 4: Player 2\n\n- **Action:** Uses **+5**.\n- **Calculation:** 3 + 5 = **8**.\n- **Remaining Uses of +5:** 0.\n- **Announcement:** \"Player 2's score is now 8. Remaining +5 uses: 0.\"\n\n#### Turn 5: Player 1\n\n- **Action:** Uses **×2**.\n- **Calculation:** 10 × 2 = **20**.\n- **Remaining Uses of ×2:** 0.\n- **Announcement:** \"Player 1's score is now 20. Remaining ×2 uses: 0.\"\n\n#### Turn 6: Player 2\n\n- **Action:** Uses **×3**.\n- **Calculation:** 8 × 3 = **24**.\n- **Remaining Uses of ×3:** 0.\n- **Announcement:** \"Player 2's score is now 24. Remaining ×3 uses: 0.\"\n\n#### Turn 7: Player 1\n\n- **Action:** Uses **+5** (no remaining uses).\n- **Alternate Action:** Uses **+3**.\n- **Calculation:** 20 + 3 = **23**.\n- **Remaining Uses of +3:** 1.\n- **Announcement:** \"Player 1's score is now 23. Remaining +3 uses: 1.\"\n\n#### Turn 8: Player 2\n\n- **Action:** Uses **Reset to 0** on **Player 1**.\n- **Remaining Uses of Reset:** 0.\n- **Announcement:** \"Player 2 resets Player 1's score to 0. No remaining resets.\"\n\n#### Turn 9: Player 1\n\n- **Action:** Uses **Reset to 0** on **Player 2**.\n- **Remaining Uses of Reset:** 0.\n- **Announcement:** \"Player 1 resets Player 2's score to 0. No remaining resets.\"\n\n#### Turn 10: Player 2\n\n- **Action:** Uses **+5** (no remaining uses).\n- **Alternate Action:** Uses **+3**.\n- **Calculation:** 0 + 3 = **3**.\n- **Remaining Uses of +3:** 0.\n- **Announcement:** \"Player 2's score is now 3. Remaining +3 uses: 0.\"\n\n*(Game continues with players strategically using their remaining operations.)*\n\n### Strategy Tips\n\n- **Operation Management:** Carefully consider when to use your limited operations, especially high-value ones like **+5** or **×3**.\n- **Anticipate Opponent Moves:** Keep track of your opponent's remaining operations to predict their potential moves.\n- **Use Resets Wisely:** The reset can drastically alter the game's state; use it strategically to hinder your opponent when they are close to winning.\n- **Avoid Overstepping 50:** Plan your moves to avoid situations where any operation would push your score over 50.\n\n## Command-Line Interaction Example\n\n```\nPlayer 1, enter your move: +5\nPlayer 1's score is now 5. Remaining +5 uses: 0.\n\nPlayer 2, enter your move: +3\nPlayer 2's score is now 3. Remaining +3 uses: 1.\n\nPlayer 1, enter your move: ×2\nPlayer 1's score is now 10. Remaining ×2 uses: 1.\n\nPlayer 2, enter your move: ×3\nPlayer 2's score is now 9. Remaining ×3 uses: 0.\n\nPlayer 1, enter your move: +3\nPlayer 1's score is now 13. Remaining +3 uses: 0.\n\nPlayer 2, enter your move: +5\nPlayer 2's score is now 14. Remaining +5 uses: 0.\n\nPlayer 1, enter your move: ×2\nPlayer 1's score is now 13 × 2 = 26. Remaining ×2 uses: 0.\n\nPlayer 2, enter your move: ×2\nPlayer 2's score is now 14 × 2 = 28. Remaining ×2 uses: 1.\n\n...\n\nPlayer 1, enter your move: +1\nPlayer 1's score is now 49. Remaining +1 uses: 2.\n\nPlayer 2, enter your move: +1\nPlayer 2's score is now 49. Remaining +1 uses: 2.\n\nPlayer 1, enter your move: +1\nPlayer 1's score is now 50. Remaining +1 uses: 1.\nCongratulations, Player 1! You've reached exactly 50 and won the game.\n```\n\n## Conclusion\n\n\"**Numerical Nexus**\" is a strategic numerical game that challenges players to reach a precise target through careful planning and operation management. Balancing the use of limited operations while anticipating your opponent's moves adds depth and excitement to each match. Enjoy testing your numerical prowess in this duel of digits!",
    "# Prime Duel\n\n## Objective\n\nBe the first player to reach a cumulative total that is a **prime number greater than 50** without exceeding 60. Achieve this before your opponent to win the game.\n\n## Setup\n\n- **Players**: Two players (Player A and Player B).\n- **Starting Total**: Both players begin with a cumulative total of **0**.\n- **First Turn**: Decide randomly which player takes the first turn.\n- **Score Tracking**: Prepare a method to track each player's cumulative total (paper, calculator, or digital display).\n\n## Game Components\n\n- **Number Pool**: Integers from **1** to **10** (inclusive).\n  - Each number can be selected multiple times throughout the game.\n- **Cumulative Total**: The sum of numbers a player has selected during the game.\n  - Starts at **0** for each player.\n- **Turn Indicator**: An indicator to show which player's turn it is (optional but helpful in a command-line interface).\n\n## Turns\n\n- Players take turns alternately.\n- **Turn Structure**:\n  1. **Number Selection**: The active player selects a number from the number pool.\n  2. **Validation**: Ensure the selected number is allowed (not restricted based on the previous move).\n  3. **Update Total**: Add the selected number to the player's cumulative total.\n  4. **Check for Win/Loss Conditions**: Determine if the game has been won or lost.\n  5. **Next Turn**: Pass the turn to the opponent.\n\n## Rules and Mechanics\n\n### Number Selection\n\n- On your turn, **choose an integer between 1 and 10** (inclusive) to add to your cumulative total.\n- **Restriction**: You **cannot select the same number** that your opponent selected on their **immediately previous turn**.\n  - Example: If Player A selects **7**, Player B cannot select **7** on their next turn.\n- All numbers remain available regardless of how many times they have been selected previously.\n\n### Cumulative Total\n\n- **Tracking**: Keep a running total of the numbers you have selected.\n- **Visibility**: Both players' cumulative totals are public knowledge.\n- **Example**: If your previous total was **15** and you select **6**, your new total is **21**.\n\n### Winning the Game\n\n- **Victory Condition**: Be the **first player** to reach a cumulative total that is:\n  - A **prime number** (a number greater than 1 with no positive divisors other than 1 and itself).\n  - **Greater than 50**.\n- The game ends immediately when a player meets the victory condition.\n\n### Losing the Game\n\n- **Overstepping**: If your cumulative total **exceeds 60**, you **lose** the game immediately.\n- **Forced Loss**: If you are unable to select any number without causing your total to exceed 60, you lose.\n\n### Tie-Breaker\n\n- If both players exceed 60 without either reaching a prime number greater than 50:\n  - The player with the **lower cumulative total** is declared the **winner**.\n  - If both totals are equal, the game continues until the tie is broken under normal rules.\n\n## Scoring\n\n- The game does not utilize a point system.\n- Victory is achieved by meeting the specified win condition.\n- There are no draws; the game must end with a win or a loss.\n\n## Examples\n\n### Example Game Playthrough\n\n**Turn 1: Player A**\n\n- **Previous Total**: 0\n- **Available Numbers**: 1-10\n- **Selection**: 7\n- **Reason**: Starting with a moderate number.\n- **New Total**: 0 + 7 = **7**\n\n**Turn 2: Player B**\n\n- **Cannot Select**: 7 (Player A's last selection)\n- **Available Numbers**: 1-10 (excluding 7)\n- **Selection**: 10\n- **New Total**: 0 + 10 = **10**\n\n**Turn 3: Player A**\n\n- **Cannot Select**: 10 (Player B's last selection)\n- **Available Numbers**: 1-10 (excluding 10)\n- **Selection**: 8\n- **New Total**: 7 + 8 = **15**\n\n**Turn 4: Player B**\n\n- **Cannot Select**: 8\n- **Selection**: 9\n- **New Total**: 10 + 9 = **19**\n\n**Turn 5: Player A**\n\n- **Cannot Select**: 9\n- **Selection**: 10\n- **New Total**: 15 + 10 = **25**\n\n**Turn 6: Player B**\n\n- **Cannot Select**: 10\n- **Selection**: 7\n- **New Total**: 19 + 7 = **26**\n\n**Turn 7: Player A**\n\n- **Cannot Select**: 7\n- **Selection**: 6\n- **New Total**: 25 + 6 = **31**\n\n**Turn 8: Player B**\n\n- **Cannot Select**: 6\n- **Selection**: 9\n- **New Total**: 26 + 9 = **35**\n\n**Turn 9: Player A**\n\n- **Cannot Select**: 9\n- **Selection**: 8\n- **New Total**: 31 + 8 = **39**\n\n**Turn 10: Player B**\n\n- **Cannot Select**: 8\n- **Selection**: 10\n- **New Total**: 35 + 10 = **45**\n\n**Turn 11: Player A**\n\n- **Cannot Select**: 10\n- **Selection**: 7\n- **New Total**: 39 + 7 = **46**\n\n**Turn 12: Player B**\n\n- **Cannot Select**: 7\n- **Selection**: 6\n- **New Total**: 45 + 6 = **51**\n\n- **Check for Victory**: 51 is a prime number greater than 50.\n- **Player B Wins!**\n\n### Command-Line Interaction Example\n\n*Assuming input prompts and outputs for clarity.*\n\n---\n\n**Player A's Turn**\n\n```\nYour current total: 0\nOpponent's last number: None\nSelect a number between 1 and 10 (excluding None): 7\n```\n\n_Output_:\n\n```\nPlayer A selects 7.\nPlayer A's new total is 7.\n```\n\n---\n\n**Player B's Turn**\n\n```\nYour current total: 0\nOpponent's last number: 7\nSelect a number between 1 and 10 (excluding 7): 10\n```\n\n_Output_:\n\n```\nPlayer B selects 10.\nPlayer B's new total is 10.\n```\n\n---\n\n*Continue the game following the example playthrough.*\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**: Keep track of both totals to anticipate your opponent's moves.\n- **Prime Awareness**: Familiarize yourself with prime numbers greater than 50 (53, 59).\n- **Control Numbers**: By selecting certain numbers, you can prevent your opponent from accessing them on their next turn.\n- **Avoid Overstepping**: Be cautious not to exceed the total of 60 unless it forces your opponent into a loss.\n\n## Prime Numbers Greater Than 50 (for Reference)\n\n- **53**, **59**\n\nEnsure you aim for these targets to secure a win.\n\n---\n\nEnjoy your strategic duel of numbers, and may the most calculating mind prevail!",
    "# Number Line Duel\n\n## Objective\n\nBe the first player to **capture your opponent's token** by landing on it, or **reach your opponent's base position** without being captured. Success requires strategic movement and anticipation of your opponent's actions.\n\n## Setup\n\n1. **Number Line Creation**: Draw a number line with positions labeled from **0** to **10**.\n2. **Player Assignment**:\n   - **Player 1**: Starts at **position 0** (left end of the line), which is their base.\n   - **Player 2**: Starts at **position 10** (right end of the line), which is their base.\n3. **Token Placement**: Each player places their token on their respective base positions.\n\n## Game Components\n\n- **Number Line**: A linear arrangement of numbered positions from **0** to **10**.\n- **Tokens**: Two distinct tokens representing each player (e.g., `A` for Player 1 and `B` for Player 2).\n  - **Appearance**: Simple text characters or symbols in the command-line interface.\n  - **Functionality**: Move along the number line according to the rules.\n- **Positions**: Numerical markers indicating each spot on the line.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with **Player 1**.\n- **Actions Per Turn**:\n  1. Decide on the **direction** of movement:\n     - **Forward**: Towards the opponent's base.\n     - **Backward**: Towards your own base.\n  2. Choose to move your token **1 or 2 positions** in the chosen direction.\n- **Turn Progression**: After a player completes their move, the turn passes to the opponent.\n\n## Rules and Mechanics\n\n1. **Movement Rules**:\n   - Players may move **either forward or backward** on their turn.\n   - Movement must be **1 or 2 positions**; you cannot skip your turn or move zero positions.\n   - **Example Moves**:\n     - From position `3`, you can move to positions `1`, `2`, `4`, or `5`.\n   - Tokens **cannot move beyond** the number line (positions less than `0` or greater than `10` are invalid).\n2. **Capturing the Opponent's Token**:\n   - If you land on the **same position** as your opponent's token, you **capture** it and **win immediately**.\n   - **Example**: If Player 1 moves to position `5` where Player 2 is located, Player 1 captures Player 2's token.\n3. **Winning by Reaching the Opponent's Base**:\n   - If you reach the opponent's **base position** (Player 1 reaching position `10` or Player 2 reaching position `0`) without being captured, you **win the game**.\n4. **Strategic Considerations**:\n   - Anticipate your opponent's moves to avoid being captured.\n   - Balance between advancing towards the opponent's base and protecting your own token.\n5. **Game End Conditions**:\n   - **Capture Victory**: Capturing the opponent's token.\n   - **Base Victory**: Reaching the opponent's base position without being captured.\n\n## Scoring\n\n- The game does not involve point tracking.\n- **Winning the Game**:\n  - The player who first **captures the opponent's token** or **reaches the opponent's base** position **wins**.\n- There are **no draws**; the game continues until one player wins.\n\n## Examples\n\nBelow are example scenarios illustrating gameplay and command-line interactions.\n\n### Example Game\n\n**Starting Positions**:\n\n- Player 1 (`A`) at position `0`.\n- Player 2 (`B`) at position `10`.\n\n#### Turn 1\n\n- **Player 1's Move**:\n  - Chooses to move **forward**.\n  - Moves **2 positions** to position `2`.\n  - **Command**: `move 2`\n- **Player 2's Move**:\n  - Chooses to move **backward**.\n  - Moves **2 positions** to position `8`.\n  - **Command**: `move -2`\n\n**Positions After Turn 1**:\n\n```\n0   1   2   3   4   5   6   7   8   9   10\nA                       B\n```\n\n#### Turn 2\n\n- **Player 1's Move**:\n  - Chooses to move **forward**.\n  - Moves **2 positions** to position `4`.\n  - **Command**: `move 2`\n- **Player 2's Move**:\n  - Chooses to move **backward**.\n  - Moves **1 position** to position `7`.\n  - **Command**: `move -1`\n\n**Positions After Turn 2**:\n\n```\n0   1   2   3   4   5   6   7   8   9   10\n            A           B\n```\n\n#### Turn 3\n\n- **Player 1's Move**:\n  - Anticipating Player 2's position, chooses to move **forward**.\n  - Moves **1 position** to position `5`.\n  - **Command**: `move 1`\n- **Player 2's Move**:\n  - Chooses to move **backward**.\n  - Moves **2 positions** to position `5`.\n  - **Command**: `move -2`\n- **Capture Occurs**:\n  - Both tokens are now at position `5`.\n  - Player 2 captures Player 1's token and **wins the game**.\n\n**Final Positions**:\n\n```\n0   1   2   3   4   5   6   7   8   9   10\n                    A/B\n```\n\n### Command-Line Interaction Sample\n\nBelow is a sample interaction for the above example:\n\n```\n--- Number Line Duel ---\n\nPosition Status:\n0[A] 1   2   3   4   5   6   7   8   9   10[B]\n\nPlayer 1's turn. Your token is at position 0.\nEnter your move (1 or 2): 2\nDirection (forward/backward): forward\nPlayer 1 moves forward 2 positions to position 2.\n\nPosition Status:\n0   1   2[A] 3   4   5   6   7   8   9   10[B]\n\nPlayer 2's turn. Your token is at position 10.\nEnter your move (1 or 2): 2\nDirection (forward/backward): backward\nPlayer 2 moves backward 2 positions to position 8.\n\nPosition Status:\n0   1   2[A] 3   4   5   6   7   8[B] 9   10\n\nPlayer 1's turn. Your token is at position 2.\nEnter your move (1 or 2): 2\nDirection (forward/backward): forward\nPlayer 1 moves forward 2 positions to position 4.\n\nPosition Status:\n0   1   2   3   4[A] 5   6   7   8[B] 9   10\n\nPlayer 2's turn. Your token is at position 8.\nEnter your move (1 or 2): 1\nDirection (forward/backward): backward\nPlayer 2 moves backward 1 position to position 7.\n\nPosition Status:\n0   1   2   3   4[A] 5   6   7[B] 8   9   10\n\nPlayer 1's turn. Your token is at position 4.\nEnter your move (1 or 2): 1\nDirection (forward/backward): forward\nPlayer 1 moves forward 1 position to position 5.\n\nPosition Status:\n0   1   2   3   4   5[A] 6   7[B] 8   9   10\n\nPlayer 2's turn. Your token is at position 7.\nEnter your move (1 or 2): 2\nDirection (forward/backward): backward\nPlayer 2 moves backward 2 positions to position 5.\n\nPlayer 2 lands on position 5 and captures Player 1's token!\nPlayer 2 wins the game!\n```\n\n## Strategic Tips\n\n- **Predict Opponent's Moves**: Try to anticipate where your opponent might move to avoid being captured.\n- **Control the Center**: Occupying central positions can give you more flexibility in movement.\n- **Balancing Act**: Decide when to advance towards the opponent's base and when to retreat to avoid capture.\n- **Forced Moves**: Try to force your opponent into a position where they have limited safe moves.\n\n## Conclusion\n\nNumber Line Duel is a simple yet strategic game that challenges players to think ahead and outmaneuver their opponent. With clear rules and straightforward mechanics, it is easy to play in a command-line interface and provides depth for skilled players to consistently triumph over unskilled ones.\n\nEnjoy the duel, and may the best strategist win!",
    "# Stack Attack: Rule Book\n\n## Objective\n\n**Stack Attack** is a two-player turn-based strategy game where the objective is to be the last player to successfully place a number on the stack according to the game's rules. Players take turns placing numbers on a shared stack, following specific mathematical relationships. The game requires strategic planning and mathematical reasoning, ensuring that a skilled player can consistently outperform an unskilled opponent.\n\n## Setup\n\n- **Starting Condition**: The game begins with an empty stack.\n- **Player Positions**: Decide which player goes first (Player 1) and which goes second (Player 2). This can be determined randomly or by mutual agreement.\n\n## Game Components\n\n- **The Stack**: A conceptual pile where numbers are placed one on top of another. This can be represented as a list in the command-line interface.\n- **Numbers**: Integers ranging from **1 to 100**. Each number can only be used once in the game.\n\n## Turns\n\n- **Turn Structure**:\n  1. **Player Action**: On their turn, a player must place a valid number on top of the stack according to the game's rules.\n  2. **Verification**: The move is checked for validity—ensuring the number hasn't been used before and follows the placement rules.\n  3. **Turn Progression**: If the move is valid, the turn passes to the other player. If not, the game ends, and the last player to place a valid number wins.\n\n- **Order of Play**: Players alternate turns starting with Player 1.\n\n## Rules and Mechanics\n\n### Core Rules:\n\n1. **First Move**:\n   - The first player starts the game by placing any number from **1 to 10** on the empty stack.\n\n2. **Subsequent Moves**:\n   - On their turn, a player must place a number between **1 and 100** on top of the stack.\n   - The number must be **either**:\n     - A **multiple** of the top number on the stack.\n     - A **factor** of the top number on the stack.\n   - **Previously used numbers cannot be reused** in the game.\n\n3. **Valid Moves**:\n   - A number is considered a **valid move** if it satisfies the following conditions:\n     - It is **between 1 and 100**.\n     - It is a **multiple or factor** of the current top number.\n     - It has **not been used** earlier in the game.\n\n4. **Winning the Game**:\n   - If a player **cannot place a valid number** on their turn, they **lose the game**.\n   - The **last player** to have placed a valid number on the stack is declared the **winner**.\n\n### Additional Mechanics:\n\n- **Number Repetition**:\n  - **No number** can appear more than **once** in the game. Keep track of all numbers that have been used.\n  \n- **Examples of Multiples and Factors**:\n  - If the top number is **6**:\n    - **Factors**: 1, 2, 3, 6\n    - **Multiples**: 6, 12, 18, 24, ..., up to 100, excluding numbers already used.\n\n- **Strategic Considerations**:\n  - Players should plan ahead to avoid leaving themselves without valid moves.\n  - Tracking used numbers and anticipating the opponent's options is key.\n\n## Scoring\n\n- **Victory**: The game is won by the player who successfully places a valid number when the opponent cannot.\n- **No Point System**: There is no point or scoring system; the focus is on strategy and winning the individual game.\n\n## Examples\n\n### Sample Game Play:\n\n#### Initial Moves:\n\n1. **Player 1's Turn**:\n   - Chooses **5** (since it's the first move, any number from 1 to 10 is valid).\n   - Stack: `[5]`\n\n2. **Player 2's Turn**:\n   - Must choose a factor or multiple of **5**.\n   - Chooses **10** (a multiple of 5).\n   - Stack: `[5, 10]`\n\n#### Mid-Game Moves:\n\n3. **Player 1's Turn**:\n   - Top number is **10**.\n   - Possible choices (excluding used numbers **5** and **10**): factors (1, 2, 5) or multiples (20, 30, ..., 100).\n   - Chooses **2** (a factor of 10).\n   - Stack: `[5, 10, 2]`\n\n4. **Player 2's Turn**:\n   - Top number is **2**.\n   - Possible choices: factors (1, 2) or multiples (4, 6, 8, ..., 100), excluding used numbers.\n   - Chooses **4** (a multiple of 2).\n   - Stack: `[5, 10, 2, 4]`\n\n#### End-Game Scenario:\n\n5. **Player 1's Turn**:\n   - Top number is **4**.\n   - Possible choices: factors (1, 2, 4) or multiples (8, 12, ..., 100), excluding used numbers.\n   - Used numbers so far: 2, 4, 5, 10.\n   - Chooses **8**.\n   - Stack: `[5, 10, 2, 4, 8]`\n\n6. **Player 2's Turn**:\n   - Top number is **8**.\n   - Possible choices: factors (1, 2, 4, 8) or multiples (16, 24, ..., 100), excluding used numbers.\n   - Chooses **16**.\n   - Stack: `[5, 10, 2, 4, 8, 16]`\n\n7. **Player 1's Turn**:\n   - Top number is **16**.\n   - Possible choices: factors (1, 2, 4, 8, 16) or multiples (32, 48, ..., 100), excluding used numbers.\n   - Chooses **32**.\n   - Stack: `[5, 10, 2, 4, 8, 16, 32]`\n\n8. **Player 2's Turn**:\n   - Top number is **32**.\n   - Possible choices: factors (1, 2, 4, 8, 16, 32) or multiples (64, 96), excluding used numbers.\n   - Chooses **64**.\n   - Stack: `[5, 10, 2, 4, 8, 16, 32, 64]`\n\n9. **Player 1's Turn**:\n   - Top number is **64**.\n   - Possible choices: factors (1, 2, 4, 8, 16, 32, 64) or multiples (none under 100), excluding used numbers.\n   - Options are running out.\n\n   - Chooses **1**.\n   - Stack: `[5, 10, 2, 4, 8, 16, 32, 64, 1]`\n\n10. **Player 2's Turn**:\n    - Top number is **1**.\n    - Possible choices: factors (1) and multiples (2, 3, ..., 100), excluding used numbers.\n    - Chooses **3**.\n    - Stack: `[5, 10, 2, 4, 8, 16, 32, 64, 1, 3]`\n\n11. **Player 1's Turn**:\n    - Top number is **3**.\n    - Possible choices: factors (1, 3) and multiples (6, 9, ..., 99), excluding used numbers.\n    - Chooses **9**.\n    - Stack: `[5, 10, 2, 4, 8, 16, 32, 64, 1, 3, 9]`\n\n12. **Player 2's Turn**:\n    - Top number is **9**.\n    - Possible choices: factors (1, 3, 9) and multiples (18, 27, ..., 99), excluding used numbers.\n    - Chooses **27**.\n    - Stack: `[5, 10, 2, 4, 8, 16, 32, 64, 1, 3, 9, 27]`\n\n13. **Player 1's Turn**:\n    - Top number is **27**.\n    - Possible choices: factors (1, 3, 9, 27) and multiples (54, 81), excluding used numbers.\n    - Chooses **81**.\n    - Stack: `[5, 10, 2, 4, 8, 16, 32, 64, 1, 3, 9, 27, 81]`\n\n14. **Player 2's Turn**:\n    - Top number is **81**.\n    - Possible choices: factors (1, 3, 9, 27, 81), excluding used numbers.\n    - **All factors have been used** (1, 3, 9, 27, 81).\n    - No multiples under 100 are available (multiples would be 162, etc.).\n    - **Player 2 cannot make a valid move and loses**.\n\n### Command-Line Interaction Example:\n\n```plaintext\nWelcome to Stack Attack!\n\nPlayer 1's turn.\nCurrent Stack: []\nAvailable Numbers: 1-10\nEnter a number to place on the stack: 5\n\nPlayer 2's turn.\nCurrent Stack: [5]\nAvailable Numbers: 1-100 (excluding used numbers)\nTop of the stack is 5.\nEnter a multiple or factor of 5: 10\n\nPlayer 1's turn.\nCurrent Stack: [5, 10]\nAvailable Numbers: 1-100 (excluding used numbers)\nTop of the stack is 10.\nEnter a multiple or factor of 10: 2\n\n...\n\nPlayer 2's turn.\nCurrent Stack: [5, 10, 2, 4, 8, 16, 32, 64, 1, 3, 9, 27, 81]\nTop of the stack is 81.\nAvailable Numbers: 1-100 (excluding used numbers)\nEnter a multiple or factor of 81: \n\nNo valid moves available. Player 1 wins!\n```\n\n## Conclusion\n\n**Stack Attack** is a simple yet strategic game that combines mathematical concepts with tactical gameplay. Its minimal components and straightforward rules make it easy to code and play in a command-line interface. The game is designed to end quickly with a clear winner, and its strategic depth ensures that skilled players have a significant advantage over unskilled opponents.\n\nEnjoy the challenge, and may the best strategist win!",
    "# Game Name: Sum Stack\n\n## Objective\n\n**Primary Goal:**  \nBe the last player to make a valid move without causing the cumulative sum of the shared stack to exceed **50**. The objective is to strategically add numbers to a shared stack, forcing your opponent into a position where they cannot make a valid move.\n\n**Victory Condition:**  \n- **Win:** You win if you successfully add a number to the stack without exceeding the total sum limit of 50, and your opponent cannot make a valid move on their turn.\n- **Loss:** You lose if you cannot make a valid move on your turn without exceeding the total sum of 50.\n\n## Setup\n\n1. **Players:** Two players are required, referred to as **Player 1** and **Player 2**.\n2. **Initial State:** The game begins with an empty shared stack and a cumulative total sum of **0**.\n3. **Order of Play:** Decide who will be Player 1 and Player 2 (e.g., by mutual agreement or by a random method like a coin toss). Players will alternate turns throughout the game.\n\n## Game Components\n\n- **Shared Stack:** A list that keeps track of all numbers added by both players during the game.\n- **Total Sum:** The cumulative sum of all numbers in the shared stack.\n- **Available Numbers:** Integers from **1** to **9** (inclusive).\n\n## Turns\n\nOn each turn, the active player performs the following steps:\n\n1. **Select a Number:**\n   - Choose any integer between **1** and **9** (inclusive).\n   - The chosen number must not cause the total sum to exceed **50** when added to the current total sum.\n\n2. **Add to Stack:**\n   - Place (push) the selected number onto the top of the shared stack.\n\n3. **Update Total Sum:**\n   - Add the selected number to the current total sum.\n\n4. **Declare Move:**\n   - Announce the chosen number and the new total sum.\n\n5. **Turn Progression:**\n   - The turn passes to the other player.\n\n## Rules and Mechanics\n\n1. **Valid Moves:**\n   - You must select a number between **1** and **9**.\n   - The selected number, when added to the total sum, must not exceed **50**.\n   - If only certain numbers are valid (due to the total sum approaching **50**), you must choose from those numbers.\n\n2. **Winning the Game:**\n   - If you make a move that brings the total sum to exactly **50**, you win immediately.\n   - If your opponent cannot make a valid move on their turn (any number they choose will exceed **50**), you win.\n\n3. **Forcing a Loss:**\n   - Strategy involves trying to force your opponent into a position where they have no valid moves.\n   - Plan your moves to control the progression of the total sum.\n\n4. **Invalid Moves:**\n   - If a player cannot make a valid move on their turn, they lose.\n   - If a player mistakenly adds a number that causes the total sum to exceed **50**, they lose immediately.\n\n5. **Game End:**\n   - The game ends when one player wins according to the conditions above.\n\n## Scoring\n\n- **Tracking Progress:**\n  - Keep track of the shared stack and the total sum after each turn.\n  - No points are awarded; the outcome is a win or a loss for each game.\n\n- **Determining Overall Winner:**\n  - Players may choose to play multiple rounds.\n  - The player who wins the most rounds can be declared the overall winner.\n\n## Examples\n\n### Example Game Play\n\n**Initial State:**\n- Shared Stack: `[]`\n- Total Sum: `0`\n\n**Player 1's Turn:**\n- Chooses number: `5`\n- Shared Stack: `[5]`\n- Total Sum: `5`\n- Announces: \"I choose 5. Total sum is now 5.\"\n\n**Player 2's Turn:**\n- Chooses number: `9`\n- Shared Stack: `[5, 9]`\n- Total Sum: `14`\n- Announces: \"I choose 9. Total sum is now 14.\"\n\n**Player 1's Turn:**\n- Chooses number: `9`\n- Shared Stack: `[5, 9, 9]`\n- Total Sum: `23`\n- Announces: \"I choose 9. Total sum is now 23.\"\n\n**Player 2's Turn:**\n- Chooses number: `9`\n- Shared Stack: `[5, 9, 9, 9]`\n- Total Sum: `32`\n- Announces: \"I choose 9. Total sum is now 32.\"\n\n**Player 1's Turn:**\n- Chooses number: `9`\n- Shared Stack: `[5, 9, 9, 9, 9]`\n- Total Sum: `41`\n- Announces: \"I choose 9. Total sum is now 41.\"\n\n**Player 2's Turn:**\n- Must select a number between 1 and 9 without exceeding a total sum of 50.\n- Maximum allowed number is `9` (since 41 + 9 = 50).\n- Chooses number: `9`\n- Shared Stack: `[5, 9, 9, 9, 9, 9]`\n- Total Sum: `50`\n- Announces: \"I choose 9. Total sum is now 50. I win!\"\n\n**Game Result:**\n- Player 2 wins by bringing the total sum to exactly 50.\n\n### Example Command-Line Interaction\n\n```\nWelcome to Sum Stack!\n\nTotal Sum: 0\n\nPlayer 1's Turn:\nChoose a number between 1 and 9: 7\nYou chose 7.\nTotal Sum is now 7.\n\nPlayer 2's Turn:\nChoose a number between 1 and 9: 8\nYou chose 8.\nTotal Sum is now 15.\n\nPlayer 1's Turn:\nChoose a number between 1 and 9: 9\nYou chose 9.\nTotal Sum is now 24.\n\nPlayer 2's Turn:\nChoose a number between 1 and 9: 9\nYou chose 9.\nTotal Sum is now 33.\n\nPlayer 1's Turn:\nChoose a number between 1 and 9: 8\nYou chose 8.\nTotal Sum is now 41.\n\nPlayer 2's Turn:\nChoose a number between 1 and 9: 9\nYou chose 9.\nTotal Sum is now 50.\n\nPlayer 2 wins! Congratulations!\n```\n\n## Strategic Tips\n\n- **Plan Ahead:** Always be aware of the current total sum and calculate how your choice will affect the next turn.\n- **Control the Game:** Try to force the total sum into numbers where the opponent has limited options.\n- **Avoid Risky Moves:** Be cautious when the total sum is approaching 50. Selecting a smaller number might prevent giving your opponent an easy win.\n- **Predict Opponent's Moves:** Anticipate which numbers your opponent might choose and strategize accordingly.\n\n## Summary\n\nSum Stack is a simple yet strategic game that requires players to make careful choices to outmaneuver their opponent. By understanding the mechanics and employing strategic thinking, a skilled player can consistently win against less experienced opponents. The game is easy to code and play in a command-line interface, making it accessible and engaging for players of all levels.\n\nEnjoy the challenge, and may the best strategist win!",
    "# Digit Duel\n\n## Objective\n\nBe the first player to win two rounds by constructing higher three-digit numbers than your opponent. Strategically decide whether to keep drawn digits or give them to your opponent to maximize your chances of winning each round.\n\n## Setup\n\n1. **Players**: Two players.\n2. **Deck Preparation**:\n   - Create a deck containing four copies of each digit from 0 to 9, resulting in a 40-card deck.\n   - Shuffle the deck thoroughly.\n3. **Hands**:\n   - Each player starts with an empty hand that can hold up to three digits.\n\n## Game Components\n\n- **Digit Cards**:\n  - **Appearance**: Cards are labeled with a single digit from 0 to 9.\n  - **Quantity**: Four copies of each digit, totaling 40 cards.\n- **Player Hands**:\n  - Each player has a hand that can hold up to three digits.\n  - Hands are private until the end of the round when numbers are revealed.\n\n## Turns\n\n- Players take turns; decide who goes first by agreement or a random method (e.g., coin toss).\n- **Turn Structure**:\n  1. **Draw Phase**: Draw one digit card from the top of the deck.\n  2. **Decision Phase**: Choose to keep the digit or give it to your opponent.\n     - **If Keeping**:\n       - Add the digit to your hand.\n     - **If Giving**:\n       - Offer the digit to your opponent.\n       - The opponent must accept and add it to their hand unless their hand is full; in that case, the digit is discarded.\n  3. **Hand Limit**:\n     - A hand can hold a maximum of three digits.\n     - Once a hand is full, any additional digits assigned to that player are discarded.\n\n## Rules and Mechanics\n\n### Core Rules\n\n- **Round End**:\n  - The round ends when both players have three digits in their hands.\n- **Number Formation**:\n  - At the end of the round, each player arranges their three digits to form the highest possible three-digit number.\n  - Leading zeros are allowed (e.g., '0', '0', '5' forms '005').\n- **Round Victory**:\n  - The player with the higher three-digit number wins the round.\n  - In case of a tie (identical numbers), the round is replayed with the remaining cards.\n\n### Additional Rules\n\n- **Discard Pile and Deck Reshuffle**:\n  - If the deck runs out before the round ends, reshuffle the discard pile to form a new deck.\n- **Strategy Considerations**:\n  - Decide when to keep high digits for yourself or give low digits to your opponent.\n  - Observe which digits have been played to infer which ones remain.\n\n## Scoring\n\n- **Round Win**: Earned by having a higher three-digit number than your opponent at the end of a round.\n- **Game Win**: The first player to win two rounds wins the game.\n\n## Examples\n\n### Example Gameplay\n\n#### Round 1\n\n**Starting the Game**:\n- Players decide that Player 1 will start first.\n\n**Turn 1 - Player 1**:\n- **Draws**: '7'\n- **Decision**: Keeps '7' and adds it to their hand.\n- **Player 1's Hand**: [7]\n\n**Turn 2 - Player 2**:\n- **Draws**: '2'\n- **Decision**: Gives '2' to Player 1.\n- **Player 1's Hand**: [7, 2]\n\n**Turn 3 - Player 1**:\n- **Draws**: '9'\n- **Decision**: Keeps '9' and adds it to their hand.\n- **Player 1's Hand**: [7, 2, 9] (Hand is now full)\n\n**Turn 4 - Player 2**:\n- **Draws**: '5'\n- **Decision**: Keeps '5' and adds it to their hand.\n- **Player 2's Hand**: [5]\n\n**Turn 5 - Player 2**:\n- **Draws**: '1'\n- **Decision**: Keeps '1' and adds it to their hand.\n- **Player 2's Hand**: [5, 1]\n\n**Turn 6 - Player 2**:\n- **Draws**: '8'\n- **Decision**: Keeps '8' and adds it to their hand.\n- **Player 2's Hand**: [5, 1, 8] (Hand is now full)\n\n**End of Round 1**:\n\n- **Player 1's Digits**: [7, 2, 9]\n  - **Possible Arrangements**: 972, 927, 792, 729, 297, 279\n  - **Chooses**: 972\n\n- **Player 2's Digits**: [5, 1, 8]\n  - **Possible Arrangements**: 851, 815, 581, 518, 185, 158\n  - **Chooses**: 851\n\n- **Round Result**:\n  - Player 1's Number: 972\n  - Player 2's Number: 851\n  - **Winner**: Player 1 wins Round 1.\n\n#### Round 2\n\n**Turn 1 - Player 2**:\n- **Draws**: '4'\n- **Decision**: Gives '4' to Player 1.\n- **Player 1's Hand**: [4]\n\n**Turn 2 - Player 1**:\n- **Draws**: '6'\n- **Decision**: Keeps '6' and adds it to their hand.\n- **Player 1's Hand**: [4, 6]\n\n**Turn 3 - Player 2**:\n- **Draws**: '9'\n- **Decision**: Keeps '9' and adds it to their hand.\n- **Player 2's Hand**: [9]\n\n**Turn 4 - Player 1**:\n- **Draws**: '3'\n- **Decision**: Keeps '3' and adds it to their hand.\n- **Player 1's Hand**: [4, 6, 3] (Hand is now full)\n\n**Turn 5 - Player 2**:\n- **Draws**: '0'\n- **Decision**: Keeps '0' and adds it to their hand.\n- **Player 2's Hand**: [9, 0]\n\n**Turn 6 - Player 2**:\n- **Draws**: '7'\n- **Decision**: Keeps '7' and adds it to their hand.\n- **Player 2's Hand**: [9, 0, 7] (Hand is now full)\n\n**End of Round 2**:\n\n- **Player 1's Digits**: [4, 6, 3]\n  - **Possible Arrangements**: 643, 634, 463, 436, 364, 346\n  - **Chooses**: 643\n\n- **Player 2's Digits**: [9, 0, 7]\n  - **Possible Arrangements**: 970, 907, 790, 709, 097, 079\n  - **Chooses**: 970\n\n- **Round Result**:\n  - Player 1's Number: 643\n  - Player 2's Number: 970\n  - **Winner**: Player 2 wins Round 2.\n\n#### Round 3\n\n- Continue playing rounds until one player has won two rounds.\n\n### Command-Line Interaction Example\n\n```\nWelcome to Digit Duel!\n\n--- Round 1 ---\n\nPlayer 1's Turn:\n- You draw a '7'.\n- Do you want to keep it? (yes/no): yes\n- Your hand: [7]\n\nPlayer 2's Turn:\n- You draw a '2'.\n- Do you want to keep it? (yes/no): no\n- You give the '2' to Player 1.\n- Player 1's hand: [7, 2]\n\nPlayer 1's Turn:\n- You draw a '9'.\n- Do you want to keep it? (yes/no): yes\n- Your hand is now full: [7, 2, 9]\n\nPlayer 2's Turn:\n- You draw a '5'.\n- Do you want to keep it? (yes/no): yes\n- Your hand: [5]\n\nPlayer 2's Turn:\n- You draw a '1'.\n- Do you want to keep it? (yes/no): yes\n- Your hand: [5, 1]\n\nPlayer 2's Turn:\n- You draw a '8'.\n- Do you want to keep it? (yes/no): yes\n- Your hand is now full: [5, 1, 8]\n\nBoth hands are full. Time to reveal your numbers!\n\nPlayer 1, arrange your digits to form your number.\n- Your digits: [7, 2, 9]\n- Enter your number (use each digit once): 972\n\nPlayer 2, arrange your digits to form your number.\n- Your digits: [5, 1, 8]\n- Enter your number (use each digit once): 851\n\nRound 1 Results:\n- Player 1's Number: 972\n- Player 2's Number: 851\n- Player 1 wins the round!\n\nCurrent Score:\n- Player 1: 1 win\n- Player 2: 0 wins\n\n--- Round 2 ---\n\n[Proceed with Round 2 as above]\n\n```\n\n## Strategy Tips\n\n- **High Digits**:\n  - Keep high digits (7, 8, 9) to boost your own number.\n- **Low Digits**:\n  - Give low digits (0, 1, 2) to your opponent to potentially lower their final number.\n- **Middle Digits**:\n  - Use discretion with middle digits (3, 4, 5, 6) based on the current state of hands.\n- **Observation**:\n  - Pay attention to which digits have already been drawn to estimate remaining cards.\n\n## Conclusion\n\n\"Digit Duel\" is a fast-paced game that combines luck and strategy, perfect for a command-line interface. Players must make tactical decisions each turn, balancing the benefit of strengthening their own hand against the opportunity to weaken their opponent's chances. With simple rules and deep strategic potential, \"Digit Duel\" offers engaging gameplay that allows a skilled player to consistently outperform an unskilled one.\n\nEnjoy the game!",
    "# Target Sum Showdown - Rule Book\n\n## Objective\n\nBe the **first player** to reach a total score of **exactly 50 points** by strategically adding or subtracting numbers from a shared pool without exceeding the target or dropping below zero.\n\n---\n\n## Setup\n\n- **Players**: Two players participate in the game.\n- **Starting Score**: Both players begin with a score of **zero (0)**.\n- **Number Pool**: A shared pool containing number tokens from **1 to 10**, with **two copies of each number** (totaling 20 tokens).\n\n---\n\n## Game Components\n\n### Number Tokens (1–10)\n\n- **Quantity**: Two copies of each number from 1 to 10.\n- **Appearance**: Each token displays a number between 1 and 10.\n- **Functionality**:\n  - **Selection**: Players choose tokens to adjust their scores.\n  - **Removal**: Once selected, a token is **removed** from the pool and cannot be used again.\n\n### Score Tracking\n\n- **Individual Scores**: Each player keeps track of their own total score.\n- **Score Range**: Scores must remain between **0 and 50 inclusive**.\n\n---\n\n## Turns\n\n### Turn Order\n\n- Determine the starting player by mutual agreement or by chance (e.g., coin toss).\n- Players alternate turns throughout the game.\n\n### Turn Structure\n\n1. **Select a Number Token**:\n   - Choose an available number from the pool (1 to 10).\n2. **Choose an Operation**:\n   - Decide to **add** or **subtract** the selected number from your total score.\n3. **Update Score**:\n   - Adjust your total score accordingly.\n   - Ensure the new score is within **0 to 50 inclusive**.\n4. **Remove Token**:\n   - Remove the selected number token from the pool.\n5. **End Turn**:\n   - Pass the turn to the other player.\n\n---\n\n## Rules and Mechanics\n\n### Score Boundaries\n\n- **Valid Score Range**: Total scores must always be between **0 and 50 inclusive**.\n- **Invalid Moves**:\n  - If adding or subtracting a number would cause your score to go below 0 or above 50, the move is **invalid**, and you **immediately lose** the game.\n\n### Winning the Game\n\n- **Victory Condition**:\n  - The first player to reach a total score of **exactly 50 points** wins.\n- **Alternate Victory**:\n  - If all tokens are used without a player reaching 50, the player with the **higher score** wins.\n\n### Number Token Usage\n\n- **Single Use**:\n  - Each number token can be used **only once**.\n- **Token Availability**:\n  - Tokens are removed from the pool once used.\n\n### Operations\n\n- **Mandatory Action**:\n  - On your turn, you **must** select a number and choose to add or subtract it.\n- **Strategic Choice**:\n  - Decide whether adding or subtracting the number best advances your position.\n\n### Invalid Moves\n\n- **Immediate Loss**:\n  - Making a move that results in a score outside **0 to 50** leads to an immediate loss.\n- **No Passes**:\n  - You cannot skip a turn; you must make a valid move if possible.\n\n---\n\n## Scoring\n\n- **Adding**:\n  - Increase your total score by the value of the selected number.\n- **Subtracting**:\n  - Decrease your total score by the value of the selected number.\n- **Exact Match**:\n  - Aim to reach **exactly 50** to win.\n\n---\n\n## Examples\n\n### Example Game Play\n\n#### Initial Setup\n\n- **Available Numbers**: Two copies each of numbers 1–10.\n- **Scores**:\n  - **Player 1**: 0\n  - **Player 2**: 0\n\n#### Turn Sequence\n\n1. **Turn 1 – Player 1**:\n   - **Selects Number**: 7\n   - **Chooses to**: **Add**\n   - **Calculation**: 0 + 7 = **7**\n   - **New Score**: 7\n   - **Number 7 token removed from pool**.\n\n2. **Turn 2 – Player 2**:\n   - **Selects Number**: 10\n   - **Chooses to**: **Add**\n   - **Calculation**: 0 + 10 = **10**\n   - **New Score**: 10\n   - **Number 10 token removed from pool**.\n\n3. **Turn 3 – Player 1**:\n   - **Selects Number**: 8\n   - **Chooses to**: **Add**\n   - **Calculation**: 7 + 8 = **15**\n   - **New Score**: 15\n   - **Number 8 token removed from pool**.\n\n4. **Turn 4 – Player 2**:\n   - **Selects Number**: 9\n   - **Chooses to**: **Subtract**\n   - **Calculation**: 10 - 9 = **1**\n   - **New Score**: 1\n   - **Number 9 token removed from pool**.\n\n*...Game continues in this manner until one player reaches exactly 50 points.*\n\n---\n\n## Command-Line Interaction Example\n\n```\n--- Player 1's Turn ---\nAvailable Numbers:\n1(x2), 2(x2), 3(x2), 4(x2), 5(x2), 6(x2), 7(x1), 8(x1), 9(x1), 10(x1)\n\nYour Current Score: 15\n\nSelect a number: 5\n\nChoose an operation (A)dd or (S)ubtract: A\n\nYou added 5 to your score.\n\nNew Score: 20\n\nNumber 5 removed from the pool.\n\n--- End of Turn ---\n\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead**:\n  - Anticipate which numbers will help you reach exactly 50.\n- **Monitor the Pool**:\n  - Keep track of remaining numbers to inform your strategy.\n- **Balancing Act**:\n  - Use subtraction to adjust your total when nearing 50.\n- **Opponent's Moves**:\n  - Consider how your opponent's choices affect the numbers available.\n\n---\n\n## Final Notes\n\n- **Fair Play**:\n  - Honest tracking of scores and adherence to rules ensure a fair game.\n- **Winning Gracefully**:\n  - Reach exactly 50 without causing invalid moves.\n- **Losing Gracefully**:\n  - An invalid move results in an immediate loss; accept it as part of the game.\n\n---\n\nEnjoy the challenge of **Target Sum Showdown** and may the best strategist win!",
    "# Number Line Battle\n\n## Objective\n\nBe the player who controls the longest continuous sequence of numbers on the number line. Players take turns claiming numbers, strategically planning to build the longest possible uninterrupted segment. At the end of the game, the player with the longest consecutive sequence of claimed numbers wins. If there is a tie in length, the player with the higher sum of numbers within their longest sequence wins.\n\n## Setup\n\n- **Number Line:** A shared number line ranging from **1** to **20**, with each number initially unclaimed.\n- **Players:** Two players, referred to as **Player 1** and **Player 2**.\n- **Markers:** Each player has a unique marker to indicate claimed numbers:\n  - **Player 1:** `X`\n  - **Player 2:** `O`\n\nThe game begins with an empty number line:\n\n```\n1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20\n```\n\n## Game Components\n\n- **Number Line (1-20):** Represents the playing field where players claim numbers.\n- **Player Markers (`X` and `O`):** Used to indicate which numbers have been claimed by which player.\n- **Claimed Numbers List:** Each player maintains a list of numbers they have claimed.\n\n## Turns\n\n- **Turn Order:** Players alternate turns, starting with **Player 1**.\n- **Actions Per Turn:** On their turn, a player must:\n  1. **Select a Number:** Choose any unclaimed number from the number line.\n  2. **Claim the Number:** Mark the chosen number with their marker (`X` or `O`).\n\n- **Turn Progression:** The game continues with players alternating turns until all numbers on the number line have been claimed.\n\n## Rules and Mechanics\n\n1. **Claiming Numbers:**\n   - Players can claim any unclaimed number on their turn.\n   - Once a number is claimed, it cannot be claimed by the other player.\n\n2. **Objective Building:**\n   - Players aim to create the longest continuous sequence (segment) of numbers they have claimed on the number line.\n\n3. **End of Game:**\n   - The game ends when all numbers from **1** to **20** have been claimed.\n\n4. **Determining the Winner:**\n   - **Primary Condition:** The player with the longest continuous sequence of claimed numbers wins.\n   - **Tie-Breaker:** If both players have continuous sequences of equal length:\n     - The player with the higher **sum** of numbers within their longest sequence wins.\n     - If the sums are equal, the player who took the **second turn** (Player 2) wins.\n\n## Scoring\n\n- **Continuous Sequence:** A series of numbers claimed by a player that are consecutive on the number line without any interruptions by the opponent's claims.\n\n- **Example of Scoring:**\n  - **Player 1's Longest Sequence:** Positions 5-9 (Length = 5; Sum = 35)\n  - **Player 2's Longest Sequence:** Positions 12-16 (Length = 5; Sum = 70)\n  - **Winner:** Player 2 wins due to a higher sum of 70.\n\n## Examples\n\n### Sample Game Play\n\n**Initial Number Line:**\n\n```\n1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20\n```\n\n**Turn Sequence:**\n\n1. **Player 1's Turn:**\n   - Claims number **10**\n   - Number Line:\n\n     ```\n     1  2  3  4  5  6  7  8  9  X  11  12  13  14  15  16  17  18  19  20\n     ```\n\n2. **Player 2's Turn:**\n   - Claims number **11**\n   - Number Line:\n\n     ```\n     1  2  3  4  5  6  7  8  9  X  O  12  13  14  15  16  17  18  19  20\n     ```\n\n3. **Player 1's Turn:**\n   - Claims number **9**\n   - Number Line:\n\n     ```\n     1  2  3  4  5  6  7  8  X  X  O  12  13  14  15  16  17  18  19  20\n     ```\n\n4. **Player 2's Turn:**\n   - Claims number **12**\n   - Number Line:\n\n     ```\n     1  2  3  4  5  6  7  8  X  X  O  O  13  14  15  16  17  18  19  20\n     ```\n\n5. **Proceeding Turns:**\n   - Players continue claiming numbers, aiming to build their longest sequences while blocking their opponent.\n\n**End of Game Scenario:**\n\n- **Player 1's Claimed Numbers:** 5, 6, 7, 8, 9, 10\n- **Player 2's Claimed Numbers:** 11, 12, 13, 14, 15\n\n- **Player 1's Longest Sequence:** Positions 5-10 (Length = 6)\n- **Player 2's Longest Sequence:** Positions 11-15 (Length = 5)\n\n**Winner:** Player 1 wins due to a longer sequence.\n\n### Command-Line Interaction\n\n**Example Turn:**\n\n- **Prompt:** `Player 1's turn. Available numbers: 1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20`\n- **Input:** `Player 1 selects number 10`\n- **Output:**\n\n  ```\n  Number Line:\n  1  2  3  4  5  6  7  8  9  X  11  12  13  14  15  16  17  18  19  20\n  ```\n\n- **Prompt:** `Player 2's turn. Available numbers: 1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 17 18 19 20`\n- **Input:** `Player 2 selects number 11`\n- **Output:**\n\n  ```\n  Number Line:\n  1  2  3  4  5  6  7  8  9  X  O  12  13  14  15  16  17  18  19  20\n  ```\n\n**At Game End:**\n\n- **Final Number Line:**\n\n  ```\n  X  O  X  O  X  X  X  X  X  X  O  O  O  O  O  X  O  X  O  X\n  ```\n\n- **Player 1's Longest Sequence:** Positions 5-10 (Length = 6)\n- **Player 2's Longest Sequence:** Positions 11-15 (Length = 5)\n- **Winner Announcement:** `Player 1 wins with the longest sequence of length 6!`\n\n## Strategic Tips\n\n- **Blocking Opponent:** Pay attention to your opponent's claimed numbers and strategically claim numbers that interrupt their potential sequences.\n\n- **Building Sequences:** Focus on claiming adjacent numbers to build your longest possible sequence.\n\n- **Resource Limitation:** Since the number of available numbers decreases each turn, plan ahead to ensure you can extend your sequence.\n\n- **Tie-Breaker Awareness:** If sequence lengths might tie, aim to claim higher numbers to increase the sum within your sequence.\n\n## Conclusion\n\n\"Number Line Battle\" is a game of strategic thinking and planning. Each move can either strengthen your position or open opportunities for your opponent. By carefully selecting numbers and anticipating your opponent's strategy, you can control the longest continuous segment and secure victory.\n\nEnjoy the battle of numbers!",
    "# Sum Trap: A Two-Player Command-Line Game\n\n## Objective\n\n**Sum Trap** is a strategic two-player turn-based game where the goal is to be the first player to reach an exact total sum of **50** without exceeding it. Players take turns adding numbers to their individual totals, carefully choosing numbers to avoid surpassing the target while tactically restricting their opponent's options.\n\n## Setup\n\n- **Starting Total**: Both players begin with a total sum of **0**.\n- **Number Pool**: Numbers from **1** to **10** are available for players to choose from during their turns.\n- **No Repeats**: Players keep track of the numbers chosen in the previous turn to ensure compliance with the rules.\n\n## Game Components\n\n- **Players**: Two participants, referred to as **Player 1** and **Player 2**.\n- **Totals**: Each player has their own cumulative total sum, starting at **0**.\n- **Number Choices**: Integers from **1** to **10**, representing the possible choices on each turn.\n- **Command-Line Interface**: The game is played in a command-line environment where players input their number choices.\n\n## Turns\n\n1. **Starting Player**: Decide randomly or by agreement who takes the first turn.\n2. **Turn Structure**:\n   - **Number Selection**: On their turn, the player selects a number from **1** to **10**, ensuring it is not the same number their opponent chose on the immediately preceding turn.\n   - **Updating Total**: The chosen number is added to the player's total sum.\n   - **Announcement**: The player announces their chosen number and their new total.\n3. **Turn Progression**: Players alternate turns following the same structure until the game ends.\n\n## Rules and Mechanics\n\n- **Valid Numbers**: On each turn, a player must choose an integer between **1** and **10** inclusive.\n- **No Immediate Repeats**: A player **cannot** select the same number their opponent selected on the **previous turn**. However, they may choose any other valid number, including numbers they themselves have chosen on earlier turns.\n- **Exact Total of 50**: The objective is to reach a total sum of **exactly 50**. If a player's addition would cause their total to exceed 50, they **lose the game immediately**.\n- **Winning the Game**: The first player to reach a total sum of **exactly 50** wins the game.\n- **Forcing a Loss**: If both players are unable to reach exactly 50 without exceeding it, the player whose turn it is and cannot make a valid move without exceeding 50 **loses the game**.\n\n## Scoring\n\n- **Tracking Totals**: Each player's cumulative total is tracked throughout the game.\n- **Victory Condition**: The game does not use a point system beyond reaching the target total. The focus is on strategic number selection to achieve the exact sum of 50.\n\n## Examples\n\n### Example Game Playthrough\n\n#### Initial State:\n- Player 1 Total: 0\n- Player 2 Total: 0\n\n#### Turn 1:\n- **Player 1's Turn**\n  - Chooses **7**.\n  - Player 1 Total: 0 + 7 = **7**\n  - Announces: \"I choose 7. My total is now 7.\"\n\n#### Turn 2:\n- **Player 2's Turn**\n  - Cannot choose **7** (Player 1's last number).\n  - Chooses **10**.\n  - Player 2 Total: 0 + 10 = **10**\n  - Announces: \"I choose 10. My total is now 10.\"\n\n#### Turn 3:\n- **Player 1's Turn**\n  - Cannot choose **10** (Player 2's last number).\n  - Chooses **8**.\n  - Player 1 Total: 7 + 8 = **15**\n  - Announces: \"I choose 8. My total is now 15.\"\n\n#### Turn 4:\n- **Player 2's Turn**\n  - Cannot choose **8** (Player 1's last number).\n  - Chooses **10** (valid since it wasn't chosen in the immediate previous turn by Player 1).\n  - Player 2 Total: 10 + 10 = **20**\n  - Announces: \"I choose 10. My total is now 20.\"\n\n#### Turn 5:\n- **Player 1's Turn**\n  - Cannot choose **10** (Player 2's last number).\n  - Chooses **5**.\n  - Player 1 Total: 15 + 5 = **20**\n  - Announces: \"I choose 5. My total is now 20.\"\n\n#### Turn 6:\n- **Player 2's Turn**\n  - Cannot choose **5** (Player 1's last number).\n  - Chooses **10**.\n  - Player 2 Total: 20 + 10 = **30**\n  - Announces: \"I choose 10. My total is now 30.\"\n\n#### Turn 7:\n- **Player 1's Turn**\n  - Cannot choose **10** (Player 2's last number).\n  - Chooses **7**.\n  - Player 1 Total: 20 + 7 = **27**\n  - Announces: \"I choose 7. My total is now 27.\"\n\n#### Turn 8:\n- **Player 2's Turn**\n  - Cannot choose **7** (Player 1's last number).\n  - Chooses **10**.\n  - Player 2 Total: 30 + 10 = **40**\n  - Announces: \"I choose 10. My total is now 40.\"\n\n#### Turn 9:\n- **Player 1's Turn**\n  - Cannot choose **10** (Player 2's last number).\n  - Chooses **3**.\n  - Player 1 Total: 27 + 3 = **30**\n  - Announces: \"I choose 3. My total is now 30.\"\n\n#### Turn 10:\n- **Player 2's Turn**\n  - Cannot choose **3** (Player 1's last number).\n  - Chooses **10**.\n  - Player 2 Total: 40 + 10 = **50**\n  - Announces: \"I choose 10. My total is now 50.\"\n- **Player 2 Wins** by reaching a total of **50** exactly.\n\n## Command-Line Interaction Sample\n\nBelow is a sample interaction illustrating how the game might proceed in a command-line interface.\n\n```\n--- Sum Trap Game Start ---\nPlayer 1 Total: 0\nPlayer 2 Total: 0\n\nPlayer 1, it's your turn.\nEnter a number between 1 and 10: 7\nYou chose 7. Your total is now 7.\n\nPlayer 2, it's your turn.\n(Note: You cannot choose 7)\nEnter a number between 1 and 10: 10\nYou chose 10. Your total is now 10.\n\nPlayer 1, it's your turn.\n(Note: You cannot choose 10)\nEnter a number between 1 and 10: 8\nYou chose 8. Your total is now 15.\n\nPlayer 2, it's your turn.\n(Note: You cannot choose 8)\nEnter a number between 1 and 10: 10\nYou chose 10. Your total is now 20.\n\n[...game continues in the same pattern...]\n\nPlayer 2, it's your turn.\n(Note: You cannot choose 3)\nEnter a number between 1 and 10: 10\nYou chose 10. Your total is now 50.\n\nCongratulations Player 2! You have reached a total of 50 and won the game!\n```\n\n## Strategy Tips\n\n- **Avoid Repeats**: Keep track of the numbers your opponent selects to avoid invalid moves.\n- **Plan Ahead**: Anticipate future moves to force your opponent into a position where they cannot reach 50 without exceeding it.\n- **Number Selection**: Repeatedly selecting high numbers can quickly increase your total but might limit your options later in the game.\n- **Control the Pace**: Use smaller numbers strategically to adjust your total and manipulate the flow of the game.\n\n---\n\nEnjoy playing **Sum Trap** and may the most strategic player win!",
    "# Factor Duel\n\n## Objective\n\n**Factor Duel** is a strategic two-player turn-based game where players take turns selecting numbers from a shared list. The primary goal is to force your opponent into a position where they cannot select a valid number according to the game rules. The player who successfully does this wins the game.\n\n## Setup\n\n- **Number Pool**: A shared list of integers from **2 to 50** inclusive.\n- **Starting Conditions**:\n  - Both players begin with no numbers selected.\n  - All numbers from 2 to 50 are available for selection.\n- **Player Roles**:\n  - Decide who will be **Player 1** and **Player 2**. This can be determined randomly or by mutual agreement.\n\n## Game Components\n\n- **Number Pool**: The central component of the game, comprising integers **2 through 50**.\n  - Each number is unique and can be selected only once during the game.\n- **Selected Numbers**: A record of numbers that have been picked by both players.\n  - Used to determine valid selections on each turn.\n- **Available Numbers**: The numbers remaining in the Number Pool after selections are made.\n  - Updated after each turn.\n\n## Turns\n\n- **Turn Structure**:\n  1. **Player Action**: On their turn, a player selects a valid number from the Available Numbers.\n  2. **Validation**: The selected number must not be a multiple or a factor of any previously selected number.\n  3. **Update**:\n     - Remove the selected number from the Available Numbers.\n     - Add the selected number to the list of Selected Numbers.\n  4. **Turn Progression**: Turns alternate between players until the game ends.\n\n## Rules and Mechanics\n\n- **Valid Selections**:\n  - A number is valid if it is not a multiple or factor of any number already selected by either player.\n  - **Factors**: Numbers that divide evenly into another number (excluding 1 and the number itself).\n  - **Multiples**: Numbers that are evenly divisible by another number.\n- **Selection Restrictions**:\n  - You cannot select a number that is a **factor** of any previously selected number.\n  - You cannot select a number that is a **multiple** of any previously selected number.\n- **Winning the Game**:\n  - If a player has no valid numbers to select on their turn, they lose the game.\n  - The opponent is declared the winner.\n- **Example of Factors and Multiples**:\n  - If **6** is a previously selected number:\n    - **Factors of 6**: 2, 3\n    - **Multiples of 6**: 12, 18, 24, etc.\n    - The numbers 2, 3, 6, 12, 18, 24, etc., cannot be selected.\n\n## Scoring\n\n- **Victory Condition**:\n  - The game does not use a point-based scoring system.\n  - Winning is achieved by forcing your opponent into a position where they cannot make a valid move on their turn.\n- **Game End**:\n  - The game ends immediately when a player cannot select a valid number.\n  - No draws are possible in this game.\n\n## Examples\n\n### Sample Game Walkthrough\n\n#### Initial Setup\n\n- **Available Numbers**: 2 through 50.\n- **Selected Numbers**: None.\n\n#### Turn 1: Player 1\n\n- **Action**: Selects **7**.\n- **Reasoning**: 7 is a prime number, minimizing immediate factors and multiples.\n- **Update**:\n  - Remove **7** from Available Numbers.\n  - Add **7** to Selected Numbers.\n\n#### Turn 2: Player 2\n\n- **Available Numbers**: 2-6, 8-50 (excluding 7).\n- **Factors and Multiples to Avoid**:\n  - **Factors/Multiples of 7**: 7, 14, 21, 28, 35, 42, 49.\n- **Action**: Selects **9**.\n- **Reasoning**: 9 has minimal overlap with 7.\n- **Update**:\n  - Remove **9** from Available Numbers.\n  - Add **9** to Selected Numbers.\n\n#### Turn 3: Player 1\n\n- **Available Numbers**: 2-6, 8, 10-50 (excluding 7 and 9).\n- **Factors and Multiples to Avoid**:\n  - **From 7**: 7, 14, 21, 28, 35, 42, 49.\n  - **From 9**: 3, 9, 18, 27, 36, 45.\n- **Action**: Selects **4**.\n- **Update**:\n  - Remove **4** from Available Numbers.\n  - Add **4** to Selected Numbers.\n\n#### Turn 4: Player 2\n\n- **Available Numbers**: 2, 5, 6, 8, 10-50 (excluding previously selected and invalid numbers).\n- **Factors and Multiples to Avoid**:\n  - **From 7**: As before.\n  - **From 9**: As before.\n  - **From 4**: 2, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48.\n- **Action**: Selects **5**.\n- **Update**:\n  - Remove **5** from Available Numbers.\n  - Add **5** to Selected Numbers.\n\n#### Turn 5: Player 1\n\n- **Available Numbers**: 6, 10, 11, 13, 15, 17, 19, 22, 23, 25, 26, 29, 31, 33, 34, 37, 38, 39, 41, 43, 46, 47, 50.\n- **Factors and Multiples to Avoid**:\n  - **From 7**: As before.\n  - **From 9**: As before.\n  - **From 4**: As before.\n  - **From 5**: 5, 10, 15, 20, 25, 30, 35, 40, 45, 50.\n- **Action**: Selects **11**.\n- **Update**:\n  - Remove **11** from Available Numbers.\n  - Add **11** to Selected Numbers.\n\n#### Subsequent Turns\n\n- The players continue in this manner, with the list of factors and multiples growing each turn.\n- Eventually, one player will be unable to select a valid number.\n\n### Command-Line Interaction Example\n\nBelow is an example of how the game might be played in a command-line interface.\n\n#### Game Start\n\n```\nWelcome to Factor Duel!\n\nAvailable Numbers: 2 through 50\n\nPlayer 1, it's your turn.\nSelect a number: 7\n\nNumber 7 selected.\n\nPlayer 2, it's your turn.\nAvailable Numbers: 2-6, 8-50 (excluding 7 and its factors/multiples).\nSelect a number: 9\n\nNumber 9 selected.\n\nPlayer 1, it's your turn.\nAvailable Numbers updated.\nSelect a number: 4\n\nNumber 4 selected.\n\nPlayer 2, it's your turn.\nAvailable Numbers updated.\nSelect a number: 5\n\nNumber 5 selected.\n\nPlayer 1, it's your turn.\nAvailable Numbers updated.\nSelect a number: 11\n\nNumber 11 selected.\n\n... (game continues)\n\nPlayer 2, it's your turn.\nNo valid numbers available.\nPlayer 1 wins the game!\n```\n\n## Strategic Tips\n\n- **Select Prime Numbers Early**: Choosing prime numbers can limit your opponent's options due to fewer factors.\n- **Avoid Common Factors**: Be mindful of numbers that share common factors with previously selected numbers.\n- **Force Multiples**: Try to select numbers whose multiples are abundant in the remaining pool, restricting your opponent's choices.\n- **Plan Ahead**: Consider the impact of your selection on future turns, not just the immediate next move.\n\n## Conclusion\n\nFactor Duel is a simple yet strategic game that tests players' numerical reasoning and foresight. By carefully selecting numbers and anticipating your opponent's moves, you can gain the upper hand and secure victory.\n\nHave fun and may the best strategist win!",
    "# Factor Frenzy\n\nWelcome to **Factor Frenzy**, a strategic two-player turn-based game of numbers and foresight. Engage in a battle of wits as you and your opponent select numbers, eliminating options and aiming to outmaneuver each other. Simple to learn yet rich in strategy, **Factor Frenzy** promises quick gameplay with depth for those who seek it.\n\n## Objective\n\nThe primary goal of **Factor Frenzy** is to be the last player able to select a valid number from the available list. On each turn, players pick a number, which then affects the choices available in subsequent turns. A player loses if they cannot select a valid number on their turn.\n\n## Setup\n\n1. **Number Pool**: Create a list of integers from **2 to 50**, inclusive.\n2. **Available Numbers**: Initially, all numbers in the list are available for selection.\n3. **Starting Player**: Decide who goes first (e.g., flip a coin or have the younger player start).\n\n## Game Components\n\n- **Number Pool**: The numbers **2 through 50** act as the central elements of the game.\n- **Selection List**: A dynamic list that updates as numbers are chosen and eliminated.\n- **Player Indicators**: Each player may be represented by their name or an identifier (e.g., Player 1 and Player 2).\n\nThe game is played in a command-line interface where the current state of the **Available Numbers** list is displayed after each turn.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with the designated first player.\n- **Player Actions**:\n  - **Select a Number**: On your turn, choose any number from the **Available Numbers** list.\n  - **Update List**: After selection, eliminate certain numbers from the list based on the rules.\n- **Turn Progression**: The game continues with players alternating turns until a player cannot make a valid selection on their turn.\n\n## Rules and Mechanics\n\n### 1. Selecting a Number\n\n- **Valid Selection**: You may select **any number** from the **Available Numbers** list.\n- **Unique Selection**: A number can only be selected **once** during the game.\n\n### 2. Eliminating Numbers\n\nAfter a number is selected:\n\n- **Remove the Selected Number**: The chosen number is removed from the **Available Numbers** list.\n- **Remove Proper Divisors**:\n  - Eliminate all proper divisors of the selected number from the list.\n  - *Proper Divisors* are numbers less than the selected number that divide it exactly (without leaving a remainder).\n- **Remove Proper Multiples**:\n  - Eliminate all proper multiples of the selected number from the list.\n  - *Proper Multiples* are numbers greater than the selected number that the selected number divides into exactly.\n\n**Note**: The number **1** is excluded from the game and is not considered a proper divisor for the purposes of elimination.\n\n### 3. Winning the Game\n\n- **Victory Condition**: If your opponent cannot select a valid number on their turn because there are no valid options remaining, you win the game.\n- **Forfeit**: If a player erroneously selects an invalid number (e.g., a number not in the Available Numbers list), they forfeit the game.\n\n## Scoring\n\n**Factor Frenzy** is typically played in single rounds with the winner being the player who successfully forces the opponent into a position with no valid moves.\n\nFor extended play:\n\n- **Match Play**: Players can compete in a series of games (e.g., best of three or five).\n- **Point System**:\n  - **Win**: 1 point.\n  - **Loss**: 0 points.\n- The player with the most points at the end of the series wins the match.\n\n## Examples\n\n### Example Game Play\n\n**Initial Available Numbers**:\n\n```\n2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,\n38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50\n```\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**:\n   - **Selects**: **7**\n   - **Eliminates**:\n     - **Selected Number**: 7\n     - **Proper Divisors of 7**: None (since 1 is excluded)\n     - **Proper Multiples of 7**: 14, 21, 28, 35, 42, 49\n   - **Updated Available Numbers**: (Numbers excluding 7, 14, 21, 28, 35, 42, 49)\n\n2. **Player 2's Turn**:\n   - **Selects**: **9**\n   - **Eliminates**:\n     - **Selected Number**: 9\n     - **Proper Divisors of 9**: 3\n     - **Proper Multiples of 9**: 18, 27, 36, 45\n   - **Updated Available Numbers**: (Remaining numbers excluding 9, 3, 18, 27, 36, 45)\n\n3. **Player 1's Turn**:\n   - **Selects**: **11**\n   - **Eliminates**:\n     - **Selected Number**: 11\n     - **Proper Divisors of 11**: None\n     - **Proper Multiples of 11**: 22, 33, 44\n   - **Updated Available Numbers**: (Remaining numbers excluding 11, 22, 33, 44)\n\n4. **Player 2's Turn**:\n   - **Selects**: **13**\n   - **Eliminates**:\n     - **Selected Number**: 13\n     - **Proper Divisors of 13**: None\n     - **Proper Multiples of 13**: 26, 39\n   - **Updated Available Numbers**: (Remaining numbers excluding 13, 26, 39)\n\n5. **Player 1's Turn**:\n   - **Selects**: **5**\n   - **Eliminates**:\n     - **Selected Number**: 5\n     - **Proper Divisors of 5**: None\n     - **Proper Multiples of 5**: 10, 15, 20, 25, 30, 35 (already eliminated), 40, 45 (already eliminated), 50\n   - **Updated Available Numbers**: (Remaining numbers excluding 5, 10, 15, 20, 25, 30, 40, 50)\n\n6. **Player 2's Turn**:\n   - **Selects**: **17**\n   - **Eliminates**:\n     - **Selected Number**: 17\n     - **Proper Divisors of 17**: None\n     - **Proper Multiples of 17**: 34\n   - **Updated Available Numbers**: (Remaining numbers excluding 17, 34)\n\n7. **Player 1's Turn**:\n   - **Selects**: **19**\n   - **Eliminates**:\n     - **Selected Number**: 19\n     - **Proper Divisors of 19**: None\n     - **Proper Multiples of 19**: 38\n   - **Updated Available Numbers**: (Remaining numbers excluding 19, 38)\n\n8. **Player 2's Turn**:\n   - **Selects**: **23**\n   - **Eliminates**:\n     - **Selected Number**: 23\n     - **Proper Divisors of 23**: None\n     - **Proper Multiples of 23**: 46\n   - **Updated Available Numbers**: (Remaining numbers excluding 23, 46)\n\n9. **Player 1's Turn**:\n   - **Selects**: **29**\n   - **Eliminates**:\n     - **Selected Number**: 29\n     - **Proper Divisors of 29**: None\n     - **Proper Multiples of 29**: None (since multiples exceed 50)\n   - **Updated Available Numbers**: (Remaining numbers excluding 29)\n\n10. **Player 2's Turn**:\n    - **Selects**: **31**\n    - **Eliminates**:\n      - **Selected Number**: 31\n      - **Proper Divisors of 31**: None\n      - **Proper Multiples of 31**: None (since multiples exceed 50)\n    - **Updated Available Numbers**: (Remaining numbers excluding 31)\n\n11. **Player 1's Turn**:\n    - **Selects**: **37**\n    - **Eliminates**:\n      - **Selected Number**: 37\n      - **Proper Divisors of 37**: None\n      - **Proper Multiples of 37**: None (since multiples exceed 50)\n    - **Updated Available Numbers**: (Remaining numbers excluding 37)\n\n12. **Player 2's Turn**:\n    - **Selects**: **41**\n    - **Eliminates**:\n      - **Selected Number**: 41\n      - **Proper Divisors of 41**: None\n      - **Proper Multiples of 41**: None (since multiples exceed 50)\n    - **Updated Available Numbers**: (Remaining numbers excluding 41)\n\n13. **Player 1's Turn**:\n    - **Selects**: **43**\n    - **Eliminates**:\n      - **Selected Number**: 43\n      - **Proper Divisors of 43**: None\n      - **Proper Multiples of 43**: None (since multiples exceed 50)\n    - **Updated Available Numbers**: (Remaining numbers excluding 43)\n\n14. **Player 2's Turn**:\n    - **Selects**: **47**\n    - **Eliminates**:\n      - **Selected Number**: 47\n      - **Proper Divisors of 47**: None\n      - **Proper Multiples of 47**: None (since multiples exceed 50)\n    - **Updated Available Numbers**: (Remaining numbers excluding 47)\n\n15. **Player 1's Turn**:\n    - **Available Numbers**: None\n    - **Outcome**: Player 1 cannot make a valid move.\n    - **Winner**: **Player 2**\n\n### Command-Line Interaction Example\n\n```plaintext\nWelcome to Factor Frenzy!\n\nAvailable Numbers:\n2, 3, 4, ..., 50\n\nPlayer 1's turn.\nSelect a number: 7\nYou selected 7.\nEliminated: 7, 14, 21, 28, 35, 42, 49\n\nAvailable Numbers:\n2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24,\n25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46,\n47, 48, 50\n\nPlayer 2's turn.\nSelect a number: 9\nYou selected 9.\nEliminated: 9, 3, 18, 27, 36, 45\n\n... [Game continues as per the example above] ...\n\nPlayer 1's turn.\nNo available numbers left to select.\nPlayer 1 cannot make a valid move.\nPlayer 2 wins the game!\n```\n\n## Strategic Tips\n\n- **Prioritize Prime Numbers**: Selecting prime numbers can be advantageous since they have no proper divisors (other than 1, which is excluded).\n- **Block Opponent Options**: Choose numbers whose multiples are still available to eliminate more options for your opponent.\n- **Plan Ahead**: Keep track of remaining numbers and anticipate possible moves to avoid being trapped without options.\n- **Avoid Early Selection of Highly Composite Numbers**: Numbers with many divisors and multiples (like 12, 18, 24) can reduce your own future options along with your opponent's.\n\n## Conclusion\n\n**Factor Frenzy** is a captivating game that combines simple arithmetic with strategic planning. Its straightforward rules make it easy to learn, while the depth of strategy provides a challenge for players seeking a competitive experience. Enjoy sharpening your numerical and tactical skills in this exciting numerical showdown!",
    "# **Factor Frenzy**\n\n## **Objective**\n\nBe the player to force your opponent into a position where they cannot make a valid move by strategically selecting numbers and eliminating options from the shared pool of numbers. Victory is achieved when your opponent has no available moves on their turn.\n\n## **Setup**\n\n1. **Number Pool Initialization**: Create a shared list of integers ranging from **2 to 50** inclusive.\n   \n2. **Starting Player**: Determine who takes the first turn, either randomly or by mutual agreement.\n\n## **Game Components**\n\n- **Number Pool**: A list containing integers from **2 to 50**. This pool represents the available numbers players can select during the game.\n  \n- **Selected Numbers**: A record of numbers that have been chosen during the game, along with their factors and multiples which are subsequently removed from the Number Pool.\n\n- **Players**: Two players, referred to as **Player 1** and **Player 2**.\n\n## **Turns**\n\n- Players alternate turns starting with the designated starting player.\n  \n- **Turn Structure**:\n  1. **Selection Phase**: The active player selects an available number from the Number Pool.\n  \n  2. **Elimination Phase**: After selecting, all factors and multiples of the chosen number are removed from the Number Pool.\n\n- The game continues in this fashion until a player cannot make a valid selection on their turn.\n\n## **Rules and Mechanics**\n\n1. **Valid Selection**:\n   - On your turn, you must select a number from the current Number Pool.\n   - If there are no available numbers to select, you lose the game.\n\n2. **Number Selection**:\n   - **Choosing a Number**: Select any remaining number from the Number Pool.\n\n3. **Elimination of Numbers**:\n   - **Factors and Multiples Removal**:\n     - Once a number is selected, both that number and all of its factors and multiples are removed from the Number Pool.\n     - **Factors**: Numbers less than the chosen number that divide evenly into it.\n     - **Multiples**: Numbers greater than the chosen number that the chosen number divides evenly into.\n\n   - **Example**:\n     - If **12** is selected, remove **2, 3, 4, 6, 12, 24, 36, 48** from the Number Pool.\n\n4. **Unavailable Moves**:\n   - If a player cannot select a number because the Number Pool is empty, or all remaining numbers have been eliminated due to previous selections, that player loses.\n\n5. **Winning the Game**:\n   - You win by forcing your opponent into a position where they cannot make a valid move on their turn.\n\n6. **Game End**:\n   - The game ends immediately when a player has no valid moves on their turn.\n\n## **Scoring**\n\n- **Victory**: Winning the game constitutes achieving the primary objective and is noted as a win for the player.\n  \n- **Match Play**:\n  - Players may choose to play multiple games in a match format where the first player to reach a predetermined number of victories wins the match.\n\n## **Examples**\n\n### **Example 1: Basic Gameplay**\n\n**Initial Number Pool**: 2 to 10 (for simplicity in this example).\n\n**Turn 1 - Player 1**:\n- **Selection**: Chooses **5**.\n- **Elimination**:\n  - Factors of **5**: **5** (itself).\n  - Multiples of **5** within the pool: **10**.\n  - **Numbers Removed**: **5**, **10**.\n- **Updated Number Pool**: **2, 3, 4, 6, 7, 8, 9**.\n\n**Turn 2 - Player 2**:\n- **Selection**: Chooses **4**.\n- **Elimination**:\n  - Factors of **4**: **2**, **4**.\n  - Multiples of **4** within the pool: **8**.\n  - **Numbers Removed**: **2**, **4**, **8**.\n- **Updated Number Pool**: **3, 6, 7, 9**.\n\n**Turn 3 - Player 1**:\n- **Selection**: Chooses **9**.\n- **Elimination**:\n  - Factors of **9**: **3**, **9**.\n  - Multiples of **9** within the pool: None (since pool goes up to 10).\n  - **Numbers Removed**: **3**, **9**.\n- **Updated Number Pool**: **6**, **7**.\n\n**Turn 4 - Player 2**:\n- **Selection**: Chooses **6**.\n- **Elimination**:\n  - Factors of **6**: **6** (itself).\n  - Multiples of **6** within the pool: None.\n  - **Numbers Removed**: **6**.\n- **Updated Number Pool**: **7**.\n\n**Turn 5 - Player 1**:\n- **Selection**: Chooses **7**.\n- **Elimination**:\n  - Factors of **7**: **7** (itself).\n  - Multiples of **7** within the pool: None.\n  - **Numbers Removed**: **7**.\n- **Updated Number Pool**: Empty.\n\n**Turn 6 - Player 2**:\n- **No Valid Moves**: The Number Pool is empty.\n- **Result**: **Player 2 loses**, **Player 1 wins**.\n\n### **Example 2: Strategic Play**\n\n**Initial Number Pool**: 2 to 20.\n\n**Turn 1 - Player 1**:\n- **Selection**: Chooses **7**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 7, 14**.\n\n**Turn 2 - Player 2**:\n- **Selection**: Chooses **9**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 3, 9, 18**.\n\n**Turn 3 - Player 1**:\n- **Selection**: Chooses **8**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 2, 4, 8, 16**.\n\n**Turn 4 - Player 2**:\n- **Selection**: Chooses **5**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 5, 10, 15, 20**.\n\n**Turn 5 - Player 1**:\n- **Selection**: Chooses **11**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 11**.\n\n**Turn 6 - Player 2**:\n- **Selection**: Chooses **13**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 13**.\n\n**Turn 7 - Player 1**:\n- **Selection**: Chooses **17**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 17**.\n\n**Turn 8 - Player 2**:\n- **Selection**: Chooses **19**.\n- **Elimination**:\n  - **Numbers Removed**: **1, 19**.\n\n**Turn 9 - Player 1**:\n- **No Valid Moves**: Remaining numbers (**12**, **6**) have been eliminated as factors/multiples.\n- **Result**: **Player 1 loses**, **Player 2 wins**.\n\n---\n\n**Note on Strategy**:\n\n- **Prime Numbers**: Selecting prime numbers can be advantageous as they have fewer factors and multiples, thus eliminating fewer options from the Number Pool for yourself but potentially limiting your opponent's future moves.\n\n- **Composite Numbers**: Choosing composite numbers with many factors and multiples can eliminate more options from the Number Pool, potentially restricting your opponent's valid moves.\n\n## **Command-Line Interaction Example**\n\n### **Game Start**\n\n```plaintext\nWelcome to Factor Frenzy!\n\nAvailable Numbers: 2 through 20\n\nPlayer 1, it's your turn.\nEnter a number to select: 8\nYou selected 8.\nNumbers removed: 1, 2, 4, 8, 16\n\nAvailable Numbers: 3, 5, 6, 7, 9, 10, 12, 14, 15, 18, 20\n\nPlayer 2, it's your turn.\nEnter a number to select: 9\nYou selected 9.\nNumbers removed: 1, 3, 9, 18\n\nAvailable Numbers: 5, 6, 7, 10, 12, 14, 15, 20\n\nPlayer 1, it's your turn.\nEnter a number to select: 7\nYou selected 7.\nNumbers removed: 1, 7, 14\n\nAvailable Numbers: 5, 6, 10, 12, 15, 20\n\nPlayer 2, it's your turn.\nEnter a number to select: 5\nYou selected 5.\nNumbers removed: 1, 5, 10, 15, 20\n\nAvailable Numbers: 6, 12\n\nPlayer 1, it's your turn.\nEnter a number to select: 12\nYou selected 12.\nNumbers removed: 1, 2, 3, 4, 6, 12\n\nAvailable Numbers: None\n\nPlayer 2, no valid moves remaining. Player 1 wins!\n```\n\n---\n\nWith these rules and examples, you are now ready to play **Factor Frenzy**. Remember to think ahead and plan your moves strategically to limit your opponent's options and secure your victory. Enjoy the game!",
    "# Divisor Duel\n\n## Objective\n\nDivisor Duel is a strategic two-player turn-based game where players take turns reducing a common number by its proper divisors. The primary goal is to be the last player able to make a valid move. A player wins by forcing their opponent into a position where the opponent cannot make a move because the current number has no proper divisors left.\n\n## Setup\n\n- **Starting Number**: The game begins with a starting number **N**, which is randomly chosen between **50** and **100** (inclusive).\n- **Player Assignment**: Two players are designated as **Player 1** and **Player 2**. Determine who goes first (e.g., flip a coin or mutual agreement).\n\n## Game Components\n\n- **Current Number (N)**: A shared number that changes throughout the game based on players' moves.\n- **Proper Divisors**: Numbers less than **N** that divide **N** evenly (excluding **N** itself).\n- **Command-Line Interface**: Players input their chosen divisors and receive updates through a text-based interface.\n\n## Turns\n\n- **Turn Order**: Players alternate turns, starting with **Player 1**.\n- **Player Actions**:\n  - **Select a Proper Divisor**: On their turn, a player must choose a proper divisor of the current number **N**.\n  - **Update N**: Subtract the chosen divisor from **N** to form the new current number.\n- **Turn Progression**: The game continues with the updated **N**, and the next player takes their turn.\n\n## Rules and Mechanics\n\n1. **Valid Moves**:\n   - A move is valid if the chosen number is a proper divisor of the current number **N**.\n   - Proper divisors are positive integers less than **N** that divide **N** without leaving a remainder.\n2. **Subtracting Divisors**:\n   - The chosen proper divisor is subtracted from **N** to get a new **N**.\n   - Example: If **N** is **60** and a player selects **15**, the new **N** becomes **45** (**60 - 15 = 45**).\n3. **Winning the Game**:\n   - A player wins if their opponent cannot make a valid move on their turn.\n   - If the current number **N** becomes **1** or a prime number (with no proper divisors other than **1**), and it's the opponent's turn, the current player wins.\n4. **Invalid Moves**:\n   - If a player selects a number that is not a proper divisor of **N**, the move is invalid.\n   - The player must choose a valid proper divisor or forfeit the game if none are available.\n5. **No Skipping Turns**:\n   - Players cannot skip their turn. If a valid move is available, it must be made.\n\n## Scoring\n\n- **Victory**: The player who makes the last valid move wins the game.\n- **Loss**: The player who cannot make a valid move on their turn loses.\n- **No Draws**: The game cannot end in a draw; play continues until one player wins.\n\n## Examples\n\n### Example Game Play\n\n**Starting Number (N):** 60\n\n#### Turn 1:\n- **Player 1's Turn**\n  - Proper divisors of **60**: 1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30\n  - **Player 1** chooses **15**\n  - **N** becomes **45** (**60 - 15 = 45**)\n\n#### Turn 2:\n- **Player 2's Turn**\n  - Proper divisors of **45**: 1, 3, 5, 9, 15\n  - **Player 2** chooses **15**\n  - **N** becomes **30** (**45 - 15 = 30**)\n\n#### Turn 3:\n- **Player 1's Turn**\n  - Proper divisors of **30**: 1, 2, 3, 5, 6, 10, 15\n  - **Player 1** chooses **15**\n  - **N** becomes **15** (**30 - 15 = 15**)\n\n#### Turn 4:\n- **Player 2's Turn**\n  - Proper divisors of **15**: 1, 3, 5\n  - **Player 2** chooses **5**\n  - **N** becomes **10** (**15 - 5 = 10**)\n\n#### Turn 5:\n- **Player 1's Turn**\n  - Proper divisors of **10**: 1, 2, 5\n  - **Player 1** chooses **5**\n  - **N** becomes **5** (**10 - 5 = 5**)\n\n#### Turn 6:\n- **Player 2's Turn**\n  - Proper divisors of **5**: 1\n  - **Player 2** chooses **1**\n  - **N** becomes **4** (**5 - 1 = 4**)\n\n#### Turn 7:\n- **Player 1's Turn**\n  - Proper divisors of **4**: 1, 2\n  - **Player 1** chooses **2**\n  - **N** becomes **2** (**4 - 2 = 2**)\n\n#### Turn 8:\n- **Player 2's Turn**\n  - Proper divisors of **2**: 1\n  - **Player 2** chooses **1**\n  - **N** becomes **1** (**2 - 1 = 1**)\n\n#### Turn 9:\n- **Player 1's Turn**\n  - **N** is **1**\n  - **1** has no proper divisors (since it is not greater than 1)\n  - **Player 1** cannot make a valid move\n- **Player 2 Wins!**\n\n### Command-Line Interaction Example\n\n```\nStarting Number (N): 60\n\nPlayer 1's Turn:\nProper divisors of 60: 1,2,3,4,5,6,10,12,15,20,30\nEnter your chosen divisor: 15\nNew N is 45\n\nPlayer 2's Turn:\nProper divisors of 45: 1,3,5,9,15\nEnter your chosen divisor: 15\nNew N is 30\n\nPlayer 1's Turn:\nProper divisors of 30: 1,2,3,5,6,10,15\nEnter your chosen divisor: 15\nNew N is 15\n\nPlayer 2's Turn:\nProper divisors of 15: 1,3,5\nEnter your chosen divisor: 5\nNew N is 10\n\nPlayer 1's Turn:\nProper divisors of 10: 1,2,5\nEnter your chosen divisor: 5\nNew N is 5\n\nPlayer 2's Turn:\nProper divisors of 5: 1\nEnter your chosen divisor: 1\nNew N is 4\n\nPlayer 1's Turn:\nProper divisors of 4: 1,2\nEnter your chosen divisor: 2\nNew N is 2\n\nPlayer 2's Turn:\nProper divisors of 2: 1\nEnter your chosen divisor: 1\nNew N is 1\n\nPlayer 1's Turn:\nNo valid moves available.\nPlayer 2 Wins!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's possible moves by considering the resulting **N** after your move.\n- **Avoid Leaving Prime Numbers**: Try not to reduce **N** to a prime number (other than 2) on your turn, as it leaves fewer options for your opponent.\n- **Control the Game Flow**: Use larger proper divisors when it benefits you, especially if it forces your opponent into a losing position.\n\n## Summary\n\nDivisor Duel is a simple yet strategic game that tests players' mathematical skills and foresight. With straightforward rules and fast-paced gameplay, it's easy to learn and enjoyable to master. Compete with a friend in this engaging numerical showdown and see who can outsmart the other in the battle of divisors!",
    "**Number Drop**\n\n**Objective:**\n\nBe the first player to reduce the current number to zero by strategically subtracting valid divisors. The player who successfully brings the current number to zero wins the game. If a player cannot make a valid move on their turn, they lose.\n\n---\n\n**Setup:**\n\n- The game begins with a starting number known as the **Current Number**, which is a positive integer. The standard starting number is **50**, but players can agree on a different positive integer to vary the game's difficulty or length.\n- No additional materials or pieces are required.\n\n---\n\n**Game Components:**\n\n- **Current Number:** A positive integer that changes throughout the game as players subtract numbers from it.\n- **Allowed Divisors:** Integers from **1** to **9** inclusive. On each turn, a player may choose any of these numbers that exactly divide the Current Number.\n\n---\n\n**Turns:**\n\n1. **Turn Order:**\n   - Players decide who will take the first turn, either by agreement or by a random method such as a coin toss.\n   - Players then alternate turns throughout the game.\n\n2. **Player Actions:**\n   - On their turn, a player must:\n     - **Identify Valid Divisors:** Determine all numbers from 1 to 9 that are divisors of the Current Number.\n     - **Choose a Divisor:** Select one valid divisor to subtract from the Current Number.\n     - **Subtract the Divisor:** Subtract the chosen divisor from the Current Number to obtain a **New Current Number**.\n     - **Announce the Move:** Clearly state the chosen divisor and the New Current Number.\n   - If the player reduces the Current Number to zero with their subtraction, they **win** the game.\n   - If the player cannot find a valid divisor to subtract (i.e., there are no numbers between 1 and 9 that divide the Current Number exactly), they **lose** the game.\n\n---\n\n**Rules and Mechanics:**\n\n1. **Valid Moves:**\n   - A move is valid if:\n     - The chosen number is an integer between **1** and **9** inclusive.\n     - The chosen number **exactly divides** the Current Number (no remainders).\n     - Subtracting the chosen number from the Current Number results in a **non-negative integer** (zero or positive).\n\n2. **Winning the Game:**\n   - A player wins if they reduce the Current Number to **zero** on their turn by making a valid move.\n\n3. **Losing the Game:**\n   - A player loses if:\n     - They cannot make a valid move on their turn because there are no valid divisors available.\n     - They make an invalid move (e.g., choose a number that is not a divisor of the Current Number, choose a number outside of 1 to 9, or perform incorrect subtraction).\n\n4. **No Draws:**\n   - The game cannot end in a draw. It continues until one player wins or loses according to the rules.\n\n5. **Player Conduct:**\n   - Players must perform calculations carefully and may use paper and pencil if needed.\n   - Both players should verify the validity of each move and the calculations.\n\n---\n\n**Scoring:**\n\n- No points are accumulated during the game.\n- The primary goal is to win by reducing the Current Number to zero first.\n- Players may keep track of wins over multiple games if desired.\n\n---\n\n**Examples:**\n\n*Example Game:*\n\n- **Starting Current Number:** 50\n\n---\n\n1. **Player 1's Turn:**\n\n   - **Current Number:** 50\n   - **Valid Divisors (1-9):** 1, 2, 5\n   - **Chosen Divisor:** 5\n   - **Calculation:** 50 - 5 = 45\n   - **New Current Number:** 45\n   - **Announcement:** \"I subtract 5 from 50, the new Current Number is 45.\"\n\n---\n\n2. **Player 2's Turn:**\n\n   - **Current Number:** 45\n   - **Valid Divisors (1-9):** 1, 3, 5, 9\n   - **Chosen Divisor:** 9\n   - **Calculation:** 45 - 9 = 36\n   - **New Current Number:** 36\n   - **Announcement:** \"I subtract 9 from 45, the new Current Number is 36.\"\n\n---\n\n3. **Player 1's Turn:**\n\n   - **Current Number:** 36\n   - **Valid Divisors (1-9):** 1, 2, 3, 4, 6, 9\n   - **Chosen Divisor:** 6\n   - **Calculation:** 36 - 6 = 30\n   - **New Current Number:** 30\n   - **Announcement:** \"I subtract 6 from 36, the new Current Number is 30.\"\n\n---\n\n4. **Player 2's Turn:**\n\n   - **Current Number:** 30\n   - **Valid Divisors (1-9):** 1, 2, 3, 5, 6\n   - **Chosen Divisor:** 6\n   - **Calculation:** 30 - 6 = 24\n   - **New Current Number:** 24\n   - **Announcement:** \"I subtract 6 from 30, the new Current Number is 24.\"\n\n---\n\n5. **Player 1's Turn:**\n\n   - **Current Number:** 24\n   - **Valid Divisors (1-9):** 1, 2, 3, 4, 6, 8\n   - **Chosen Divisor:** 8\n   - **Calculation:** 24 - 8 = 16\n   - **New Current Number:** 16\n   - **Announcement:** \"I subtract 8 from 24, the new Current Number is 16.\"\n\n---\n\n6. **Player 2's Turn:**\n\n   - **Current Number:** 16\n   - **Valid Divisors (1-9):** 1, 2, 4, 8\n   - **Chosen Divisor:** 8\n   - **Calculation:** 16 - 8 = 8\n   - **New Current Number:** 8\n   - **Announcement:** \"I subtract 8 from 16, the new Current Number is 8.\"\n\n---\n\n7. **Player 1's Turn:**\n\n   - **Current Number:** 8\n   - **Valid Divisors (1-9):** 1, 2, 4, 8\n   - **Chosen Divisor:** 8\n   - **Calculation:** 8 - 8 = 0\n   - **New Current Number:** 0\n   - **Announcement:** \"I subtract 8 from 8, the new Current Number is 0. I win!\"\n\n---\n\n**Command-Line Interaction Example:**\n\n*Assuming input prompts and outputs for clarity.*\n\n- **Game Start:**\n\n  ```\n  Starting Number: 50\n  ```\n\n- **Player 1's Turn:**\n\n  ```\n  Current Number: 50\n  Valid Divisors (1-9): 1, 2, 5\n  Enter your chosen divisor: 5\n  You subtracted 5. New Current Number is 45.\n  ```\n\n- **Player 2's Turn:**\n\n  ```\n  Current Number: 45\n  Valid Divisors (1-9): 1, 3, 5, 9\n  Enter your chosen divisor: 9\n  You subtracted 9. New Current Number is 36.\n  ```\n\n- *(Subsequent turns proceed similarly.)*\n\n- **Player 1's Winning Move:**\n\n  ```\n  Current Number: 8\n  Valid Divisors (1-9): 1, 2, 4, 8\n  Enter your chosen divisor: 8\n  You subtracted 8. New Current Number is 0.\n  Congratulations! You reduced the number to zero and won the game!\n  ```\n\n---\n\n**Strategic Tips:**\n\n- **Plan Ahead:** Anticipate future moves by considering how your choice will affect the Current Number and the options available to your opponent on their next turn.\n- **Control the Game Flow:** Try to leave the Current Number in a state where your opponent has fewer valid divisors to choose from.\n- **Avoid Common Divisors:** If possible, subtract divisors that are less likely to be available on your opponent's turn, limiting their options.\n- **Balance Risk and Reward:** Sometimes, choosing a smaller divisor may be strategically better to avoid giving your opponent an advantage.\n\n---\n\n**Conclusion:**\n\n*Number Drop* is a simple yet strategic game that challenges players to think ahead and make calculated decisions. With straightforward rules and minimal requirements, it's perfect for quick matches in a command-line interface. Enjoy sharpening your mathematical and strategic skills as you face off against your opponent in this engaging numerical duel!\n\n---\n\n**Note to Players:**\n\n- Always ensure that calculations are accurate to maintain fair play.\n- Feel free to adjust the starting Current Number for varied difficulty levels.\n- Enjoy the game and may the best strategist win!\n\n---",
    "# Divisor Duel: Rule Book\n\n## Objective\n\nDivisor Duel is a strategic two-player turn-based game where players take turns selecting numbers from a shared pool. The primary goal is to be the last player able to select a valid number according to the game rules. A player wins by forcing their opponent into a position where they cannot make a valid move on their turn.\n\n## Setup\n\n1. **Number Pool**: The game uses a pool of integers ranging from **2 to 50** inclusive.\n2. **Starting Player**: Decide who will take the first turn (Player 1) and who will take the second turn (Player 2). This can be determined randomly or by mutual agreement.\n3. **Game Board**: Since the game is played in a command-line interface, the game board is represented by the list of available numbers in the pool.\n\n## Game Components\n\n- **Number Pool**: A shared list of available numbers from **2 to 50**.\n- **Player Selections**: Each player maintains a list of numbers they have selected during the game.\n- **Command-Line Interface**: Players input their chosen numbers through the command line when prompted.\n\n## Turns\n\n1. **Turn Order**: Players alternate turns starting with Player 1.\n2. **Turn Structure**:\n   - **Available Numbers Display**: At the beginning of a player's turn, the game displays the list of available numbers in the pool.\n   - **Player's Previous Selections Display**: The game displays both players' previous selections for reference.\n   - **Number Selection**: The current player selects a valid number from the pool according to the game rules.\n   - **Validation**: The game checks if the chosen number is valid.\n   - **Update**: If valid, the chosen number is removed from the pool and added to the player's list of selections.\n   - **Turn Ends**: The turn passes to the next player.\n\n## Rules and Mechanics\n\n1. **Valid Number Selection**:\n   - On their turn, a player must select a number from the pool that is **not a multiple nor a divisor** of any number previously selected by **either player**.\n   - **Example**: If a player has previously selected the number 5, neither player can later select numbers like 1 (divisor of 5), 5 (already used), 10 (multiple of 5), or 25 (multiple of 5).\n\n2. **Invalid Moves**:\n   - If a player selects a number that is a multiple or divisor of any previously selected number, the move is invalid, and they are prompted to select another number.\n   - If there are no valid numbers available for the player to choose, the player loses the game.\n\n3. **End of Game**:\n   - **Winning**: A player wins if they successfully select a valid number when their opponent cannot.\n   - **Losing**: A player loses if they cannot select a valid number on their turn.\n\n4. **Additional Rules**:\n   - **No Reuse**: Once a number is selected, it is removed from the pool and cannot be selected again.\n   - **Shared History**: Both players' selections affect the validity of future moves for both players.\n\n## Scoring\n\n- **Winning Player**: The player who successfully forces their opponent into a position with no valid moves is declared the winner.\n- **Game Tracking**: While there is no point system, players can track the number of games won over multiple rounds to determine overall performance.\n- **Strategic Depth**: Skilled players can plan ahead to control the pool of available numbers, increasing their chances of winning.\n\n## Examples\n\n### Example Scenario\n\n**Initial Number Pool**: 2 to 10 (for brevity in this example).\n\n**Player 1's Turn**:\n- **Available Numbers**: 2, 3, 4, 5, 6, 7, 8, 9, 10\n- **Player 1 Selects**: 7\n  - **Reason**: 7 is a prime number; fewer multiples/divisors to worry about.\n- **Update**:\n  - Number 7 is removed from the pool.\n  - Player 1's selections: [7]\n  - Player 2's selections: []\n\n**Player 2's Turn**:\n- **Available Numbers**: 2, 3, 4, 5, 6, 8, 9, 10\n- **Invalid Choices**: Any multiples or divisors of 7 (already selected). Since 7 is prime and 7 is not in list anymore, 7's multiples (14, 21, ...) are out of range.\n- **Player 2 Selects**: 3\n  - **Reason**: Another prime number.\n- **Update**:\n  - Number 3 is removed from the pool.\n  - Player 1's selections: [7]\n  - Player 2's selections: [3]\n\n**Player 1's Turn**:\n- **Available Numbers**: 2, 4, 5, 6, 8, 9, 10\n- **Invalid Choices**: Multiples/divisors of 7 or 3.\n  - **Invalid Due to 7**: None within this range.\n  - **Invalid Due to 3**: 3 (already used), 6 (multiple of 3), 9 (multiple of 3)\n- **Valid Choices**: 2, 4, 5, 8, 10\n- **Player 1 Selects**: 5\n  - **Reason**: Choosing another prime to restrict options.\n- **Update**:\n  - Number 5 is removed from the pool.\n  - Player 1's selections: [7, 5]\n  - Player 2's selections: [3]\n\n**Player 2's Turn**:\n- **Available Numbers**: 2, 4, 6, 8, 10\n- **Invalid Choices**:\n  - **Due to 3**: 6, 9 (not in pool)\n  - **Due to 5**: 5 (already used), 10 (multiple of 5)\n- **Valid Choices**: 2, 4, 8\n- **Player 2 Selects**: 8\n  - **Reason**: Limited options; selects a number not invalidated.\n- **Update**:\n  - Number 8 is removed from the pool.\n  - Player 1's selections: [7, 5]\n  - Player 2's selections: [3, 8]\n\n**Player 1's Turn**:\n- **Available Numbers**: 2, 4, 6, 10\n- **Invalid Choices**:\n  - **Due to 7 and 5**: None\n  - **Due to 3 and 8**:\n    - 2 (divisor of 8)\n    - 4 (divisor of 8)\n    - 6 (multiple of 3)\n    - 8 (already used)\n    - 10 (not invalid due to previous numbers)\n- **Valid Choices**: 10\n- **Player 1 Selects**: 10\n  - **Update**:\n    - Number 10 is removed from the pool.\n    - Player 1's selections: [7, 5, 10]\n    - Player 2's selections: [3, 8]\n\n**Player 2's Turn**:\n- **Available Numbers**: 2, 4, 6\n- **Invalid Choices**:\n  - **Due to Previous Selections**:\n    - 2 (divisor of 8 and 10)\n    - 4 (divisor of 8)\n    - 6 (multiple of 3)\n- **Valid Choices**: None\n\n**Result**:\n\n- **Player 2 Cannot Move**: No valid numbers to select.\n- **Player 1 Wins**\n\n### Sample Command-Line Interaction\n\n**Game Start**\n\n- **Number Pool**: 2 to 10\n\n**Player 1's Turn**\n\n```\nAvailable Numbers: 2, 3, 4, 5, 6, 7, 8, 9, 10\nYour Selections: []\nOpponent's Selections: []\nEnter your selection: 7\n```\n\n**Player 2's Turn**\n\n```\nAvailable Numbers: 2, 3, 4, 5, 6, 8, 9, 10\nYour Selections: []\nOpponent's Selections: [7]\nEnter your selection: 3\n```\n\n**Player 1's Turn**\n\n```\nAvailable Numbers: 2, 4, 5, 6, 8, 9, 10\nYour Selections: [7]\nOpponent's Selections: [3]\nEnter your selection: 5\n```\n\n**Player 2's Turn**\n\n```\nAvailable Numbers: 2, 4, 6, 8, 9, 10\nYour Selections: [3]\nOpponent's Selections: [7, 5]\nEnter your selection: 8\n```\n\n**Player 1's Turn**\n\n```\nAvailable Numbers: 2, 4, 6, 9, 10\nYour Selections: [7, 5]\nOpponent's Selections: [3, 8]\nEnter your selection: 10\n```\n\n**Player 2's Turn**\n\n```\nAvailable Numbers: 2, 4, 6, 9\nYour Selections: [3, 8]\nOpponent's Selections: [7, 5, 10]\nNo valid moves available. You lose!\n```\n\n## Strategy Tips\n\n- **Prioritize Prime Numbers**: Selecting prime numbers reduces the number of multiples/divisors affecting future moves.\n- **Control the Pool**: Choose numbers that limit your opponent's options in subsequent turns.\n- **Track Selections**: Keep a close eye on both your and your opponent's selections to plan ahead.\n- **Anticipate Moves**: Think ahead about how your selection will impact the available numbers.\n\n## Conclusion\n\nDivisor Duel is a game of strategic number selection and foresight. By carefully choosing numbers and anticipating your opponent's options, you can control the flow of the game and increase your chances of winning. Enjoy the mental challenge and may the best strategist win!",
    "**Laser Duel**\n\n---\n\n**Objective:**\n\nBe the first player to reduce your opponent's shield strength to zero by strategically charging and firing your laser.\n\n---\n\n**Setup:**\n\n- **Players:** Two players.\n- **Initial Shield Strength:** Each player starts with a shield strength of **10**.\n- **Initial Laser Charge:** Each player's laser charge starts at **0**.\n\n---\n\n**Game Components:**\n\n- **Shield Strength (0 - 10):** Represents the player's defensive capability. Starting at 10, it decreases as the player takes damage.\n- **Laser Charge (0 - 5):** Indicates the current charge level of a player's laser. The laser can be charged up to a maximum of 5.\n  \n---\n\n**Turns:**\n\n- Players alternate turns, starting with **Player 1**.\n- **On Each Turn, a Player Must Choose One Action:**\n  1. **Charge Laser**: Increase your laser charge by **1** (to a maximum of 5).\n  2. **Fire Laser**: Attack your opponent, dealing damage equal to your current laser charge. Your laser charge then resets to **0**.\n\n---\n\n**Rules and Mechanics:**\n\n1. **Charging the Laser:**\n   - Select the **Charge Laser** action to increase your laser charge by **1**.\n   - **Maximum Charge:** Laser charge cannot exceed **5**. If your laser is already at charge **5**, you **must** choose to fire on your turn.\n  \n2. **Firing the Laser:**\n   - Select the **Fire Laser** action to attack your opponent.\n   - **Damage Dealt:** Equal to your current laser charge (1-5).\n   - **Reset Charge:** After firing, your laser charge resets to **0**.\n  \n3. **Shield Strength:**\n   - When hit by an opponent's attack, subtract the damage from your shield strength.\n   - **Elimination:** If your shield strength reaches **0 or below**, you lose the game.\n  \n4. **Turn Actions:**\n   - **No Passing:** You must perform one of the two actions on your turn; skipping a turn is not allowed.\n  \n5. **Winning the Game:**\n   - The first player to reduce their opponent's shield strength to **0 or below** wins.\n  \n6. **Gameplay Constraints:**\n   - **Strategic Charging:** Decide between charging for a stronger attack or firing sooner to prevent your opponent from charging.\n   - **Opponent Awareness:** Keep track of your opponent's laser charge to anticipate potential attacks.\n\n---\n\n**Scoring:**\n\n- **Shield Strength Tracker:** Each player's shield strength is tracked throughout the game.\n- **Victory Condition:** Reduce your opponent's shield strength to **0 or below** to win.\n  \n---\n\n**Example Gameplay:**\n\n*Initial Setup:*\n\n- **Player 1:** Shield Strength = 10, Laser Charge = 0\n- **Player 2:** Shield Strength = 10, Laser Charge = 0\n\n---\n\n**Turn Sequence:**\n\n1. **Turn 1 - Player 1:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 0 ➔ **1**\n   - **Player 2 Shield:** 10 (no change)\n\n2. **Turn 2 - Player 2:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 0 ➔ **1**\n   - **Player 1 Shield:** 10 (no change)\n\n3. **Turn 3 - Player 1:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 1 ➔ **2**\n   - **Player 2 Shield:** 10 (no change)\n\n4. **Turn 4 - Player 2:**\n   - **Action:** Fire Laser\n   - **Damage Dealt:** 1 (laser charge)\n   - **Player 1 Shield:** 10 ➔ **9**\n   - **Laser Charge Reset:** 1 ➔ **0**\n\n5. **Turn 5 - Player 1:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 2 ➔ **3**\n   - **Player 2 Shield:** 10 (no change)\n\n6. **Turn 6 - Player 2:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 0 ➔ **1**\n   - **Player 1 Shield:** 9 (no change)\n\n7. **Turn 7 - Player 1:**\n   - **Action:** Fire Laser\n   - **Damage Dealt:** 3\n   - **Player 2 Shield:** 10 ➔ **7**\n   - **Laser Charge Reset:** 3 ➔ **0**\n\n8. **Turn 8 - Player 2:**\n   - **Action:** Fire Laser\n   - **Damage Dealt:** 1\n   - **Player 1 Shield:** 9 ➔ **8**\n   - **Laser Charge Reset:** 1 ➔ **0**\n\n9. **Turn 9 - Player 1:**\n   - **Action:** Charge Laser\n   - **Laser Charge:** 0 ➔ **1**\n   - **Player 2 Shield:** 7 (no change)\n\n10. **Turn 10 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 1 Shield:** 8 (no change)\n\n11. **Turn 11 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 1 ➔ **2**\n    - **Player 2 Shield:** 7 (no change)\n\n12. **Turn 12 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 1 ➔ **2**\n    - **Player 1 Shield:** 8 (no change)\n\n13. **Turn 13 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 2 ➔ **3**\n    - **Player 2 Shield:** 7 (no change)\n\n14. **Turn 14 - Player 2:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 2\n    - **Player 1 Shield:** 8 ➔ **6**\n    - **Laser Charge Reset:** 2 ➔ **0**\n\n15. **Turn 15 - Player 1:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 3\n    - **Player 2 Shield:** 7 ➔ **4**\n    - **Laser Charge Reset:** 3 ➔ **0**\n\n16. **Turn 16 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 1 Shield:** 6 (no change)\n\n17. **Turn 17 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 2 Shield:** 4 (no change)\n\n18. **Turn 18 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 1 ➔ **2**\n    - **Player 1 Shield:** 6 (no change)\n\n19. **Turn 19 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 1 ➔ **2**\n    - **Player 2 Shield:** 4 (no change)\n\n20. **Turn 20 - Player 2:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 2\n    - **Player 1 Shield:** 6 ➔ **4**\n    - **Laser Charge Reset:** 2 ➔ **0**\n\n21. **Turn 21 - Player 1:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 2\n    - **Player 2 Shield:** 4 ➔ **2**\n    - **Laser Charge Reset:** 2 ➔ **0**\n\n22. **Turn 22 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 1 Shield:** 4 (no change)\n\n23. **Turn 23 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 2 Shield:** 2 (no change)\n\n24. **Turn 24 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 1 ➔ **2**\n    - **Player 1 Shield:** 4 (no change)\n\n25. **Turn 25 - Player 1:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 1\n    - **Player 2 Shield:** 2 ➔ **1**\n    - **Laser Charge Reset:** 1 ➔ **0**\n\n26. **Turn 26 - Player 2:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 2\n    - **Player 1 Shield:** 4 ➔ **2**\n    - **Laser Charge Reset:** 2 ➔ **0**\n\n27. **Turn 27 - Player 1:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 2 Shield:** 1 (no change)\n\n28. **Turn 28 - Player 2:**\n    - **Action:** Charge Laser\n    - **Laser Charge:** 0 ➔ **1**\n    - **Player 1 Shield:** 2 (no change)\n\n29. **Turn 29 - Player 1:**\n    - **Action:** Fire Laser\n    - **Damage Dealt:** 1\n    - **Player 2 Shield:** 1 ➔ **0**\n    - **Laser Charge Reset:** 1 ➔ **0**\n\n**Game Over:**\n\n- **Winner:** Player 1 has reduced Player 2's shield to **0**.\n  \n---\n\n**Strategies & Tips:**\n\n1. **Balancing Charge and Attack:**\n   - Charging your laser for a stronger attack can be beneficial but beware of giving your opponent time to retaliate.\n   - Sometimes, firing with a lower charge can prevent your opponent from building up a high charge.\n\n2. **Monitor Opponent's Charge:**\n   - Keep track of your opponent's laser charge to anticipate their potential damage.\n   - If they are close to a high charge, you may choose to fire early to deplete their shield before they can hit you harder.\n\n3. **Forced Firing:**\n   - Remember that reaching a laser charge of **5** forces you to fire on your next turn. Use this to your advantage or to predict your opponent's moves.\n\n4. **Defensive Play:**\n   - If your shield strength is low, consider firing more frequently to prevent your opponent from charging up.\n\n---\n\n**Command-Line Interaction Example:**\n\n- **Prompt:** It's your turn. Your shield is at 10, and your laser charge is at 2. Do you want to (1) Charge Laser or (2) Fire Laser?\n- **Player Input:** 1\n- **System:** You have chosen to charge your laser. Your laser charge is now 3.\n\n---\n\nThis rule book provides all the necessary information to play **Laser Duel**, a unique and strategic two-player command-line game. By balancing offensive and defensive actions, players must outsmart their opponent to secure victory.",
    "# Prime Claim: A Strategic Number Game\n\n## Objective\n\n**Prime Claim** is a two-player turn-based strategy game where players compete to accumulate the highest total score by claiming numbers from a shared pool. Players must strategically choose numbers to maximize their own score while minimizing their opponent's potential gains. The player with the highest total score at the end of the game wins.\n\n---\n\n## Setup\n\n1. **Number Pool**: Create a list of consecutive integers from **1** to **25**. These numbers are unclaimed at the start of the game.\n\n2. **Scoreboard**: Initialize both players' scores to **0**.\n\n3. **Player Assignment**: Decide which player goes first. This can be done by mutual agreement or by a random method such as flipping a coin.\n\n---\n\n## Game Components\n\n- **Numbers (1-25)**: The core elements available for claiming. Each number has unique properties:\n  - **Prime Numbers**: Numbers greater than 1 that have no positive divisors other than 1 and themselves.\n  - **Composite Numbers**: Numbers greater than 1 that are not prime and can be factored into smaller positive integers.\n\n- **Scoreboard**: A running tally of each player's accumulated points.\n\n---\n\n## Turns\n\n- The game is played in **alternating turns**.\n- **Turn Structure**:\n  1. **Claiming a Number**: The active player selects any unclaimed number from the number pool.\n  2. **Scoring**:\n     - **If a Prime Number is Claimed**:\n       - The player **adds the value of the prime number** to their own score.\n     - **If a Composite Number is Claimed**:\n       - The player **adds the value of the composite number** to their own score.\n       - **Their opponent** receives points equal to the **sum of the prime factors** of the claimed composite number.\n  3. **Update the Number Pool**: Remove the claimed number from the list of available numbers.\n- The turn then passes to the other player.\n\n---\n\n## Rules and Mechanics\n\n1. **Claiming Numbers**:\n   - Players can **only claim unclaimed numbers** from the number pool.\n   - **All numbers from 1 to 25** are available at the start.\n\n2. **Scoring Details**:\n   - **Prime Numbers**:\n     - When a player claims a prime number (e.g., 2, 3, 5, 7, 11, etc.), they **receive points equal to that number**.\n     - The opponent **receives no points**.\n   - **Composite Numbers**:\n     - When a player claims a composite number (e.g., 4, 6, 8, 9, 10, etc.), they **receive points equal to that number**.\n     - The opponent **receives points equal to the sum of all prime factors** of that composite number.\n     - **Example**: Claiming **6**\n       - Active player gains **6 points**.\n       - Opponent gains **5 points** (since 6 = 2 × 3; 2 + 3 = 5).\n\n3. **Special Cases**:\n   - **Number 1**:\n     - The number 1 is neither prime nor composite.\n     - Claiming **1** gives **no points** to either player.\n     - It may be strategically claimed to deny the opponent certain moves.\n\n4. **End of the Game**:\n   - The game ends when **all numbers have been claimed**.\n   - The player with the **highest total score** wins the game.\n\n5. **Winning the Game**:\n   - There are **no draws** in Prime Claim. If both players have the same score at the end, the **last player to have claimed a number** is declared the winner, encouraging players to strategize throughout the game.\n\n---\n\n## Scoring\n\n- **Player's Score**:\n  - **Accumulates** throughout the game based on the numbers they claim.\n- **Opponent's Score**:\n  - Increases when the active player claims a composite number.\n\n- **Example Scoring Breakdown**:\n\n  | Number Claimed | Number Type     | Claimer's Gain | Opponent's Gain | Prime Factors            |\n  |----------------|-----------------|----------------|-----------------|--------------------------|\n  | 7              | Prime           | +7             | +0              | N/A                      |\n  | 9              | Composite       | +9             | +6              | 3 × 3 (3 + 3 = 6)        |\n  | 15             | Composite       | +15            | +8             | 3 × 5 (3 + 5 = 8)        |\n\n---\n\n## Examples\n\n### Sample Game Play\n\n**Initial State**:\n- Number Pool: 1 to 25\n- Player 1's Score: 0\n- Player 2's Score: 0\n\n**Turn 1**:\n- **Player 1** claims **13** (a prime number).\n  - **Player 1's Score**: 0 + 13 = **13**\n  - **Player 2's Score**: **0**\n  - Number Pool: 1-12, 14-25\n\n**Turn 2**:\n- **Player 2** claims **15** (a composite number).\n  - Prime factors of 15 are 3 and 5.\n  - **Player 2's Score**: 0 + 15 = **15**\n  - **Player 1's Score**: 13 + (3 + 5) = **21**\n  - Number Pool: 1-12, 14, 16-25\n\n**Turn 3**:\n- **Player 1** claims **7** (a prime number).\n  - **Player 1's Score**: 21 + 7 = **28**\n  - **Player 2's Score**: **15**\n  - Number Pool: 1-6, 8-12, 14, 16-25\n\n**Turn 4**:\n- **Player 2** claims **8** (a composite number).\n  - Prime factors of 8 are 2, 2, and 2 (since 8 = 2 × 2 × 2).\n  - Sum of prime factors: 2 + 2 + 2 = 6\n  - **Player 2's Score**: 15 + 8 = **23**\n  - **Player 1's Score**: 28 + 6 = **34**\n  - Number Pool: 1-6, 9-12, 14, 16-25\n\n**Game Continues Until All Numbers Are Claimed**\n\n---\n\n### Command-Line Interaction Example\n\nAssuming a simple command-line implementation:\n\n#### Game Start:\n\n```\nWelcome to Prime Claim!\n\nNumbers available to claim: 1 to 25\nPlayer 1's Score: 0\nPlayer 2's Score: 0\n\nPlayer 1, it's your turn.\nEnter a number to claim:\n```\n\n#### Player Input:\n\n```\n>> 13\n```\n\n#### System Response:\n\n```\nPlayer 1 claimed 13 (Prime).\nPlayer 1 gains 13 points.\nPlayer 2 gains 0 points.\n\nScores:\nPlayer 1: 13\nPlayer 2: 0\n\nNumbers remaining: [1-12, 14-25]\n\nPlayer 2, it's your turn.\nEnter a number to claim:\n```\n\n#### Player 2 Input:\n\n```\n>> 15\n```\n\n#### System Response:\n\n```\nPlayer 2 claimed 15 (Composite).\nPlayer 2 gains 15 points.\nPlayer 1 gains 8 points from prime factors of 15 (3 + 5).\n\nScores:\nPlayer 1: 13 + 8 = 21\nPlayer 2: 0 + 15 = 15\n\nNumbers remaining: [1-12, 14, 16-25]\n\nPlayer 1, it's your turn.\nEnter a number to claim:\n```\n\n#### Game Continues...\n\n---\n\n## Strategic Considerations\n\n- **Prioritize Prime Numbers**: Claiming prime numbers gives you points without benefiting your opponent.\n- **Composite Numbers as Tactical Moves**:\n  - **High-Value Composites**: Weigh the points you gain against the points your opponent will receive from the prime factors.\n  - **Denying Primes**: Sometimes it's beneficial to claim a composite number if its prime factors are low, denying the opponent access to future moves.\n- **Monitoring Remaining Numbers**: Keep track of which numbers remain unclaimed to plan your strategy effectively.\n- **Endgame Planning**: Anticipate the scores towards the end of the game to make moves that secure your lead or overcome a deficit.\n\n---\n\n## Conclusion\n\nPrime Claim is a battle of wits and strategy, where every move can tip the scales. By carefully selecting which numbers to claim, players can maximize their own scores while influencing their opponent's gains. With simple rules and deep strategic potential, Prime Claim offers an engaging and competitive experience in a command-line setting.\n\nEnjoy the game, and may the best strategist win!",
    "# Alpha Chase: Rule Book\n\n## Objective\n\n**Alpha Chase** is a two-player, turn-based strategy game where players race to collect letters needed to complete their secret word. Each player aims to be the first to gather all the unique letters in their word from a shared pool of letters. Strategic planning and anticipating your opponent's moves are key to victory.\n\n## Setup\n\n1. **Word Selection**:\n   - Each player selects a secret word of **five unique letters** from a predefined list provided at the start of the game.\n   - The words chosen by both players are **publicly revealed** before the game begins.\n   - Example word list:\n     - BRAVE\n     - CHARM\n     - GHOST\n     - PLANT\n     - QUICK\n\n2. **Letter Pool**:\n   - All 26 letters of the English alphabet (`A` to `Z`) are available in the shared letter pool.\n   - Letters are available only once; once taken by a player, they are removed from the pool.\n\n## Game Components\n\n- **Letter Pool**:\n  - A shared collection of letters from `A` to `Z`.\n  - Represents the available letters players can select on their turns.\n- **Player Words**:\n  - Each player's chosen word consisting of five unique letters.\n  - Words are known to both players, adding a layer of strategy.\n\n- **Player Collections**:\n  - Each player maintains a list of letters they have collected.\n\n## Turns\n\n- Players decide who goes first (e.g., coin toss, mutual agreement).\n- Turns alternate between Player 1 and Player 2.\n- **Turn Structure**:\n  - **Selection Phase**:\n    - The player selects one available letter from the letter pool.\n    - The chosen letter is added to the player's collection and removed from the letter pool.\n  - **Update Phase**:\n    - Check if the player has collected all the letters needed for their word.\n    - If so, the game ends, and that player wins.\n  - **Pass Turn**:\n    - Control passes to the other player.\n\n## Rules and Mechanics\n\n1. **Letter Selection**:\n   - On their turn, a player must select **one** letter from the available letters.\n   - Players cannot skip their turn or pass without selecting a letter.\n\n2. **Letter Availability**:\n   - Once a letter is selected by a player, it is no longer available to either player.\n   - Each letter can be selected only once in the game.\n\n3. **Winning the Game**:\n   - The first player to collect all **five** letters needed to spell their word wins.\n   - If all letters are exhausted and no player has all the letters for their word, the player with the **most letters** from their word wins.\n   - In the event of a tie (both players have the same number of letters from their word), the player who collected the first letter wins.\n\n4. **Strategic Blocking**:\n   - Players may choose letters needed by their opponent to prevent them from completing their word.\n   - Balancing between collecting your letters and blocking your opponent is key.\n\n5. **Letter Collections**:\n   - Players must keep track of the letters they have collected.\n   - The game can display each player's current collection after each turn.\n\n6. **No Duplicate Letters in Words**:\n   - Words selected must consist of **five unique letters** to ensure fairness and simplicity.\n\n## Scoring\n\n- **Primary Victory**:\n  - Collect all five letters of your word.\n- **Secondary Victory** (if no player completes their word):\n  - Have the most letters from your word collected when the letter pool is exhausted.\n- **Tie-Breaker**:\n  - If tied on letters collected, the player who collected the first letter wins.\n\n## Examples\n\n### Sample Game Play\n\n**Players and Words**:\n- **Player 1** selects the word: `PLANT`\n- **Player 2** selects the word: `GHOST`\n\n**Game Start**:\n- Available letters: A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z\n- Both players' words are known to each other.\n\n**Turn 1**:\n- **Player 1's Turn**:\n  - Chooses `P` (needed for `PLANT`).\n  - Updates their collection: `P`.\n  - Available letters now exclude `P`.\n\n**Turn 2**:\n- **Player 2's Turn**:\n  - Chooses `G` (needed for `GHOST`).\n  - Updates their collection: `G`.\n  - Available letters now exclude `G`.\n\n**Turn 3**:\n- **Player 1's Turn**:\n  - Chooses `T` (needed for `PLANT` and to block `GHOST`).\n  - Updates their collection: `P`, `T`.\n  - Available letters now exclude `T`.\n\n**Turn 4**:\n- **Player 2's Turn**:\n  - Notices `T` is taken (needed for `GHOST`), decides to block.\n  - Chooses `A` (which `Player 1` needs).\n  - Updates their collection: `G`, `A`.\n  - Available letters now exclude `A`.\n\n**Turn 5**:\n- **Player 1's Turn**:\n  - Chooses `L` (needed for `PLANT`).\n  - Updates their collection: `P`, `T`, `L`.\n  - Available letters now exclude `L`.\n\n**Turn 6**:\n- **Player 2's Turn**:\n  - Chooses `H` (needed for `GHOST`).\n  - Updates their collection: `G`, `A`, `H`.\n  - Available letters now exclude `H`.\n\n**Turn 7**:\n- **Player 1's Turn**:\n  - Chooses `N` (needed for `PLANT`).\n  - Updates their collection: `P`, `T`, `L`, `N`.\n  - Available letters now exclude `N`.\n\n**Turn 8**:\n- **Player 2's Turn**:\n  - Chooses `S` (needed for `GHOST`).\n  - Updates their collection: `G`, `A`, `H`, `S`.\n  - Available letters now exclude `S`.\n\n**Turn 9**:\n- **Player 1's Turn**:\n  - Only needs `A` to complete `PLANT`, but `A` was taken by Player 2.\n  - Game continues; Player 1 cannot complete their word.\n  - Chooses to block.\n  - Chooses `O` (needed by `GHOST`).\n  - Updates their collection: `P`, `T`, `L`, `N`, `O`.\n\n**Turn 10**:\n- **Player 2's Turn**:\n  - Needs `O` and `T`, both taken.\n  - Cannot complete `GHOST`.\n  - Game ends as all letters are exhausted or no player can complete their word.\n\n**Scoring**:\n- **Player 1** letters from their word: `P`, `T`, `L`, `N` (4 letters).\n- **Player 2** letters from their word: `G`, `H`, `S` (3 letters).\n- **Winner**: Player 1 wins with more letters collected from their word.\n\n### Command-Line Interaction Example\n\n**Game Start**:\n```\nWelcome to Alpha Chase!\n\nPlayer 1's word: PLANT\nPlayer 2's word: GHOST\n\nAvailable letters: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\nPlayer 1's turn.\nEnter a letter to select: P\n\nPlayer 1 has selected 'P'.\nLetters collected: P\nAvailable letters: A B C D E F G H I J K L M N O Q R S T U V W X Y Z\n\nPlayer 2's turn.\nEnter a letter to select: G\n\nPlayer 2 has selected 'G'.\nLetters collected: G\nAvailable letters: A B C D E F H I J K L M N O Q R S T U V W X Y Z\n\n[...game continues...]\n\nGame Over.\nPlayer 1 wins!\n```\n\n**Note**: The actual implementation would handle input validation, display updates, and check for victory conditions after each turn. This interaction demonstrates the basic flow of the game.\n\n## Additional Guidelines\n\n- **Fair Play**:\n  - Players should not change their word once the game has started.\n  - Both players should keep their collections visible (in the command-line output) to maintain transparency.\n\n- **Game Timing**:\n  - To keep the game moving quickly, players may have a time limit per turn (e.g., 30 seconds) to make their selection.\n\n- **Dispute Resolution**:\n  - In case of any disputes, refer back to the rules outlined in this rule book.\n  - If an illegal move is made (e.g., selecting an unavailable letter), the player should be prompted to choose again.\n\n## Strategy Tips\n\n- **Prioritize Critical Letters**:\n  - Identify letters that are unique to your word or crucial for its completion and secure them early.\n\n- **Block Strategically**:\n  - Observe which letters your opponent needs and consider blocking them by selecting those letters, especially if you don't urgently need any specific letter on your turn.\n\n- **Balance**:\n  - Find the right balance between advancing your progress and hindering your opponent.\n\n- **Adapt**:\n  - Be prepared to adjust your strategy based on the letters available and your opponent's choices.\n\n- **Planning Ahead**:\n  - Anticipate future moves and plan several turns ahead to outmaneuver your opponent.\n\n## Conclusion\n\n**Alpha Chase** is a game of strategic letter selection and foresight. With simple rules and quick gameplay, it offers depth and replayability, challenging players to think critically and adapt to their opponent's tactics. Enjoy the chase and may the best wordsmith win!",
    "# Divider Game Rule Book\n\n## Objective\n\nThe **Divider Game** is a two-player, turn-based strategy game played in a command-line interface. The primary goal of the game is to be the player who reduces the shared total to **exactly zero**, thereby forcing your opponent into a position where they cannot make a valid move. Victory is achieved by skillfully selecting numbers that divide the current total, strategically planning ahead to outmaneuver your opponent.\n\n## Setup\n\n1. **Initial Total**: The game starts with a shared total number, typically **100**, but any positive integer greater than 1 can be used to vary the game's length and difficulty.\n2. **Player Order**: Determine which player goes first. This can be decided randomly or by mutual agreement.\n\n## Game Components\n\n- **Total Number**: A shared integer value that both players will manipulate throughout the game. It starts at the initial total (e.g., 100) and decreases as players subtract numbers from it.\n- **Divisors**: Positive integers less than the current total that divide evenly into the current total.\n  \n  - **Example**: If the current total is 50, the valid divisors are 1, 2, 5, 10, 25 (excluding the total itself).\n\n## Turns\n\n1. **Turn Structure**:\n   - Players take turns alternately.\n   - On their turn, a player must perform the following actions:\n     - **Select a Number**: Choose a valid positive integer divisor of the current total, excluding the total itself.\n     - **Subtract the Number**: Reduce the current total by the chosen number.\n2. **Progression of Turns**:\n   - The game continues with players alternating turns until one player cannot make a valid move.\n\n## Rules and Mechanics\n\n### Core Rules\n\n1. **Valid Moves**:\n   - On your turn, you must **subtract a positive integer** that is:\n     - A **divisor** of the current total (it divides evenly into the total with no remainder).\n     - **Less than** the current total (you cannot subtract the total itself).\n2. **Subtracting the Number**:\n   - Update the current total by subtracting the chosen number:\n     - `New Total = Current Total - Chosen Number`\n3. **Winning the Game**:\n   - The game ends when the current total reaches **zero**, and the player who made the last valid move **wins**.\n4. **Losing the Game**:\n   - If it's your turn and there are **no valid divisors** to subtract (i.e., the only divisor is the total itself), you **lose** the game.\n\n### Additional Mechanics\n\n- **No Reuse Limitation**:\n  - Numbers can be reused if they are valid divisors of the current total on a player's turn.\n- **Mandatory Moves**:\n  - If a player has a valid move, they must make it. Passing or skipping a turn is not allowed.\n\n## Scoring\n\n- **Victory**: The winning player is the one who reduces the total to zero on their turn, leaving the opponent without a valid move.\n- **No Draws**: The game is designed with no draw mechanism; every game will result in a win or loss.\n\n## Examples\n\n### Sample Game Playthrough\n\n#### Starting Conditions\n\n- **Initial Total**: 100\n- **Player 1**: Starts first.\n\n#### Turn-by-Turn Breakdown\n\n1. **Player 1's Turn**\n   - **Current Total**: 100\n   - **Valid Divisors** (excluding 100): 1, 2, 4, 5, 10, 20, 25, 50\n   - **Chosen Number**: 25\n   - **New Total**: 100 - 25 = 75\n   - **Explanation**: 25 divides evenly into 100 (100 ÷ 25 = 4).\n\n2. **Player 2's Turn**\n   - **Current Total**: 75\n   - **Valid Divisors** (excluding 75): 1, 3, 5, 15, 25\n   - **Chosen Number**: 25\n   - **New Total**: 75 - 25 = 50\n   - **Explanation**: 25 divides evenly into 75 (75 ÷ 25 = 3).\n\n3. **Player 1's Turn**\n   - **Current Total**: 50\n   - **Valid Divisors** (excluding 50): 1, 2, 5, 10, 25\n   - **Chosen Number**: 10\n   - **New Total**: 50 - 10 = 40\n   - **Explanation**: 10 divides evenly into 50 (50 ÷ 10 = 5).\n\n4. **Player 2's Turn**\n   - **Current Total**: 40\n   - **Valid Divisors** (excluding 40): 1, 2, 4, 5, 8, 10, 20\n   - **Chosen Number**: 20\n   - **New Total**: 40 - 20 = 20\n   - **Explanation**: 20 divides evenly into 40 (40 ÷ 20 = 2).\n\n5. **Player 1's Turn**\n   - **Current Total**: 20\n   - **Valid Divisors** (excluding 20): 1, 2, 4, 5, 10\n   - **Chosen Number**: 10\n   - **New Total**: 20 - 10 = 10\n   - **Explanation**: 10 divides evenly into 20 (20 ÷ 10 = 2).\n\n6. **Player 2's Turn**\n   - **Current Total**: 10\n   - **Valid Divisors** (excluding 10): 1, 2, 5\n   - **Chosen Number**: 5\n   - **New Total**: 10 - 5 = 5\n   - **Explanation**: 5 divides evenly into 10 (10 ÷ 5 = 2).\n\n7. **Player 1's Turn**\n   - **Current Total**: 5\n   - **Valid Divisors** (excluding 5): 1\n   - **Chosen Number**: 1\n   - **New Total**: 5 - 1 = 4\n   - **Explanation**: 1 divides evenly into 5.\n\n8. **Player 2's Turn**\n   - **Current Total**: 4\n   - **Valid Divisors** (excluding 4): 1, 2\n   - **Chosen Number**: 2\n   - **New Total**: 4 - 2 = 2\n   - **Explanation**: 2 divides evenly into 4 (4 ÷ 2 = 2).\n\n9. **Player 1's Turn**\n   - **Current Total**: 2\n   - **Valid Divisors** (excluding 2): 1\n   - **Chosen Number**: 1\n   - **New Total**: 2 - 1 = 1\n   - **Explanation**: 1 divides evenly into 2.\n\n10. **Player 2's Turn**\n    - **Current Total**: 1\n    - **Valid Divisors**: None (since 1 only divides by 1, and subtracting the total itself is not allowed).\n    - **Outcome**: Player 2 has no valid moves and **loses**.\n\n#### Winner\n\n- **Player 1** wins by reducing the total to 1 and leaving Player 2 without a valid move.\n\n### Command-Line Interaction Example\n\nBelow is a sample interaction between the players and the game in a command-line interface.\n\n```\nStarting the Divider Game!\nInitial total is 100.\nPlayer 1's turn.\nCurrent total: 100\nEnter a divisor to subtract: 25\nYou subtracted 25. New total is 75.\n\nPlayer 2's turn.\nCurrent total: 75\nEnter a divisor to subtract: 25\nYou subtracted 25. New total is 50.\n\nPlayer 1's turn.\nCurrent total: 50\nEnter a divisor to subtract: 10\nYou subtracted 10. New total is 40.\n\nPlayer 2's turn.\nCurrent total: 40\nEnter a divisor to subtract: 20\nYou subtracted 20. New total is 20.\n\nPlayer 1's turn.\nCurrent total: 20\nEnter a divisor to subtract: 10\nYou subtracted 10. New total is 10.\n\nPlayer 2's turn.\nCurrent total: 10\nEnter a divisor to subtract: 5\nYou subtracted 5. New total is 5.\n\nPlayer 1's turn.\nCurrent total: 5\nEnter a divisor to subtract: 1\nYou subtracted 1. New total is 4.\n\nPlayer 2's turn.\nCurrent total: 4\nEnter a divisor to subtract: 2\nYou subtracted 2. New total is 2.\n\nPlayer 1's turn.\nCurrent total: 2\nEnter a divisor to subtract: 1\nYou subtracted 1. New total is 1.\n\nPlayer 2's turn.\nCurrent total: 1\nNo valid divisors to subtract. You lose!\nPlayer 1 wins the game!\n```\n\n## Strategy Tips\n\n- **Plan Ahead**: Anticipate your opponent's possible moves based on the divisors of future totals.\n- **Control the Totals**: Aim to leave totals that have limited divisors, forcing your opponent into difficult positions.\n- **Avoid Leaving 1**: Reducing the total to 1 on your turn typically forces a win, as your opponent will have no valid moves.\n\n## Conclusion\n\nThe Divider Game combines basic arithmetic with strategic planning, offering depth and complexity within a simple framework suitable for command-line play. Mastery of divisibility rules and foresight will allow skilled players to consistently outperform less experienced opponents. Enjoy the challenge of outsmarting your opponent in this unique and engaging numerical duel!",
    "# Divisor Duel\n\n## Objective\n\nBe the first player to reduce your score to **exactly zero** by strategically subtracting proper divisors of your current score. The player who cannot make a valid move loses the game.\n\n---\n\n## Setup\n\n- **Starting Score:** Both players begin with a score of **50**.\n- **First Turn:** Decide who goes first (e.g., flip a coin).\n\n---\n\n## Game Components\n\n- **Players' Scores:** Each player has a personal score, starting at **50**.\n- **Proper Divisors:** Numbers that evenly divide a player's current score, excluding **1** and the number itself.\n\n---\n\n## Turns\n\n- **Turn Order:** Players alternate turns.\n- **Player Actions:**\n  1. **Identify Proper Divisors:** List all proper divisors of your current score.\n  2. **Choose a Divisor:** Select one proper divisor to subtract.\n  3. **Update Score:** Subtract the chosen divisor from your current score.\n  4. **Announce Move:** Declare your chosen divisor and new score.\n\n- **No Valid Moves:** If a player has no proper divisors (score is a prime number or 1), they lose the game.\n\n---\n\n## Rules and Mechanics\n\n### 1. Valid Moves\n\n- **Proper Divisors Only:** You may only subtract a proper divisor of your current score.\n  - **Proper Divisors:** Positive integers other than 1 and the number itself that divide the number evenly.\n  - **Example:** Proper divisors of 8 are **2** and **4**.\n- **No Subtracting 1 or Self:** You cannot subtract 1 or your current score.\n\n### 2. Score Calculation\n\n- **Subtracting Divisors:** Your new score is calculated by subtracting the chosen divisor from your current score.\n  - **Example:** If your score is 30 and you subtract 10, your new score is 20.\n- **Exact Zero:** To win, your score must reach **exactly zero**.\n- **No Negative Scores:** Moves resulting in a negative score are invalid.\n\n### 3. Winning and Losing\n\n- **Winning the Game:** Reduce your score to exactly zero.\n- **Losing the Game:** If you cannot make a valid move on your turn, you lose.\n\n### 4. Strategy\n\n- **Plan Ahead:** Anticipate future moves based on potential scores.\n- **Force Prime Scores:** Try to leave your opponent with a prime number score.\n\n---\n\n## Scoring\n\n- **Track Scores:** Keep a record of both players' scores after each turn.\n- **Game End:** The game ends when a player reaches zero or cannot make a valid move.\n  - **Winner:** The player who reduces their score to zero or causes the opponent to have no valid moves.\n\n---\n\n## Example Gameplay\n\n### Starting Scores\n\n- **Player 1 Score:** 50\n- **Player 2 Score:** 50\n\n### Turn 1 - Player 1\n\n- **Current Score:** 50\n- **Proper Divisors:** 2, 5, 10, 25\n- **Action:** Subtract 25\n- **New Score:** 25\n- **Announcement:** \"I subtract 25. My new score is 25.\"\n\n### Turn 2 - Player 2\n\n- **Current Score:** 50\n- **Proper Divisors:** 2, 5, 10, 25\n- **Action:** Subtract 25\n- **New Score:** 25\n- **Announcement:** \"I subtract 25. My new score is 25.\"\n\n### Turn 3 - Player 1\n\n- **Current Score:** 25\n- **Proper Divisors:** 5\n- **Action:** Subtract 5\n- **New Score:** 20\n- **Announcement:** \"I subtract 5. My new score is 20.\"\n\n### Turn 4 - Player 2\n\n- **Current Score:** 25\n- **Proper Divisors:** 5\n- **Action:** Subtract 5\n- **New Score:** 20\n- **Announcement:** \"I subtract 5. My new score is 20.\"\n\n### Turn 5 - Player 1\n\n- **Current Score:** 20\n- **Proper Divisors:** 2, 4, 5, 10\n- **Action:** Subtract 10\n- **New Score:** 10\n- **Announcement:** \"I subtract 10. My new score is 10.\"\n\n### Turn 6 - Player 2\n\n- **Current Score:** 20\n- **Proper Divisors:** 2, 4, 5, 10\n- **Action:** Subtract 10\n- **New Score:** 10\n- **Announcement:** \"I subtract 10. My new score is 10.\"\n\n### Turn 7 - Player 1\n\n- **Current Score:** 10\n- **Proper Divisors:** 2, 5\n- **Action:** Subtract 5\n- **New Score:** 5\n- **Announcement:** \"I subtract 5. My new score is 5.\"\n\n### Turn 8 - Player 2\n\n- **Current Score:** 10\n- **Proper Divisors:** 2, 5\n- **Action:** Subtract 5\n- **New Score:** 5\n- **Announcement:** \"I subtract 5. My new score is 5.\"\n\n### Turn 9 - Player 1\n\n- **Current Score:** 5\n- **Proper Divisors:** None (5 is prime)\n- **Result:** No valid moves. Player 1 loses.\n- **Winner:** Player 2\n\n---\n\n## Command-Line Interaction Example\n\n**Player 1's Turn:**\n\n```\nYour current score is 25.\nProper divisors are: 5\nEnter the value you want to subtract: 5\nYou subtract 5. Your new score is 20.\n```\n\n**Player 2's Turn:**\n\n```\nYour current score is 25.\nProper divisors are: 5\nEnter the value you want to subtract: 5\nYou subtract 5. Your new score is 20.\n```\n\n---\n\n## Summary\n\nDivisor Duel is a strategic numerical game where players subtract proper divisors from their scores to reach exactly zero. It requires basic arithmetic and an understanding of divisors, making it simple to code and quick to play. The game emphasizes strategic planning and foresight, allowing skilled players to consistently outperform less experienced opponents.\n\n---\n\n**Enjoy the challenge and may the best strategist win!**",
    "# Battle of Divisibility\n\n## Objective\n\n**Battle of Divisibility** is a two-player, turn-based strategy game played in a command-line interface. The primary goal is to be the first player to reduce your opponent's number to zero through strategic number selection and divisibility tactics. Victory is achieved when your opponent's number reaches zero, resulting in their loss and your win.\n\n## Setup\n\n- Each player starts with an initial **Life Number** of **100**.\n- There are no physical components; all interactions occur within the command-line interface.\n- Players decide who takes the first turn (e.g., by mutual agreement or randomly).\n\n## Game Components\n\n- **Life Numbers**: Each player has a Life Number, starting at 100. This number represents the player's remaining vitality in the game.\n- **Choice Numbers**: On their turn, players select a Choice Number between **1** and **9** (inclusive). These numbers are used to perform actions against the opponent.\n\n## Turns\n\n- Players take turns alternately.\n- On each turn, a player performs the following actions:\n  1. **Select a Choice Number**: Choose an integer between 1 and 9 (inclusive).\n  2. **Apply the Choice Number**: Attempt to subtract the Choice Number from the opponent's Life Number according to the game rules.\n- Turns continue until one player's Life Number is reduced to zero.\n\n## Rules and Mechanics\n\n1. **Selecting the Choice Number**:\n   - The player must choose an integer between **1** and **9**, inclusive.\n\n2. **Applying the Choice Number**:\n   - **Divisibility Check**: If the chosen Choice Number **exactly divides** the opponent's current Life Number, then:\n     - Subtract the Choice Number from the opponent's Life Number.\n     - Example: Opponent's Life Number is 100, and you choose 4 (which divides 100 evenly since 100 % 4 == 0). Opponent's Life Number becomes 100 - 4 = 96.\n   - **Failure to Divide**: If the Choice Number does **not** exactly divide the opponent's Life Number, then:\n     - Subtract the Choice Number from **your own** Life Number.\n     - Example: Your Life Number is 100, opponent's Life Number is 97, and you choose 5 (which does not divide 97 evenly). Your Life Number becomes 100 - 5 = 95.\n\n3. **Life Number Constraints**:\n   - A player's Life Number cannot go below zero. If an action would result in a negative Life Number, set the Life Number to zero instead.\n\n4. **Winning the Game**:\n   - The first player to reduce their opponent's Life Number to **zero** wins the game.\n   - If both players reach zero on the same turn, the player who initiated the action wins.\n\n## Scoring\n\n- **Life Number Tracking**: Each player's Life Number serves as their score, starting at 100 and decreasing based on the actions taken during the game.\n- **Victory Condition**: The game does not use points for scoring beyond tracking the Life Numbers. The win condition is solely based on reducing the opponent's Life Number to zero.\n\n## Examples\n\n### Example Game Play-Through\n\n**Initial State**:\n\n- Player 1 Life Number: 100\n- Player 2 Life Number: 100\n\n**Turn 1**: *Player 1's Turn*\n\n- **Choice Number**: Player 1 chooses **5**.\n- **Divisibility Check**: 5 divides Player 2's Life Number (100 % 5 == 0).\n- **Action**: Subtract 5 from Player 2's Life Number.\n- **Result**:\n  - Player 1 Life Number: **100**\n  - Player 2 Life Number: **95**\n\n**Turn 2**: *Player 2's Turn*\n\n- **Choice Number**: Player 2 chooses **6**.\n- **Divisibility Check**: 6 does not divide Player 1's Life Number (100 % 6 != 0).\n- **Action**: Subtract 6 from **Player 2's own** Life Number.\n- **Result**:\n  - Player 1 Life Number: **100**\n  - Player 2 Life Number: **89**\n\n**Turn 3**: *Player 1's Turn*\n\n- **Choice Number**: Player 1 chooses **7**.\n- **Divisibility Check**: 7 does not divide Player 2's Life Number (89 % 7 != 0).\n- **Action**: Subtract 7 from Player 1's Life Number.\n- **Result**:\n  - Player 1 Life Number: **93**\n  - Player 2 Life Number: **89**\n\n**Turn 4**: *Player 2's Turn*\n\n- **Choice Number**: Player 2 chooses **1**.\n- **Divisibility Check**: 1 divides Player 1's Life Number (93 % 1 == 0).\n- **Action**: Subtract 1 from Player 1's Life Number.\n- **Result**:\n  - Player 1 Life Number: **92**\n  - Player 2 Life Number: **89**\n\n**Turn 5**: *Player 1's Turn*\n\n- **Choice Number**: Player 1 chooses **4**.\n- **Divisibility Check**: 4 does not divide Player 2's Life Number (89 % 4 != 0).\n- **Action**: Subtract 4 from Player 1's Life Number.\n- **Result**:\n  - Player 1 Life Number: **88**\n  - Player 2 Life Number: **89**\n\n**Turn 6**: *Player 2's Turn*\n\n- **Choice Number**: Player 2 chooses **17**.\n- **Invalid Choice**: Number not between 1 and 9.\n- **Action**: Prompt Player 2 to choose a valid number.\n\n**Turn 6 (Retry)**: *Player 2's Turn*\n\n- **Choice Number**: Player 2 chooses **8**.\n- **Divisibility Check**: 8 does not divide Player 1's Life Number (88 % 8 == 0).\n- **Action**: Subtract 8 from Player 1's Life Number.\n- **Result**:\n  - Player 1 Life Number: **80**\n  - Player 2 Life Number: **89**\n\n*Note*: There's an error here. Since 8 divides 88 evenly, the action should subtract 8 from **Player 1's** Life Number.\n\nLet's correct the action.\n\n**Corrected Turn 6**:\n\n- **Divisibility Check**: 8 divides Player 1's Life Number (88 % 8 == 0).\n- **Action**: Subtract 8 from Player 1's Life Number.\n- **Result**:\n  - Player 1 Life Number: **80**\n  - Player 2 Life Number: **89**\n\n**Continuing the Game**\n\nThe players continue taking turns, strategically selecting numbers to reduce their opponent's Life Number while minimizing the impact on their own. The game proceeds until one player's Life Number is reduced to zero.\n\n### Sample Command-Line Interaction\n\n```plaintext\nPlayer 1 Life Number: 100\nPlayer 2 Life Number: 100\n\nPlayer 1's turn.\nEnter a number between 1 and 9: 5\n5 divides 100. Subtracting 5 from Player 2.\nPlayer 2 Life Number is now 95.\n\nPlayer 2's turn.\nEnter a number between 1 and 9: 6\n6 does not divide 100. Subtracting 6 from your own Life Number.\nPlayer 2 Life Number is now 89.\n\nPlayer 1's turn.\nEnter a number between 1 and 9: 7\n7 does not divide 95. Subtracting 7 from your own Life Number.\nPlayer 1 Life Number is now 93.\n\n...\n\nPlayer 1's turn.\nEnter a number between 1 and 9: 5\n5 divides 5. Subtracting 5 from Player 2.\nPlayer 2 Life Number is now 0.\n\nPlayer 1 wins!\n```\n\n## Strategy Tips\n\n- **Choose Divisors Wisely**: Aim to select numbers that divide your opponent's Life Number to reduce it directly.\n- **Avoid Self-Harm**: If no available numbers divide your opponent's Life Number, consider the impact of subtracting from your own Life Number.\n- **Anticipate Opponent's Options**: Keep track of numbers that could divide your own Life Number to defend against potential large subtractions.\n- **Manipulate Life Numbers**: Sometimes it's strategic to reduce your own Life Number to a value that's less divisible, limiting your opponent's options.\n\n## Game Variations\n\nFor added complexity or to adjust game length, consider the following variations:\n\n- **Alter Starting Life Number**: Begin with a different Life Number (e.g., 50 or 200) to shorten or lengthen the game.\n- **Change Choice Number Range**: Modify the range of selectable numbers (e.g., 1 to 5 for a quicker game).\n- **Special Numbers**: Introduce special rules for certain numbers (e.g., choosing 3 allows you to skip your opponent's next turn).\n\n---\n\nEnjoy playing **Battle of Divisibility**, and may the most strategic player win!",
    "# Add or Multiply: A Strategic Numerical Duel\n\n## Objective\n\nBe the **first player** to reach **exactly 100** by sequentially manipulating a cumulative total starting from **1**. Players must carefully choose their operations to reach the target number without exceeding it.\n\n---\n\n## Setup\n\n- **Starting Total:** The game begins with a cumulative total of **1**.\n- **Players:** Two players take turns. Decide who goes first (e.g., flip a coin).\n\n---\n\n## Game Components\n\n- **Cumulative Total:** A shared number that both players manipulate during their turns. It starts at **1** and changes based on players' moves.\n- **Allowed Operations:**\n  - **Addition (+1):** Increase the cumulative total by **1**.\n  - **Multiplication (×2):** Multiply the cumulative total by **2**.\n\n---\n\n## Turns\n\n- **Turn Order:** Players alternate turns throughout the game.\n- **Player Actions:** On your turn, you must perform **one** of the allowed operations on the cumulative total:\n  - **Add 1**\n  - **Multiply by 2**\n- **Valid Moves:** The result of your operation must not exceed **100**.\n\n---\n\n## Rules and Mechanics\n\n1. **Performing Operations:**\n   - Choose **one** operation per turn.\n   - Apply the operation to the cumulative total to get a new total.\n\n2. **Winning the Game:**\n   - **Reach exactly 100:** If your operation brings the cumulative total to **exactly 100**, you **win** the game.\n\n3. **Losing the Game:**\n   - **Exceed 100:** If your operation causes the cumulative total to exceed **100**, you **lose** immediately.\n\n4. **Continuation of Play:**\n   - If neither player has won or lost, the game continues with the next player's turn.\n\n---\n\n## Scoring\n\n- **Winning:** The player who reaches exactly **100** wins the game.\n- **Losing:** The player who causes the total to exceed **100** loses the game.\n- **No Draws:** The game cannot end in a draw; there will always be a winner.\n\n---\n\n## Examples\n\n### Example Game Play\n\nBelow is an example of how a game might unfold:\n\n1. **Starting Total:** 1\n\n2. **Player 1's Turn:**\n   - Chooses to **multiply by 2**.\n   - New total: 1 × 2 = **2**\n\n3. **Player 2's Turn:**\n   - Chooses to **multiply by 2**.\n   - New total: 2 × 2 = **4**\n\n4. **Player 1's Turn:**\n   - Chooses to **add 1**.\n   - New total: 4 + 1 = **5**\n\n5. **Player 2's Turn:**\n   - Chooses to **multiply by 2**.\n   - New total: 5 × 2 = **10**\n\n6. **Player 1's Turn:**\n   - Chooses to **add 1**.\n   - New total: 10 + 1 = **11**\n\n7. **Player 2's Turn:**\n   - Chooses to **multiply by 2**.\n   - New total: 11 × 2 = **22**\n\n8. **Player 1's Turn:**\n   - Chooses to **multiply by 2**.\n   - New total: 22 × 2 = **44**\n\n9. **Player 2's Turn:**\n   - Chooses to **add 1**.\n   - New total: 44 + 1 = **45**\n\n10. **Player 1's Turn:**\n    - Chooses to **multiply by 2**.\n    - New total: 45 × 2 = **90**\n\n11. **Player 2's Turn:**\n    - Chooses to **add 1**.\n    - New total: 90 + 1 = **91**\n\n12. **Player 1's Turn:**\n    - Chooses to **add 1** (multiplying would exceed 100).\n    - New total: 91 + 1 = **92**\n\n13. **Players continue adding 1** on their turns.\n\n14. **Final Moves:**\n    - **Player 1's Turn:**\n      - New total: 99 + 1 = **100**\n      - **Player 1 wins!**\n\n---\n\n## Command-Line Interaction Example\n\nHere's how the game might look in a command-line interface:\n\n```\n--- Game Start ---\nStarting total is 1.\n\nPlayer 1's turn.\nCurrent total: 1\nChoose your operation ('add' to add 1, 'multiply' to multiply by 2): multiply\nYou chose to multiply by 2.\nNew total is 2.\n\nPlayer 2's turn.\nCurrent total: 2\nChoose your operation ('add' or 'multiply'): multiply\nYou chose to multiply by 2.\nNew total is 4.\n\nPlayer 1's turn.\nCurrent total: 4\nChoose your operation ('add' or 'multiply'): add\nYou chose to add 1.\nNew total is 5.\n\n[...game continues...]\n\nPlayer 1's turn.\nCurrent total: 99\nChoose your operation ('add' or 'multiply'): add\nYou chose to add 1.\nNew total is 100.\n\nCongratulations, Player 1! You reached exactly 100 and won the game!\n```\n\n---\n\n## Strategic Tips\n\n- **Plan Ahead:** Think several moves in advance to avoid setting up your opponent for a win.\n- **Control the Pace:** Use multiplication to leap ahead when advantageous, but be cautious not to overshoot.\n- **Force Your Opponent's Hand:** Try to put the cumulative total at a number where your opponent has no choice but to make a move that benefits you.\n- **Avoid Overstepping:** Be cautious when the total is high; a wrong multiplication can cause you to exceed 100 and lose.\n\n---\n\n## Summary\n\n\"Add or Multiply\" is a simple yet strategically rich game that's perfect for a command-line interface. With only two possible operations each turn, players must use foresight and planning to reach exactly 100 before their opponent. The game's simplicity makes it easy to code and quick to play, while the strategic depth ensures that skilled players can consistently outmaneuver less experienced opponents.\n\nEnjoy the challenge and may the best strategist win!\n\n---\n\n### Note to Players\n\n- Ensure that all arithmetic operations are performed accurately.\n- Keep track of the cumulative total after each turn.\n- Remember that you cannot skip a turn; you must perform one of the allowed operations.\n- Have fun and embrace the strategic battle of wits!",
    "**Prime Conquest**\n\n---\n\n**Objective:**\n\nBe the first player to collect a total of **five unique prime numbers** by strategically selecting numbers and challenging your opponent's choices.\n\n---\n\n**Setup:**\n\n- **Number Pool:** A shared pool of numbers ranging from **2 to 100**.\n- **Player Collections:** Both players start with an empty collection of prime numbers.\n- **First Turn:** Decide randomly (e.g., coin toss) which player goes first.\n\n---\n\n**Game Components:**\n\n1. **Number Pool (2-100):**\n   - A list of integers from 2 to 100 inclusive.\n   - Represents the available numbers that players can select.\n\n2. **Player Collections:**\n   - Each player maintains a personal list of prime numbers they have collected.\n   - Tracks progress toward the goal of collecting five primes.\n\n3. **Prime Verification Mechanism:**\n   - A method (algorithm or function) to determine if a selected number is prime.\n   - Essential for validating selections and resolving challenges.\n\n---\n\n**Turns:**\n\n- Players take turns in an alternating fashion.\n- On your turn, you must choose to either:\n  1. **Select a Number** from the pool.\n  2. **Challenge** the opponent's last selected number.\n\n---\n\n**Rules and Mechanics:**\n\n### 1. Selecting Numbers:\n\n- **Choosing a Number:**\n  - On your turn, you may select any remaining number from the number pool.\n  - Announce your selection to your opponent.\n\n- **Prime Verification:**\n  - After a number is selected, its primality is verified using the Prime Verification Mechanism.\n  - **If the number is prime:**\n    - It is added to your collection.\n  - **If the number is composite:**\n    - It is discarded from the game.\n    - **Penalty:** You lose your next turn.\n\n### 2. Challenging Opponent's Selection:\n\n- **When to Challenge:**\n  - Instead of selecting a number, you may challenge the opponent's **last selected number** if you believe it is not prime.\n  - You cannot challenge any earlier selections.\n\n- **Challenge Resolution:**\n  - The challenged number's primality is verified.\n  - **Successful Challenge (Number is composite):**\n    - The number is discarded.\n    - **Reward:** You steal one prime number from the opponent's collection (if any).\n    - **Penalty for Opponent:** They lose their next turn.\n  - **Failed Challenge (Number is prime):**\n    - **Penalty:** You lose one prime number from your collection (if any).\n    - **Reward for Opponent:** They gain an extra turn immediately after.\n\n- **Limitations:**\n  - You cannot challenge if the opponent has not made a selection on their last turn (e.g., if they skipped a turn due to a penalty).\n  - A number can only be challenged once.\n\n### 3. General Rules:\n\n- **Unique Numbers:**\n  - Once a number is selected and resolved, it is removed from the number pool and cannot be selected again.\n- **Collections:**\n  - Players cannot have duplicate prime numbers in their collection.\n- **Zero Primes Situation:**\n  - If a penalty requires a player to lose a prime number but their collection is empty, no primes are lost.\n- **Winning Condition:**\n  - The first player to have **five unique prime numbers** in their collection wins the game.\n\n---\n\n**Scoring:**\n\n- **Tracking Collections:**\n  - Players keep a visible record of their collected prime numbers.\n  - Collections are updated after each turn.\n\n- **Winning the Game:**\n  - Monitor the number of primes in both collections.\n  - The game ends immediately when a player reaches five primes.\n\n---\n\n**Example Gameplay:**\n\n### Initial Setup:\n\n- Number Pool: 2 to 100.\n- Player A and Player B have empty collections.\n- Player A goes first.\n\n### Turn Sequence:\n\n#### **Turn 1 - Player A:**\n\n- **Action:** Selects number **17**.\n- **Resolution:** 17 is prime.\n- **Result:** Added to Player A's collection.\n- **Player A's Collection:** [17]\n\n#### **Turn 2 - Player B:**\n\n- **Action:** Selects number **20**.\n- **Resolution:** 20 is composite.\n- **Result:** Discarded from the game.\n- **Penalty:** Player B loses their next turn.\n- **Player B's Collection:** []\n\n#### **Turn 3 - Player A:**\n\n- **Action:** Selects number **23**.\n- **Resolution:** 23 is prime.\n- **Result:** Added to Player A's collection.\n- **Player A's Collection:** [17, 23]\n\n#### **Turn 4 - Player B:**\n\n- **Action:** **Turn Skipped** due to previous penalty.\n- **Player B's Collection:** []\n\n#### **Turn 5 - Player A:**\n\n- **Action:** Selects number **39**.\n- **Resolution:** 39 is composite.\n- **Result:** Discarded from the game.\n- **Penalty:** Player A loses their next turn.\n- **Player A's Collection:** [17, 23]\n\n#### **Turn 6 - Player B:**\n\n- **Action:** Selects number **19**.\n- **Resolution:** 19 is prime.\n- **Result:** Added to Player B's collection.\n- **Player B's Collection:** [19]\n\n#### **Turn 7 - Player A:**\n\n- **Action:** **Turn Skipped** due to previous penalty.\n- **Player A's Collection:** [17, 23]\n\n#### **Turn 8 - Player B:**\n\n- **Action:** Selects number **15**.\n- **Resolution:** 15 is composite.\n- **Result:** Discarded from the game.\n- **Penalty:** Player B loses their next turn.\n- **Player B's Collection:** [19]\n\n#### **Turn 9 - Player A:**\n\n- **Action:** Chooses to **Challenge** Player B's last selection (**15**).\n- **Resolution:** Cannot challenge because Player B's last action was a penalty, not a selection.\n- **Result:** Challenge is invalid.\n- **Rule Reminder:** Challenges can only target the opponent's last selection.\n- **Action Adjustment:** Player A decides to select number **29** instead.\n- **Resolution:** 29 is prime.\n- **Result:** Added to Player A's collection.\n- **Player A's Collection:** [17, 23, 29]\n\n#### **Turn 10 - Player B:**\n\n- **Action:** **Turn Skipped** due to penalty from selecting 15.\n- **Player B's Collection:** [19]\n\n#### **Turn 11 - Player A:**\n\n- **Action:** Selects number **25**.\n- **Resolution:** 25 is composite.\n- **Result:** Discarded from the game.\n- **Penalty:** Player A loses their next turn.\n- **Player A's Collection:** [17, 23, 29]\n\n#### **Turn 12 - Player B:**\n\n- **Action:** Chooses to **Challenge** Player A's last selection (**25**).\n- **Resolution:** Cannot challenge because Player A's last action resulted in a penalty, not a valid selection.\n- **Result:** Challenge is invalid.\n- **Rule Reminder:** Challenges can only target the opponent's last selection.\n- **Action Adjustment:** Player B decides to select number **31** instead.\n- **Resolution:** 31 is prime.\n- **Result:** Added to Player B's collection.\n- **Player B's Collection:** [19, 31]\n\n---\n\n**Command-Line Interaction Example:**\n\nBelow is a sample interaction for a single turn in the game.\n\n#### **Player A's Turn:**\n\n```\nAvailable Numbers: [2-16,18-100]\nYour Primes: [17, 23, 29]\nOpponent's Primes: [19, 31]\nChoose your action:\n1. Select a number\n2. Challenge opponent's last selection\nEnter 1 or 2: 2\nYou have chosen to challenge your opponent's last selection.\n\nOpponent's last selected number: 31\nChecking if 31 is prime...\n\nResult: 31 is prime.\nChallenge failed.\nPenalty: You lose one of your prime numbers.\n\nRemoving the highest prime from your collection: 29\nOpponent gains an extra turn.\n```\n\n#### **Player B's Extra Turn:**\n\n```\nAvailable Numbers: [2-16,18-28,30-100]\nYour Primes: [19, 31]\nOpponent's Primes: [17, 23]\n\nIt's your extra turn.\nChoose your action:\n1. Select a number\n2. Challenge opponent's last selection\nEnter 1 or 2: 1\nEnter the number you wish to select: 37\nYou have selected 37.\nChecking if 37 is prime...\n\nResult: 37 is prime.\n37 added to your collection.\n```\n\n---\n\n**Strategies and Tips:**\n\n- **Prime Selection Knowledge:**\n  - Familiarize yourself with prime numbers between 2 and 100.\n  - This will improve your selection accuracy and challenge success.\n\n- **Risk Management:**\n  - Be cautious when selecting numbers you're unsure about to avoid penalties.\n  - Evaluate the risk and reward before deciding to challenge.\n\n- **Observing Opponent's Behavior:**\n  - Keep track of the numbers your opponent selects.\n  - If they seem uncertain, it might be an opportunity to challenge.\n\n- **Managing Your Collection:**\n  - Protect your prime numbers by avoiding unnecessary challenges.\n  - Remember that losing primes can set back your progress toward victory.\n\n- **Turn Penalties:**\n  - Take advantage when your opponent loses a turn by selecting primes or strategically challenging.\n\n---\n\n**Conclusion:**\n\n\"Prime Conquest\" is a strategic game that combines number theory with tactical decision-making. Players must use their knowledge of prime numbers and anticipate their opponent's moves to outmaneuver them. The balance of selecting primes and challenging opponents creates a dynamic and competitive environment, ensuring that skilled players can consistently excel.\n\n---\n\n**Note to Players:**\n\n- Use available resources wisely; consider keeping a list of primes handy if allowed.\n- Stay engaged and think ahead to maximize your chances of winning.\n- Enjoy the challenge and have fun mastering the \"Prime Conquest\"!",
    "# Number Duel: Rule Book\n\n---\n\n## Objective\n\n**Number Duel** is a strategic two-player command-line game where the goal is to reduce your opponent's Health Points (HP) from **100** to **0** before they do the same to you. Players achieve victory by outsmarting their opponent through clever selection of attack numbers, dealing damage based on the difference between their chosen numbers.\n\n---\n\n## Setup\n\n1. **Health Points Initialization**:\n   - Both players start with **100 Health Points (HP)**.\n2. **Attack Options**:\n   - Players have access to attack numbers ranging from **1** to **10**.\n3. **No Repeat Rule Initialization**:\n   - Players cannot select the same attack number in two consecutive turns.\n\n---\n\n## Game Components\n\n1. **Health Points (HP)**:\n   - Represents the player's vitality.\n   - Starts at **100 HP** for each player.\n   - Decreases when the player takes damage.\n2. **Attack Numbers**:\n   - Integers from **1** to **10**.\n   - Used to determine the amount of damage dealt to the opponent.\n3. **No Repeat Rule Tracker**:\n   - Keeps track of each player's previously used attack number to enforce the no repeat rule.\n\n---\n\n## Turns\n\n1. **Simultaneous Selection**:\n   - Both players **secretly choose** an attack number from **1** to **10**.\n2. **Reveal and Resolve**:\n   - Chosen numbers are revealed **simultaneously**.\n   - Damage calculations are performed based on the revealed numbers.\n3. **Update Health Points**:\n   - Players' HP are adjusted according to the damage dealt.\n4. **Enforce No Repeat Rule**:\n   - Players update their attack history to ensure they do not repeat the same attack number in the next turn.\n5. **Progression**:\n   - Steps 1-4 are repeated in each turn until a player's HP is reduced to **0** or below.\n\n---\n\n## Rules and Mechanics\n\n1. **Choosing Attack Numbers**:\n   - On each turn, players select an attack number (**1** to **10**) without knowledge of the opponent's choice.\n   - Players **cannot** choose the **same attack number they used in the immediate previous turn**.\n2. **Damage Calculation**:\n   - If one player's attack number is **higher** than the opponent's, they deal damage equal to the **difference between the numbers**.\n   - If both players choose the **same number**, **no damage** is dealt.\n3. **Health Points Reduction**:\n   - Damage is **subtracted** from the opponent's HP.\n   - HP cannot go below **0**; once it reaches **0**, the player loses.\n4. **No Repeat Rule**:\n   - Players must select a **different attack number** from their previous turn.\n   - Violation of this rule results in an **automatic forfeit** of the game.\n5. **Winning the Game**:\n   - The game ends when a player's HP is reduced to **0** or below.\n   - The opposing player is declared the **winner**.\n6. **Game Integrity**:\n   - Players must make honest selections and follow the rules to ensure fair play.\n\n---\n\n## Scoring\n\n- **Health Points (HP)**:\n  - Each player starts with **100 HP**.\n  - HP decreases based on damage received each turn.\n- **Damage Dealt**:\n  - Calculated as the **difference** between the higher and lower attack numbers when they are not equal.\n- **Victory Condition**:\n  - Reduce the opponent's HP to **0** or below to win the game.\n\n---\n\n## Examples\n\n### Example Game Turn-by-Turn\n\n**Initial State**:\n- Player A HP: 100\n- Player B HP: 100\n\n---\n\n**Turn 1**:\n\n- **Player A** chooses **7**.\n- **Player B** chooses **5**.\n- **Reveal**:\n  - Player A's attack: 7\n  - Player B's attack: 5\n- **Damage Calculation**:\n  - Player A deals **7 - 5 = 2** damage to Player B.\n- **Update HP**:\n  - Player A HP: **100**\n  - Player B HP: **100 - 2 = 98**\n\n---\n\n**Turn 2**:\n\n- **Player A** cannot choose **7** (used in previous turn). Chooses **6**.\n- **Player B** cannot choose **5** (used in previous turn). Chooses **8**.\n- **Reveal**:\n  - Player A's attack: 6\n  - Player B's attack: 8\n- **Damage Calculation**:\n  - Player B deals **8 - 6 = 2** damage to Player A.\n- **Update HP**:\n  - Player A HP: **100 - 2 = 98**\n  - Player B HP: **98**\n\n---\n\n**Turn 3**:\n\n- **Player A** cannot choose **6**. Chooses **9**.\n- **Player B** cannot choose **8**. Chooses **7**.\n- **Reveal**:\n  - Player A's attack: 9\n  - Player B's attack: 7\n- **Damage Calculation**:\n  - Player A deals **9 - 7 = 2** damage to Player B.\n- **Update HP**:\n  - Player A HP: **98**\n  - Player B HP: **98 - 2 = 96**\n\n---\n\n**Turn 4**:\n\n- **Player A** cannot choose **9**. Chooses **5**.\n- **Player B** cannot choose **7**. Chooses **6**.\n- **Reveal**:\n  - Player A's attack: 5\n  - Player B's attack: 6\n- **Damage Calculation**:\n  - Player B deals **6 - 5 = 1** damage to Player A.\n- **Update HP**:\n  - Player A HP: **98 - 1 = 97**\n  - Player B HP: **96**\n\n---\n\n**...Game Continues Until a Player's HP Reaches 0...**\n\n---\n\n## Command-Line Interaction Example\n\nAssuming a simple command-line interface where players input their attack numbers:\n\n```\n=== Turn 1 ===\nPlayer A, enter your attack number (1-10, not repeating previous number): 7\nPlayer B, enter your attack number (1-10, not repeating previous number): 5\n\nResult:\n- Player A's attack: 7\n- Player B's attack: 5\n- Player A deals 2 damage to Player B.\n\nHealth Points:\n- Player A HP: 100\n- Player B HP: 98\n\n=== Turn 2 ===\nPlayer A, enter your attack number (cannot be 7): 6\nPlayer B, enter your attack number (cannot be 5): 8\n\nResult:\n- Player A's attack: 6\n- Player B's attack: 8\n- Player B deals 2 damage to Player A.\n\nHealth Points:\n- Player A HP: 98\n- Player B HP: 98\n\n=== Turn 3 ===\nPlayer A, enter your attack number (cannot be 6): 9\nPlayer B, enter your attack number (cannot be 8): 7\n\nResult:\n- Player A's attack: 9\n- Player B's attack: 7\n- Player A deals 2 damage to Player B.\n\nHealth Points:\n- Player A HP: 98\n- Player B HP: 96\n\n...and so on until one player's HP reaches 0.\n```\n\n---\n\n## Strategic Tips\n\n- **Predict Opponent's Moves**:\n  - Try to anticipate which numbers your opponent might choose based on their previous choices.\n- **Vary Your Attack Numbers**:\n  - Avoid patterns in your number selection to prevent the opponent from predicting your moves.\n- **Manage High Numbers**:\n  - Higher numbers can deal more damage if the opponent chooses a much lower number, but they may also leave you vulnerable if the opponent chooses an even higher number.\n- **Use No Repeat Rule to Your Advantage**:\n  - Keep track of numbers your opponent cannot use in the next turn to narrow down their possible choices.\n\n---\n\nEnjoy the game and may the best strategist win!"
  ]
}