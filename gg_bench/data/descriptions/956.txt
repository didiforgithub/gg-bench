# Divisor Duel

## Objective

Divisor Duel is a two-player, turn-based game of numerical strategy. The primary goal is to be the player who reduces the shared number **N** to **exactly zero** by subtracting its divisors. Players take turns choosing divisors of the current number to subtract, and the first player to bring the number down to zero **wins** the game. There is no possibility of a draw; the game continues until one player achieves victory.

---

## Setup

1. **Starting Number**: Decide on a positive integer **N** to start the game. This can be any integer greater than 1 (e.g., **N = 30**).
2. **Player Order**: Determine which player will take the first turn. This can be decided by a coin toss or mutual agreement.
3. **Game Interface**: The game is played in a command-line interface where players input their moves when prompted.

---

## Game Components

- **Shared Number (N)**: The central element of the game, which both players manipulate. It starts at the agreed-upon starting number and changes as players subtract divisors.
- **Divisors**: Positive integers that divide the current number **N** without leaving a remainder. Divisors include **1** and all numbers less than or equal to **N** that satisfy this condition.

---

## Turns

1. **Turn Structure**:
   - Players alternate turns, starting with the player designated to go first.
   - On a player's turn, they must perform the following actions:
     - **Identify all possible divisors** of the current number **N**.
     - **Choose one divisor** from the list of possible divisors.
     - **Subtract** the chosen divisor from **N**.
   - The chosen divisor must be a **positive integer divisor** of **N**.
2. **Input Format**:
   - When prompted, the player enters their chosen divisor into the command-line interface.
3. **Turn Progression**:
   - After the subtraction, the updated value of **N** is announced.
   - The next player's turn begins with the new value of **N**.

---

## Rules and Mechanics

1. **Valid Moves**:
   - Players can only subtract **divisors** of the current number **N**.
   - The divisor must be a **positive integer greater than zero** and **less than or equal to N**.
2. **Subtraction**:
   - The chosen divisor is subtracted from **N** to form a new **N**.
   - The new value of **N** must be **zero or a positive integer**.
3. **Winning the Game**:
   - The player who reduces **N** to **exactly zero** on their turn **wins** the game.
4. **No Valid Moves**:
   - If a player cannot find any valid divisors to subtract (i.e., when **N** is zero), the game ends, and the last player to make a valid move is declared the winner.
5. **Example of Divisors**:
   - For **N = 12**, the divisors are **1, 2, 3, 4, 6, 12**.
   - Players can choose any of these numbers to subtract.

---

## Scoring

- **Winning**:
  - The player who reduces **N** to zero wins the game.
- **Tracking**:
  - No points are tracked beyond determining the winner of the game.
  - Players may choose to play multiple rounds and keep a tally of wins to declare an overall champion after a set number of games.

---

## Examples

### Example 1: Strategic Gameplay

**Starting Number**: N = 10

**Turn Sequence**:

1. **Player 1's Turn**:
   - Possible divisors of 10: **1, 2, 5, 10**
   - Player 1 chooses to subtract **5**.
   - New N: 10 - 5 = **5**
2. **Player 2's Turn**:
   - Possible divisors of 5: **1, 5**
   - Player 2 chooses to subtract **5**.
   - New N: 5 - 5 = **0**
   - **Player 2 wins!**

### Example 2: Command-Line Interaction

**Starting Number**: N = 15

**Game Play**:

- **Player 1's Turn**:
  - **N = 15**
  - Divisors of 15: 1, 3, 5, 15
  - Command-line Prompt: `Player 1, enter a divisor of 15:`
  - Player 1 inputs: `5`
  - New N: 15 - 5 = **10**
- **Player 2's Turn**:
  - **N = 10**
  - Divisors of 10: 1, 2, 5, 10
  - Command-line Prompt: `Player 2, enter a divisor of 10:`
  - Player 2 inputs: `2`
  - New N: 10 - 2 = **8**
- **Player 1's Turn**:
  - **N = 8**
  - Divisors of 8: 1, 2, 4, 8
  - Command-line Prompt: `Player 1, enter a divisor of 8:`
  - Player 1 inputs: `4`
  - New N: 8 - 4 = **4**
- **Player 2's Turn**:
  - **N = 4**
  - Divisors of 4: 1, 2, 4
  - Command-line Prompt: `Player 2, enter a divisor of 4:`
  - Player 2 inputs: `4`
  - New N: 4 - 4 = **0**
  - **Player 2 wins!**

---

## Strategy Tips

- **Plan Ahead**: Anticipate your opponent's possible moves based on the divisors of resulting numbers.
- **Force Moves**: Try to leave numbers with limited divisors to force your opponent into a losing position.
- **Avoid Leaving N as a Prime Number**: Primes have only two divisors (1 and themselves), which could limit your options.
- **Control the Game Flow**: Subtract divisors that lead to numbers beneficial to your strategy.

---

## Conclusion

Divisor Duel is a simple yet strategic game that challenges players to think ahead and use their knowledge of divisibility. With straightforward rules and quick gameplay, it's easy to code and perfect for a command-line interface. The absence of a draw mechanism ensures that each game is decisive, and skilled players can develop strategies to consistently outplay less experienced opponents. Enjoy the challenge and may the best mathematician win!

---