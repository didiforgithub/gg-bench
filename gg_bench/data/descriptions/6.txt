**Sequence Build**

*Rule Book*

---

**Objective:**

Be the first player to successfully build a sequence of five numbers where each number is either one greater or one less than the previous number in the sequence.

---

**Setup:**

- The game utilizes a **deck of cards** numbered from **1 to 10**, with each number appearing **twice**, creating a **20-card deck**.
- **Shuffle** the deck thoroughly.
- **Decide randomly** who will take the first turn.
- Each player starts with an **empty sequence**.

---

**Game Components:**

1. **Deck of Number Cards:**

   - **Appearance:** Each card displays a number from **1** to **10**.
   - **Quantity:** Two of each number, totaling **20 cards**.
   - **Functionality:** Cards are drawn from the deck and used to build sequences.

2. **Player Sequences:**

   - **Appearance:** A list or array of numbers representing the player's current sequence.
   - **Functionality:** Players add numbers to their sequence according to the rules.

3. **Discard Pile:**

   - **Appearance:** A pile where discarded cards are placed, removed from play.
   - **Functionality:** Keeps track of cards no longer in the deck.

---

**Turns:**

- Players take turns in **alternating order**.
- On each turn, a player performs the following actions:

  1. **Draw a Card:**
     - Draw the **top card** from the deck.

  2. **Decision Phase:**
     - **Option A:** **Add** the drawn card to their sequence.
     - **Option B:** **Discard** the drawn card to the discard pile.

- If adding the card to the sequence:
  - The card can be placed at the **beginning** or the **end** of their sequence.
  - The card must satisfy the **Sequence Rule**.

- The turn **ends** after the card is either added to the sequence or discarded.

---

**Rules and Mechanics:**

1. **Sequence Rule:**

   - A sequence must start with **any single number**.
   - Each subsequent number **added** to the sequence must be either:
     - **One higher** than the adjacent number, or
     - **One lower** than the adjacent number.
   - The sequence can be built from **both ends** (adding to the beginning or the end).

2. **Adding Cards to Sequence:**

   - When adding a card, it must connect properly to the existing sequence:
     - **Beginning of Sequence:**
       - The new number must be **one higher or one lower** than the current first number.
     - **End of Sequence:**
       - The new number must be **one higher or one lower** than the current last number.

3. **Discarding Cards:**

   - If the drawn card **cannot** be added to the sequence or the player **chooses not to** add it, it must be **discarded**.
   - Discarded cards are **removed from play** and **cannot** be used again.

4. **Winning the Game:**

   - The first player to **complete a sequence of five numbers** following the Sequence Rule **wins** the game.

5. **Exhausted Deck Condition:**

   - If the **deck runs out of cards** before either player completes their sequence:
     - The player with the **longer valid sequence** **wins**.
     - If both players have sequences of the **same length**, the player whose sequence has the **highest sum** of numbers **wins**.
     - This rule ensures there is **no draw**.

6. **Invalid Moves:**

   - If a player **adds** a card to their sequence that **does not** follow the Sequence Rule, they **immediately lose** the game.

---

**Scoring:**

- Victory is achieved by being the **first** to complete a **valid sequence of five numbers**.
- There is **no point system**; the focus is on sequence building.
- In the case of an exhausted deck, the **length** and then the **sum** of the sequences determine the winner.

---

**Examples:**

***Example 1:***

- **Player 1's Sequence:** `[7]`
- **Player 1 Draws:** `8`
  - **Option:** Add `8` to the **end** or **beginning**.
  - **Action:** Adds `8` to the **end**: `[7, 8]`

- **Player 2's Sequence:** `[5]`
- **Player 2 Draws:** `3`
  - **Option:** Add `3` to the sequence or discard.
  - **Action:** Discards `3` (cannot connect to `5`).

---

***Example 2:***

- **Player 1's Sequence:** `[7, 8]`
- **Player 1 Draws:** `6`
  - **Options:** Add `6` to the **beginning** or **end**, or discard.
  - **Action:** Adds `6` to the **beginning**: `[6, 7, 8]`

- **Player 2's Sequence:** `[5]`
- **Player 2 Draws:** `6`
  - **Options:** Add `6` to the sequence or discard.
  - **Action:** Adds `6` to the **end**: `[5, 6]`

---

***Example 3:***

- **Player 1's Sequence:** `[6, 7, 8]`
- **Player 1 Draws:** `5`
  - **Options:** Add `5` to the **beginning**, or discard.
  - **Action:** Adds `5` to the **beginning**: `[5, 6, 7, 8]`

- **Player 2's Sequence:** `[5, 6]`
- **Player 2 Draws:** `4`
  - **Options:** Add `4` to the **beginning** or **end**, or discard.
  - **Action:** Adds `4` to the **beginning**: `[4, 5, 6]`

---

***Example 4:***

- **Player 1's Sequence:** `[5, 6, 7, 8]`
- **Player 1 Draws:** `9`
  - **Options:** Add `9` to the **end**, or discard.
  - **Action:** Adds `9` to the **end**: `[5, 6, 7, 8, 9]`
  - **Result:** **Player 1 wins** by completing a sequence of **five numbers**.

---

***Exhausted Deck Scenario:***

- **Player 1's Sequence:** `[2, 3, 4, 5]` (sum `14`)
- **Player 2's Sequence:** `[7, 8, 9]` (sum `24`)
- **Deck is exhausted.**
- **Result:** **Player 1 wins** due to a **longer sequence**.

---

**Strategy Tips:**

- **Plan Ahead:**
  - Keep track of which numbers have been drawn to estimate the likelihood of drawing numbers you need.

- **Flexibility:**
  - Consider building your sequence in both directions to maximize opportunities to add cards.

- **Risk Management:**
  - Sometimes it's better to discard a card that doesn't fit well, in hopes of drawing a better card later.

---

**Game Flow Example:**

1. **Initial Turn:**

   - **Player 1** draws `7`; adds to sequence: `[7]`.
   - **Player 2** draws `5`; adds to sequence: `[5]`.

2. **Subsequent Turns:**

   - **Player 1** draws `6`; adds to sequence: `[6, 7]`.
   - **Player 2** draws `6`; adds to sequence: `[5, 6]`.

3. **Mid-game:**

   - **Player 1** draws `8`; adds to sequence: `[6, 7, 8]`.
   - **Player 2** draws `4`; adds to sequence: `[4, 5, 6]`.

4. **Endgame:**

   - **Player 1** draws `5`; adds to beginning: `[5, 6, 7, 8]`.
   - **Player 2** draws `7`; cannot add (doesn't connect to `4` or `6`), discards.

5. **Winning Move:**

   - **Player 1** draws `9`; adds to the end: `[5, 6, 7, 8, 9]` and **wins**.

---

**Ensuring No Draws:**

- The game rules are designed to **prevent draws**:
  - **Sequence Length** is the first tie-breaker.
  - **Sequence Sum** is the second tie-breaker if sequences are equal in length.
  - This ensures that there is always a **distinct winner**.

---

**Summary:**

"Sequence Build" is a two-player, turn-based game played in a command-line interface. It's simple to code and play, yet offers strategic depth. Players must decide wisely when to add to their sequence or discard, aiming to complete a sequence of five consecutive numbers that increase or decrease by one. With clear rules and mechanics, the game provides an engaging experience where skill can consistently outperform luck.

---

Enjoy challenging your opponent in "Sequence Build" and may the best strategist win!