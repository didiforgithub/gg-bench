# Power Play: A Two-Player Command-Line Game

## Objective

**Power Play** is a strategic two-player game where each player aims to reach a total score of **exactly 100** by multiplying their current total with carefully chosen numbers. The primary goal is to be the first player to reach **exactly 100** without exceeding it. Overshooting the total leads to a loss, so players must plan their moves wisely to achieve victory.

## Setup

- **Starting Total**: Both players begin with a total score of **1**.
- **Available Numbers**: Each turn, players can choose any number between **2 and 9** (inclusive) to multiply their current total.
- **Command-Line Interface**: The game is played in a command-line interface where players input their chosen numbers when prompted.

## Game Components

- **Player Totals**: Each player has a personal total score, starting at **1**.
- **Available Multipliers**: Numbers **2** through **9** are available for multiplication each turn.
- **Game Interface**: A simple command-line program that tracks and displays totals and prompts players for input.

## Turns

1. **Turn Order**: Players decide who goes first (e.g., coin toss, mutual agreement).
2. **Player Action**: On their turn, a player selects a number between **2 and 9**.
3. **Updating Total**: The chosen number is multiplied by the player's current total to get the new total.
4. **Turn Progression**: Turns alternate between players until the game ends.

   **Example Turn Structure**:
   - **Player 1's Turn**:
     - Current Total: 1
     - Chooses to multiply by 5
     - New Total: 1 * 5 = 5
   - **Player 2's Turn**:
     - Current Total: 1
     - Chooses to multiply by 4
     - New Total: 1 * 4 = 4

## Rules and Mechanics

### Core Rules

- **Multiplication Choice**: Players must choose a multiplier between **2 and 9** on their turn.
- **Exact Target**: The goal is to reach a total of **exactly 100**.
- **Exceeding 100**: If a player's total exceeds **100** after their turn, they **immediately lose** the game.
- **Valid Numbers**: Only integers between **2 and 9** can be selected.
- **No Skip Turns**: Players must make a move on their turn; skipping is not allowed.

### Special Conditions

- **Strategic Planning**: Players should plan ahead to avoid overshooting **100** and to potentially force their opponent into an unwinnable position.
- **Repeated Numbers**: Players can use any valid number multiple times throughout the game.

### Interactions

- **Shared Knowledge**: Both players can see each other's totals after each turn.
- **Input Validation**: The game should validate inputs to ensure numbers are within the allowed range.

## Scoring

- **Winning the Game**: The first player to reach a total of **exactly 100** wins the game.
- **Losing the Game**:
  - **Overshooting**: If a player's total exceeds **100**, they lose immediately.
  - **Forced Error**: A skilled player can force an unskilled player into a position where any available move will cause them to exceed **100**.

## Examples

### Sample Game Play

#### Initial Setup

- **Player 1 Total**: 1
- **Player 2 Total**: 1

#### Turns

1. **Player 1's Turn**:
   - Current Total: 1
   - Chooses multiplier: **5**
   - Calculation: 1 * 5 = **5**
   - New Total: **5**
   - *Command-Line Interaction*:
     ```
     Player 1, enter your multiplier (2-9): 5
     Your new total is 5.
     ```

2. **Player 2's Turn**:
   - Current Total: 1
   - Chooses multiplier: **4**
   - Calculation: 1 * 4 = **4**
   - New Total: **4**
   - *Command-Line Interaction*:
     ```
     Player 2, enter your multiplier (2-9): 4
     Your new total is 4.
     ```

3. **Player 1's Turn**:
   - Current Total: 5
   - Chooses multiplier: **6**
   - Calculation: 5 * 6 = **30**
   - New Total: **30**
   - *Command-Line Interaction*:
     ```
     Player 1, enter your multiplier (2-9): 6
     Your new total is 30.
     ```

4. **Player 2's Turn**:
   - Current Total: 4
   - Chooses multiplier: **7**
   - Calculation: 4 * 7 = **28**
   - New Total: **28**
   - *Command-Line Interaction*:
     ```
     Player 2, enter your multiplier (2-9): 7
     Your new total is 28.
     ```

5. **Player 1's Turn**:
   - Current Total: 30
   - Chooses multiplier: **3**
   - Calculation: 30 * 3 = **90**
   - New Total: **90**
   - *Command-Line Interaction*:
     ```
     Player 1, enter your multiplier (2-9): 3
     Your new total is 90.
     ```

6. **Player 2's Turn**:
   - Current Total: 28
   - Chooses multiplier: **4**
   - Calculation: 28 * 4 = **112**
   - New Total: **112**
   - *Exceeds 100, Player 2 loses*
   - *Command-Line Interaction*:
     ```
     Player 2, enter your multiplier (2-9): 4
     Your new total is 112.
     You have exceeded 100. Player 1 wins!
     ```

### Strategic Depth

- **Skilled Play**: A skilled player will anticipate future totals and choose multipliers that limit the opponent's options.
- **Forcing Moves**: Players can force opponents into positions where any multiplier would cause them to exceed **100**.

## Tips for Players

- **Monitor Opponent's Total**: Keep track of the opponent's total to anticipate their possible moves.
- **Calculate Ahead**: Before choosing a multiplier, consider the result of the multiplication and how it affects future options.
- **Avoid High Multipliers Near 100**: Be cautious when your total is high; large multipliers can easily cause you to exceed **100**.
- **Force the Opponent's Hand**: Aim to leave the opponent with totals that limit their safe multipliers.

## Summary

**Power Play** is a simple yet strategic game that combines basic multiplication with foresight and planning. By carefully choosing multipliers and anticipating the opponent's moves, players can craft a path to exactly **100** while avoiding the pitfall of overshooting the target. The game is quick to play, easy to code, and offers depth for players to develop and refine their strategies.

---

Enjoy the challenge of **Power Play** and may the best strategist win!